{"version":3,"sources":["panels/functions/fetch.js","panels/Home.js","panels/Events.js","panels/Info.js","panels/Achivements.js","panels/Profile.js","panels/listAmbassador.js","panels/editProfile.js","panels/Badge.js","panels/AddEventFirst.js","panels/AddEventSecondVnesh.js","panels/AddEventSecondVnutr.js","panels/AddEventSecondHelp.js","panels/AddEventVneshOff.js","panels/AddEventVnutrOnl.js","panels/AddEventVnutrOff.js","panels/AddEventHelpOnl.js","panels/AddEventHelpOff.js","panels/profilemrg.js","panels/functions/excelReport.js","panels/ProfileForInfo.js","panels/EventsForInfo.js","App.js","index.js"],"names":["postRequest","method","url","body","fetch","headers","then","response","json","Home","fetchedUser","id","go","React","useState","user","setUser","nameEvent","setNameEvent","place","setPlace","date","setDate","companyRole","links","setLinks","participants","setParticipants","eventType","SetEventType","description","SetDescription","notes","SetNotes","callback","setCallback","setFetch","JSON","stringify","data","catch","err","console","log","left","style","color","onClick","data-to","onChange","event","target","value","type","name","top","required","slice","formatDate","placeholder","backgroundColor","size","ambassador","fullName","university","participationForm","eventForm","eventPlace","participantsCallback","uploadsLinks","publicationLinks","onMouseUp","ROUTES","Events","isLoading","setIsLoading","eventsData","setEventsData","activeModal","setActivePanel","eventId","setEventId","modalBack","display","alignItems","flexDirection","marginTop","length","modal","onClose","header","href","activePanel","map","key","_id","Fragment","fontWeight","marginBottom","subheader","asideMode","text","width","height","icon","stretched","Info","mode","expandable","before","Achivements","users","setUsers","request","setRequest","role","vkID","after","universityShortly","margin","universityShorlty","Profile","profileModal","multiline","indicator","clothingSize","personalPostalAddress","latinFullName","facultyFull","facultyShortly","statusInUniversity","specialty","universityPostalAddress","rectorFullName","rectorPostalAddress","background","shadow","fill","filter","i","n","events","src","photo_100","fontSize","town","birthday","formatPhoneNumber","phoneNumber","personalEmail","className","ListAmbassador","ambassadors","setAmbassadors","disabled","actions","data-id","caption","Editprofile","setUniversity","phone","setPhone","personalemail","setPersonalEmail","setBirthday","universitypostaladdress","setUniversityPostalAddress","rectorfullname","setRectorFullName","rectorpostaladdress","setRectorPostalAddress","statusinuniversity","setStatusInUniversity","facultyfull","setFacultyFull","facultyshortly","setFacultyShortly","setSpecialty","personalpostaladdress","setPersonalPostalAddress","clothingsize","setClothingSize","setFullName","fullNameLatin","setFullNameLatin","setTown","setUniversityShortly","pattern","bottom","ype","avatar","achievements","avatars","Badge","separator","borderRadius","alt","objectFit","objectPosition","zIndex","AddEventFirst","AddEventSecondVnesh","AddEventSecondVnutr","AddEventSecondHelp","AddEventVneshOff","AddEventVnutrOnl","AddEventVnutrOff","AddEventHelpOnl","AddEventHelpOff","ProfileMrg","ext","findExtension","sortData","element","__v","$","ajax","datatype","contentType","done","result","urlDownload","window","location","fail","f","alert","responseText","excelReport","ProfileForInfo","info","EventsForInfo","App","popout","setPopout","setInfo","useEffect","a","bridge","send","subscribe","detail","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0930a43.chunk.js","sourcesContent":["export function postRequest(method, url, body) {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return fetch(url, { method: method, headers: headers, body }).then(response => {\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport function getRequest(method, url) {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return fetch(url, { method: method, headers: headers }).then(response => {\r\n        return response.json()\r\n    })\r\n}","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst Home = ({ fetchedUser, id, go }) => {\n\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\nif (fetch){\n\tif (fetchedUser != null) {\n\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t.then(data => {\n\t\t\t\tsetUser(data[0])\n\t\t\t\tsetFetch(false)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university,\n\t\t\tparticipationForm: 'Внешнее',\n\t\t\teventForm: 'Онлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ВНЕШНЕЕ МЕРОПРИЯТИЕ ОНЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnesh\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"name\" top=\"Дата проведения\" required/>\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required/>\n\n\t\t\t\t\t<Select  onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\n\t\t\t\t\t\t<option value=\"Выступление\">Выступление</option>\n\t\t\t\t\t\t<option value=\"Пост в соц.сетях\">Пост в соц.сетях</option>\n\t\t\t\t\t\t<option value=\"Конкурс\">Конкурс</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\"/>\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\t\t\t\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default Home;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\n// import {excelReport} from \"./functions/excelReport\"\nimport { View, Div, ModalRoot, ModalPage, ModalPageHeader, Banner, Group, PanelHeader, Panel, PanelHeaderButton, Epic, Tabbar, TabbarItem, ScreenSpinner, Cell, InfoRow, Link, Placeholder } from '@vkontakte/vkui';\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel'\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\n\nconst requestURL = \"https://ambassador-todo.herokuapp.com/event/ambassador\"\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\nconst ROUTES = {\n    EVENTSINFO: 'eventsInfo'\n};\n\n\n\nconst Events = ({ fetchedUser, id, go }) => {\n\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [eventsData, setEventsData] = React.useState();\n    const [activeModal, setActivePanel] = React.useState(null);\n    const [eventId, setEventId] = React.useState(0);\n    const [fetch, setFetch] = React.useState(true);\n\n    const modalBack = () => {\n        setActivePanel(null);\n    };\n\n    if (fetch) {\n        if (fetchedUser != null) {\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n            postRequest('POST', userRequestURL, vkID)\n                .then(data => {\n                    postRequest('POST', requestURL, JSON.stringify({ ambassador: data[0].fullName }))\n                        .then(data => {\n                            setEventsData(data)\n                            setIsLoading(false)\n                            setFetch(false)\n                        })\n                        .catch(err => console.log(err))\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    if (isLoading === true) {\n        return (\n            <Panel id={id}>\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\n                </div>\n            </Panel>\n        )\n    }\n    if (eventsData.length > 0) {\n        const modal = (\n            <ModalRoot\n                activeModal={activeModal}\n                onClose={modalBack}\n            >\n                <ModalPage\n                    id={ROUTES.EVENTSINFO}\n                    onClose={modalBack}\n                    header={\n                        <ModalPageHeader\n                            left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\n                            {eventsData ? eventsData[eventId].nameEvent : 'empty'}\n                        </ModalPageHeader>}>\n                    <Cell>\n                        <InfoRow header=\"Формат мероприятия\">\n                            {eventsData ? eventsData[eventId].eventForm : 'empty'}\n                        </InfoRow>\n                    </Cell>\n\n                    <Cell>\n                        <InfoRow header=\"Место проведения\">\n                            {eventsData ? eventsData[eventId].eventPlace : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Формат участия\">\n                            {eventsData ? eventsData[eventId].participationForm : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Дата проведения\">\n                            {eventsData ? eventsData[eventId].date : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Тип мероприятия\">\n                            {eventsData ? eventsData[eventId].eventType : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Роль компании\">\n                            {eventsData ? eventsData[eventId].companyRole : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Краткое описание\">\n                            {eventsData ? eventsData[eventId].description : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Количество участников\">\n                            {eventsData ? eventsData[eventId].participants : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Ссылки\">\n                            <Link href={eventsData[eventId].publicationLinks} target=\"_blank\"><span href={eventsData[eventId].publicationLinks} >{eventsData ? eventsData[eventId].publicationLinks : 'empty'}</span></Link>\n                        </InfoRow>\n                    </Cell>\n                    <Cell>\n                        <InfoRow header=\"Заметки\">\n                            {eventsData ? eventsData[eventId].notes : 'empty'}\n                        </InfoRow>\n                    </Cell>\n                </ModalPage>\n            </ModalRoot>\n        )\n\n        return (\n            <View activePanel={id} modal={modal}>\n                <Panel id={id}>\n                    <PanelHeader\n                        // left={<Icon28AddOutline onClick={onClickReport}/>}\n                        left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\n                        Мероприятия\n                </PanelHeader>\n                    {/* <Group>\n                    <Div>\n                        {eventsData.map((event, eventId) => (\n                            <Banner key={event._id}\n                                before={<Avatar size={120} mode=\"image\" style={{ objectFit: 'cover' }}\n                                    src=\"https://images.unsplash.com/photo-1501386761578-eac5c94b800a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80\" />}\n                                header={event.nameEvent}\n                                subheader={event.date}\n                                actions={<Button style={{ background: \"#fc2c38\" }} onClick={() => { setEventId(eventId); setActivePanel(ROUTES.EVENTSINFO); }}>\n                                        Подробнее</Button>} />\n                        ))}\n                    </Div>\n                </Group> */}\n                    <Group>\n                        {/* <Div> \n                        <Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={go} data-to=\"editprofile\">Добавить</Button>\n                    </Div> */}\n                        <Div>\n                            {eventsData.map((event, eventId) => (\n                                <Banner key={event._id}\n                                    header={<React.Fragment>\n                                        <span style={{ fontWeight: '300', color: \"#fc2c38\", marginBottom: '10px' }}>{event.eventForm}, {event.eventType}</span> <br />\n                                        <span>{event.nameEvent}</span>\n\n                                    </React.Fragment>}\n                                    subheader={<React.Fragment>\n                                        <div style={{ display: 'inline-block' }}>\n                                            <Icon20CalendarOutline />\n                                        </div>\n                                        <div style={{ display: 'inline-block' }}>\n                                            <span style={{}}>{event.date}</span>\n                                        </div>\n\n                                    </React.Fragment>}\n                                    asideMode=\"expand\"\n                                    onClick={() => { setEventId(eventId); setActivePanel(ROUTES.EVENTSINFO); }}\n                                />\n                            ))}\n                        </Div>\n                    </Group>\n\n                    <Epic style={{ marginTop: '100px' }}>\n                        <Tabbar>\n                            <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" text=\"Мероприятия\">\n                                <Icon28NewsfeedOutline style={{ color: \"#fc2c38\" }} />\n                            </TabbarItem>\n\n                            <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\n                                <Icon28FireOutline />\n                            </TabbarItem>\n\n                            <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\n                                <Icon28BrainOutline />\n                            </TabbarItem>\n\n                            <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\n                                <Icon28UserOutline width={32} height={32} />\n                            </TabbarItem>\n                        </Tabbar>\n                    </Epic>\n\n                </Panel>\n            </View>\n        )\n    }\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\n                Мероприятия\n            </PanelHeader>\n            <Group>\n                <Div>\n                    <Placeholder\n                        icon={<Icon56AccessibilityOutline style={{color: 'rgb(176,182,192)'}}/>}\n                        stretched\n                    >\n                        Нет мероприятий<br />\n                    </Placeholder>\n                </Div>\n            </Group>\n\n            <Epic style={{ marginTop: '100px' }}>\n                <Tabbar>\n                    <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" text=\"Мероприятия\">\n                        <Icon28NewsfeedOutline style={{ color: \"#fc2c38\" }} />\n                    </TabbarItem>\n\n                    <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\n                        <Icon28FireOutline />\n                    </TabbarItem>\n\n                    <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\n                        <Icon28BrainOutline />\n                    </TabbarItem>\n\n                    <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\n                        <Icon28UserOutline width={32} height={32} />\n                    </TabbarItem>\n                </Tabbar>\n            </Epic>\n\n        </Panel>\n    )\n}\n\n\nexport default Events;\n","import React from 'react';\nimport { Cell, Group, PanelHeader, Panel, Epic, Tabbar, TabbarItem, Header} from '@vkontakte/vkui';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\nimport Icon28CopyOutline from '@vkontakte/icons/dist/28/copy_outline';\n\n\n\n\nconst Info = ({ id, go }) => {\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader>\n                База знаний\n            </PanelHeader>\n\t\t\t<Group header={<Header mode=\"secondary\">Ресурсы</Header>}>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://cloud.mail.ru/public/25Qx/czjsThY2z\">\n                        Папка на Облаке\n                    </Cell>\n\t\t\t</Group>\n            <Group header={<Header mode=\"secondary\">Ссылки на компанию</Header>}>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>}  target=\"_blank\" href=\"https://www.youtube.com/user/TPMGTU/videos\">\n                        YouTube-канал Технострим  \n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>}  target=\"_blank\" href=\"https://www.corp.mail.ru\">\n                        Официальный сайт Mail.ru Group \n                    </Cell>\n\t\t\t</Group>\n            <Group header={<Header mode=\"secondary\">Метериалы для чтения</Header>}>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://vk.com/video-153502007_456239172?list=5df1abb45183e47f5e\">\n                        Интервью с Дмитрием Гришиным\n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://vk.com/video-153502007_456239241\"> \n                        Выступление Бориса Добродеева на форуме ПроеКТОриЯ \n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://thebell.io/boris-dobrodeev-mail-ru-group-legkie-modeli-v-internete-zakonchilis\">\n                        Интервью Бориса Добродеева в The Bell\n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://www.rbc.ru/interview/technology_and_media/16/12/2019/5dee6c7d9a794758a559c774\">\n                        Интервью Бориса Добродеева в РБК\n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.mail.ru/ru/company/strategy_ceo/\">\n                        Подробный рассказ Бориса Добродеева о экосистеме экосистем  \n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.imgsmail.ru/media/files/esg2019.pdf\">\n                        Первый отчет в области устойчивого развития (ESG-отчет)  \n                    </Cell>\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.imgsmail.ru/media/files/mail.rugrouparfy2019.pdf\">\n                        Годовой отчет 2019 года \n                    </Cell>\n            </Group>\n\n            <Epic style={{ marginTop: '100px' }}>\n                <Tabbar >\n                <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\n                    <Icon28NewsfeedOutline/>\n                </TabbarItem>\n\n                <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\n                    <Icon28FireOutline/>\n                </TabbarItem>\n\n                <TabbarItem style={{color:\"#fc2c38\"}} onClick={go} data-to=\"info\" text=\"База знаний\">\n                    <Icon28BrainOutline style={{color:\"#fc2c38\"}}/>\n                </TabbarItem>\n\n                <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\n                    <Icon28UserOutline width={32} height={32}/>\n                </TabbarItem>\n                </Tabbar>  \n            </Epic>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default Info;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport {SimpleCell, PanelHeader, Panel, Epic, Tabbar, TabbarItem, Group, ScreenSpinner, Separator} from '@vkontakte/vkui';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/role'\nconst userRequestURL = 'https://ambassador-todo.herokuapp.com/access/find'\n\nconst Achivements = ({fetchedUser, id, go }) => {\n\n\nconst [users, setUsers] = React.useState();\nconst [isLoading, setIsLoading] = React.useState(true);\nconst [user, setUser] = React.useState();\nconst [request, setRequest] = React.useState(false);\nconst [fetch, setFetch] = React.useState(true);\n\n// console.log(fetchedUser)\n\nif (request) {\n    postRequest('POST', requestURL, JSON.stringify({role: 'ambassador'}))\n        .then(data => {\n            setUsers(data);\n            setIsLoading(false)\n            setRequest(false)\n        })\n        .catch(err => console.log(err))\n}\n\nif (fetch){\n    if (fetchedUser != null) {\n        const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n        postRequest('POST', userRequestURL, vkID)\n    \n            .then(data => {\n                setUser(data[0]);\n                setRequest(true)\n                setFetch(false)\n            })\n            .catch(err => console.log(err))\n    }\n}\n\n\n\nif (isLoading === true) {\n    return (\n        <Panel id={id}>\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                <ScreenSpinner style={{ marginTop: '50%' }} />\n            </div>\n        </Panel>\n    )\n}\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader>\n                Рейтинг\n            </PanelHeader>\n            {/* <Tabs>\n                <HorizontalScroll>\n                    <TabsItem selected>Общий</TabsItem>\n                    <TabsItem>Сентябрь</TabsItem>\n                    <TabsItem>Октябрь</TabsItem>\n                    <TabsItem>Ноябрь</TabsItem>\n                    <TabsItem>Декабрь</TabsItem>\n                    <TabsItem>Январь</TabsItem>\n                    <TabsItem>Февраль</TabsItem>\n                    <TabsItem>Март</TabsItem>\n                    <TabsItem>Апрель</TabsItem>\n                    <TabsItem>Май</TabsItem>\n                </HorizontalScroll>\n            </Tabs> */}\n            {/* <FormLayout>\n                <Select  top=\"Месяц\" placeholder=\" \">\n                            <option value=\"Год\">Год</option>\n              \t\t\t\t<option value=\"Январь\">Январь</option>\n              \t\t\t\t<option value=\"Февраль\">Февраль</option>\n                            <option value=\"Март\">Март</option>\n                            <option value=\"Апрель\">Апрель</option>\n                            <option value=\"Май\">Май</option>\n                            <option value=\"Июнь\">Июнь</option>\n                            <option value=\"Июль\">Июль</option>\n                            <option value=\"Август\">Август</option>\n                            <option value=\"Сентябрь\">Сентябрь</option>\n                            <option value=\"Октябрь\">Октябрь</option>\n                            <option value=\"Ноябрь\">Ноябрь</option>\n                            <option value=\"Декабрь\">Декабрь</option>\n           \t    </Select>\n            </FormLayout> */}\n            {fetchedUser &&\n            <SimpleCell href={\"https://vk.com/id\"+user.vkID}  target=\"_blank\"  after='Грейд' description={user.universityShortly}>{user.fullName}</SimpleCell>}\n            <Separator style={{ margin: '12px 0' }} />\n\t\t\t<Group>\n            {users.map((user, id) => (\n              <SimpleCell href={\"https://vk.com/id\"+user.vkID}  target=\"_blank\" after='Грейд' key={user._id} description={user.universityShorlty}>{user.fullName}</SimpleCell>\n            ))}\n            </Group>\n            {/* after={(id+1)*4+' score'}  */}\n            \n            <Epic>\n                <Tabbar>\n                <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\n                    <Icon28NewsfeedOutline/>\n                </TabbarItem>\n\n                <TabbarItem style={{color:\"#fc2c38\"}} onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\n                    <Icon28FireOutline style={{color:\"#fc2c38\"}}/>\n                </TabbarItem>\n\n                <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\n                    <Icon28BrainOutline />\n                </TabbarItem>\n\n                <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\n                    <Icon28UserOutline width={32} height={32}/>\n                </TabbarItem>\n                </Tabbar>  \n            </Epic>\n\n\t\t</Panel>\n        \n\t)\n}\n\n\nexport default Achivements;\n","import React from 'react';\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\nimport { postRequest } from \"./functions/fetch.js\";\nimport { View, ModalRoot, Avatar, ModalPage, ModalPageHeader, RichCell, Group, PanelHeader, Panel, ScreenSpinner, Epic, Tabbar, TabbarItem, Header, Cell, PanelHeaderButton, Counter, CellButton } from '@vkontakte/vkui';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\nimport Icon28WriteOutline from '@vkontakte/icons/dist/28/write_outline';\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\n\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\n\n\nconst Profile = ({ fetchedUser, id, go }) => {\n\n    const ROUTES = {\n        PROFILEINFO: 'profileInfo',\n        INSIDEEVENTS: 'inside',\n        OUTSIDEEVENTS: 'outside',\n        HELPANDSUPPORT: 'helpAndSupport'\n    };\n    const modalBack = () => {\n        setActivePanel(null);\n    };\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [user, setUser] = React.useState();\n    const [eventsData, setEventsData] = React.useState();\n    const [fetch, setFetch] = React.useState(true);\n    const [activeModal, setActivePanel] = React.useState(null);\n\n    const profileModal = (\n        <ModalRoot\n            activeModal={activeModal}\n            onClose={modalBack}\n        >\n            <ModalPage\n                id={ROUTES.PROFILEINFO}\n                onClose={modalBack}\n                header={\n                    <ModalPageHeader\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\n                        Подробнее\n                    </ModalPageHeader>}>\n                <Group>\n                    <Cell multiline indicator={<Cell>{user ? user.clothingSize : 'empty'}</Cell>} >\n                        Размер одежды\n                        </Cell>\n                    <Cell multiline indicator={<Cell>{user ? user.personalPostalAddress : 'empty'}</Cell>} >\n                        Почтовый адрес (с индексом)\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.latinFullName : 'empty'}</Cell>} >\n                        Фамилия и имя по-латински\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.university : 'empty'}</Cell>}>\n                            Полное название учебного заведения\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.facultyFull : 'empty'}</Cell>} >\n                        Полное название факультета\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.facultyShortly : 'empty'}</Cell>}  >\n                        Краткое название факультета\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.statusInUniversity : 'empty'}</Cell>}  >\n                        Статус\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.facultyFull : 'empty'} </Cell>}>\n                        Факультет\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.specialty : 'empty'} </Cell>}>\n                        Специальность\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.universityPostalAddress : 'empty'} </Cell>}>\n                        Адрес учебного заведения\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.rectorFullName : 'empty'}</Cell>} >\n                        ФИО ректора\n                        </Cell>\n                    <Cell multiline indicator={<Cell >{user ? user.rectorPostalAddress : 'empty'}</Cell>} >\n                        Email ректора\n                        </Cell>\n\n\n                </Group>\n\n            </ModalPage>\n\n            <ModalPage\n                id={ROUTES.INSIDEEVENTS}\n                onClose={modalBack}\n                header={\n                    <ModalPageHeader\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\n                        Формат мероприятий\n                    </ModalPageHeader>}>\n                <Group>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внутреннее\" && i.eventForm === \"Онлайн\") }).length : 'empty'} </Counter>}>\n                        Онлайн\n                            </Cell>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ?  eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\n                        Офлайн\n                            </Cell>\n                </Group>\n            </ModalPage>\n\n            <ModalPage\n                id={ROUTES.OUTSIDEEVENTS}\n                onClose={modalBack}\n                header={\n                    <ModalPageHeader\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\n                        Формат мероприятий\n                    </ModalPageHeader>}>\n                <Group>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ?  eventsData.filter(function (i, n) { return (i.participationForm === \"Внешнее\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\n                        Онлайн\n                            </Cell>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ?  eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\n                        Офлайн\n                            </Cell>\n                </Group>\n            </ModalPage>\n\n            <ModalPage\n                id={ROUTES.HELPANDSUPPORT}\n                onClose={modalBack}\n                header={\n                    <ModalPageHeader\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\n                        Формат мероприятий\n                    </ModalPageHeader>}>\n                <Group>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ?  eventsData.filter(function (i, n) { return (i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\n                        Онлайн\n                            </Cell>\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                        indicator={<Counter >{eventsData ?  eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\n                        Офлайн\n                            </Cell>\n                </Group>\n            </ModalPage>\n\n        </ModalRoot>\n    )\n\n    if (fetch) {\n        if (fetchedUser != null) {\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n            postRequest('POST', requestURL, vkID)\n\n                .then(data => {\n                    setUser(data[0]);\n                    postRequest('POST', eventsRequestURL, JSON.stringify({ \"ambassador\": data[0].fullName }))\n                        .then(events => {\n                            setEventsData(events)\n                            setIsLoading(false)\n                            setFetch(false)\n                        })\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n\n    if (isLoading === true) {\n        return (\n            <Panel id={id}>\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\n                </div>\n            </Panel>\n        )\n    }\n\n    return (\n        <View activePanel={id} modal={profileModal}>\n            <Panel id={id}>\n\n                <PanelHeader\n                    left={<PanelHeaderButton><Icon28WriteOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"editprofile\" /></PanelHeaderButton>}>\n                    Профиль\n            </PanelHeader>\n                <div style={{ marginBottom: 100 }}>\n                    {fetchedUser &&\n                        <Group>\n                            <RichCell\n                                href={\"https://vk.com/id\" + user.vkID}\n                                target=\"_blank\"\n                                before={<Avatar size={72} src={fetchedUser.photo_100} />}>\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\n                                <br/>\n                                <span style={{ fontSize: '14px', color: 'grey' }}>Грейд</span>\n                                <br />\n                            </RichCell>\n                        </Group>\n                    }\n\n                    <Group header={<Header mode=\"secondary\">Статистика</Header>}>\n\n                        {/* <Banner\n                            mode=\"image\"\n                            header=\"Мои достижения\"\n                            subheader=\"Разблокировано 0 из 9\"\n                            background={\n                                <div\n                                    style={{\n                                        backgroundColor: '#fc2c38',\n                                        backgroundImage: 'url(https://i.imgur.com/6yyTLZO.jpg)',\n                                        backgroundPosition: 'right bottom',\n                                        backgroundSize: 320,\n                                        backgroundRepeat: 'no-repeat',\n                                    }}\n                                />\n                            }\n                            actions={<Button onClick={go} data-to=\"badge\" style={{ background: 'white', color: \"#fc2c38\" }} mode=\"overlay_primary\">Подробнее</Button>}\n                        /> */}\n\n                        {/* <SimpleCell> */}\n                        <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.length}</Counter>}>\n                            Всего мероприятий\n                            </Cell>\n                        <Cell onClick={() => { setActivePanel(ROUTES.INSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" }).length}</Counter>}>\n                            Внутренние мероприятия\n                            </Cell>\n                        <Cell onClick={() => { setActivePanel(ROUTES.OUTSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" }).length}</Counter>}>\n                            Внешние мероприятия\n                            </Cell>\n                        <Cell onClick={() => { setActivePanel(ROUTES.HELPANDSUPPORT); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" }).length}</Counter>}>\n                            Помощь и поддержка\n                            </Cell>\n                        {/* <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.filter((i, n) => { return i.eventForm === \"Онлайн\" }).length}</Counter>}>\n                            Онлайн мероприятия\n                            </Cell>\n                        <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\n                            indicator={<Counter key={user._id}>{eventsData.filter((i, n) => { return i.eventForm === \"Офлайн\" }).length}</Counter>}>\n                            Офлайн мероприятия\n                            </Cell> */}\n\n                    </Group>\n                    <Group header={<Header mode=\"secondary\">Информация о пользователе</Header>}>\n                        <Cell multiline indicator={user.town} >\n                            Город\n                        </Cell>\n                        <Cell multiline indicator={user.birthday} >\n                            Дата рождения\n                        </Cell>\n                        <Cell multiline indicator={formatPhoneNumber(user.phoneNumber)} >\n                            Номер телефона\n                        </Cell>\n                        <Cell multiline indicator={user.personalEmail} >\n                            Email\n                        </Cell>\n                        <Cell multiline indicator={<div className=\"IndicatorOverflow\">{user.universityShortly}</div>}\n >\n                            Учебное заведение\n                        </Cell>\n                        <Cell multiline indicator={user.statusInUniversity} >\n                            Статус\n                        </Cell>\n                        <CellButton\n                            style={{ color: '#fc2c38' }} \n                            onClick={() => { setActivePanel(ROUTES.PROFILEINFO); }}>Дополнительная информация</CellButton>\n                    </Group>\n                </div>\n\n\n                <Epic>\n                    <Tabbar style={{ marginTop: '100px' }}>\n                        <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\n                            <Icon28NewsfeedOutline />\n                        </TabbarItem>\n\n                        <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\n                            <Icon28FireOutline />\n                        </TabbarItem>\n\n                        <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\n                            <Icon28BrainOutline />\n                        </TabbarItem>\n\n                        <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profile\" text=\"Профиль\">\n                            <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\n                        </TabbarItem>\n                    </Tabbar>\n                </Epic>\n\n            </Panel>\n        </View>\n    )\n}\n\n\nexport default Profile;","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { PanelHeader, Panel, Epic, Tabbar, TabbarItem, Group, ScreenSpinner, Placeholder, Div, RichCell,Button} from '@vkontakte/vkui';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\nimport Icon56UserAddOutline from '@vkontakte/icons/dist/56/user_add_outline';\n\nconst userRequestURL = 'https://ambassador-todo.herokuapp.com/access/find'\n\nconst ListAmbassador = ({ fetchedUser, id, go }) => {\n\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [fetch, setFetch] = React.useState(true);\n    const [ambassadors, setAmbassadors] = React.useState();\n\n    if (fetch) {\n        if (fetchedUser != null) {\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n            postRequest('POST', userRequestURL, vkID)\n                .then(data => {\n                    postRequest('POST', userRequestURL, JSON.stringify({ \"mentor\": data[0].fullName }))\n                        .then(ambassadors => {\n                            setAmbassadors(ambassadors)\n                            setIsLoading(false)\n                            setFetch(false)\n                        })\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n\n\n    if (isLoading === true) {\n        return (\n            <Panel id={id}>\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\n                </div>\n            </Panel>\n        )\n    }\n\n\n    if (ambassadors.length > 0) {\n        return (\n\n            <Panel id={id}>\n\n                <PanelHeader>\n                    Амбассадоры\n                </PanelHeader>\n                <Group>\n                    {ambassadors.map((user, id) => (\n                        <RichCell disabled\n                        multiline key={user._id} \n                        actions={\n                            <React.Fragment >\n                            <Button style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={go} data-to=\"profileforinfo\" data-id = {user.vkID}>Профиль</Button>\n                            <Button style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={go} data-to=\"eventsforinfo\" data-id = {user.vkID}>Мероприятия</Button>\n                            </React.Fragment>\n                          }\n                          caption={user.universityShortly} >{user.fullName}</RichCell>\n                    ))}\n                </Group>\n\n                <Epic>\n                    <Tabbar style={{ marginTop: '100px' }}>\n                        <TabbarItem onClick={go} style={{ color: \"#fc2c38\" }} data-to=\"listambassador\" text=\"Амбассадоры\">\n                            <Icon28Users3Outline style={{ color: \"#fc2c38\" }} />\n                        </TabbarItem>\n\n                        <TabbarItem onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\n                            <Icon28UserOutline width={32} height={32} />\n                        </TabbarItem>\n                    </Tabbar>\n                </Epic>\n\n            </Panel>\n\n        )\n    }\n    return (\n        <Panel id={id}>\n\n            <PanelHeader>\n                Рейтинг\n                </PanelHeader>\n            <Group>\n                <Div>\n                    <Placeholder\n                        icon={<Icon56UserAddOutline style={{ color: 'rgb(176,182,192)' }} />}\n                        stretched\n                    >\n                        Нет амбассадоров<br />\n                    </Placeholder>\n                </Div>\n            </Group>\n\n            <Epic>\n                <Tabbar style={{ marginTop: '100px' }}>\n                    <TabbarItem onClick={go} style={{ color: \"#fc2c38\" }} data-to=\"listambassador\" text=\"Амбассадоры\">\n                        <Icon28Users3Outline style={{ color: \"#fc2c38\" }} />\n                    </TabbarItem>\n\n                    <TabbarItem onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\n                        <Icon28UserOutline width={32} height={32} />\n                    </TabbarItem>\n                </Tabbar>\n            </Epic>\n\n        </Panel>\n    )\n\n}\n\n\nexport default ListAmbassador;\n","import React from 'react';\r\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, PanelHeaderBack,  Select, ScreenSpinner } from '@vkontakte/vkui';\r\n\r\nconst Editprofile = ({ fetchedUser, id, go }) => {\r\n\tconst formatDate = (date) => {\r\n\t\tlet newDate = date.slice(8, 10) + date.slice(4, 8) + date.slice(0, 4);\r\n\t\treturn newDate\r\n\t}\r\n\r\n\tconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\n\r\n\tconst [isLoading, setIsLoading] = React.useState(true);\r\n\tconst [user, setUser] = React.useState();\r\n\t//  const [middleName, setMiddleName] = React.useState();\r\n\tconst [university, setUniversity] = React.useState();\r\n\tconst [phone, setPhone] = React.useState();\r\n\tconst [personalemail, setPersonalEmail] = React.useState();\r\n\tconst [birthday, setBirthday] = React.useState();\r\n\tconst [universitypostaladdress, setUniversityPostalAddress] = React.useState();\r\n\tconst [rectorfullname, setRectorFullName] = React.useState();\r\n\tconst [rectorpostaladdress, setRectorPostalAddress] = React.useState();\r\n\tconst [statusinuniversity, setStatusInUniversity] = React.useState();\r\n\tconst [facultyfull, setFacultyFull] = React.useState();\r\n\tconst [facultyshortly, setFacultyShortly] = React.useState();\r\n\tconst [specialty, setSpecialty] = React.useState();\r\n\tconst [personalpostaladdress, setPersonalPostalAddress] = React.useState();\r\n\tconst [clothingsize, setClothingSize] = React.useState();\r\n\tconst [fullName, setFullName] = React.useState();\r\n\tconst [fullNameLatin, setFullNameLatin] = React.useState();\r\n\tconst [town, setTown] = React.useState();\r\n\tconst [universityShortly, setUniversityShortly] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\r\n\tconst onChangeUniversityShortly = (event) => {\r\n\t\tsetUniversityShortly(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFullNameLatin = (event) => {\r\n\t\tsetFullNameLatin(event.target.value)\r\n\t}\r\n\tconst onChangeFullName = (event) => {\r\n\t\tsetFullName(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeUniversity = (event) => {\r\n\t\tsetUniversity(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePhone = (event) => {\r\n\t\tsetPhone('+7' + event.target.value)\r\n\t}\r\n\r\n\tconst onChangePersonalEmail = (event) => {\r\n\t\tsetPersonalEmail(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeBirthday = (event) => {\r\n\t\tsetBirthday(formatDate(event.target.value))\r\n\t}\r\n\r\n\tconst onChangeUniversityPostalAddress = (event) => {\r\n\t\tsetUniversityPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeRectorFullName = (event) => {\r\n\t\tsetRectorFullName(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeRectorPostalAddress = (event) => {\r\n\t\tsetRectorPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeStatusInUniversity = (event) => {\r\n\t\tsetStatusInUniversity(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFacultyFull = (event) => {\r\n\t\tsetFacultyFull(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFacultyShortly = (event) => {\r\n\t\tsetFacultyShortly(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeSpecialty = (event) => {\r\n\t\tsetSpecialty(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePersonalPostalAddress = (event) => {\r\n\t\tsetPersonalPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeClothingSize = (event) => {\r\n\t\tsetClothingSize(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeTown = (event) => {\r\n\t\tsetTown(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\t// console.log('onClickForm triggered')\r\n\t\tlet body = JSON.stringify({\r\n\t\t\t_id: user._id,\r\n\t\t\tvkID: user.vkID,\r\n\t\t\tavatar: \" \",\r\n\t\t\tachievements: \" \",\r\n\t\t\tphoneNumber: phone,\r\n\t\t\tbirthday: birthday,\r\n\t\t\tfullName: fullName,\r\n\t\t\tlatinFullName: fullNameLatin,\r\n\t\t\tpersonalEmail: personalemail,\r\n\t\t\ttown: town,\r\n\t\t\tuniversity: university,\r\n\t\t\tuniversityShortly: universityShortly,\r\n\t\t\tuniversityPostalAddress: universitypostaladdress,\r\n\t\t\trectorFullName: rectorfullname,\r\n\t\t\trectorPostalAddress: rectorpostaladdress,\r\n\t\t\tstatusInUniversity: statusinuniversity,\r\n\t\t\tfacultyFull: facultyfull,\r\n\t\t\tfacultyShortly: facultyshortly,\r\n\t\t\tspecialty: specialty,\r\n\t\t\tpersonalPostalAddress: personalpostaladdress,\r\n\t\t\tclothingSize: clothingsize\r\n\t\t\t// role: \"ambassador\",\r\n\t\t})\r\n\t\tpostRequest('POST', 'https://ambassador-todo.herokuapp.com/access/update', body)\r\n\t\t// .then(data => console.log(data))\r\n\t\t// .catch(err => console.log(err))\r\n\r\n\t}\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', requestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t\t// console.log(data);\r\n\t\t}\r\n\t}\r\n\r\n\tif (isLoading === true) {\r\n\t\treturn (\r\n\t\t\t<Panel id={id}>\r\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\t\t\t\t\t<ScreenSpinner style={{ marginTop: '50%' }} />\r\n\t\t\t\t</div>\r\n\t\t\t</Panel>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profile\" onMouseUp={go} />}>Редактирование профиля</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeFullName} placeholder={user.fullName} type=\"text\" name=\"fullname\" top=\"ФИО\" required />\r\n\t\t\t\t\t<Input onChange={onChangePhone} placeholder={formatPhoneNumber(user.phoneNumber)} pattern=\"[0-9]{2}\\.[0-9]{2}\\.[0-9]{4}\" type=\"text\" name=\"phonenumber\" top=\"Телефон\" bottom=\"Введи телефон в формате 8005553535 (без 7, +7, 8)\" required />\r\n\t\t\t\t\t<Input onChange={onChangeFullNameLatin} placeholder={user.latinFullName} bottom=\"Для того, чтобы создать тебе почту\" type=\"text\" name=\"fullname\" top=\"Фамилия и имя на латинице\" required />\r\n\t\t\t\t\t<Input onChange={onChangePersonalEmail} placeholder={user.personalEmail} type=\"text\" name=\"email\" top=\"Личная почта\" required />\r\n\t\t\t\t\t<Input onChange={onChangeBirthday} placeholder={user.birthday} type=\"date\" name=\"dateofbirth\" top=\"Дата рождения\" required />\r\n\t\t\t\t\t<Input onChange={onChangeTown} placeholder={user.town} type=\"text\" name=\"city\" top=\"Город\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversity} placeholder={user.university} type=\"text\" name=\"university\" top=\"Учебное заведение\" bottom=\"Полное наименование\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversityShortly} placeholder={user.universityShortly} type=\"text\" name=\"university\" top=\"Учебное заведение\" bottom=\"Краткое наименование\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversityPostalAddress} placeholder={user.universityPostalAddress} bottom=\"С индексом для отправки писем\" type=\"text\" name=\"pochtavuz\" top=\"Почтовый адрес вуза\" required />\r\n\t\t\t\t\t<Input onChange={onChangeRectorFullName} placeholder={user.rectorFullName} type=\"text\" name=\"fiorector\" top=\"ФИО ректора\" required />\r\n\t\t\t\t\t<Input onChange={onChangeRectorPostalAddress} placeholder={user.rectorPostalAddress} ype=\"text\" name=\"emailrector\" top=\"Электронный адрес ректора\" required />\r\n\t\t\t\t\t<Select onChange={onChangeStatusInUniversity} placeholder={user.statusInUniversity} bottom=\"Курс, на который ты уже перешёл\" top=\"Статус в вузе\" >\r\n\t\t\t\t\t\t<option value=\"1 курс бакалавриат\">1 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"2 курс бакалавриат\">2 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"3 курс бакалавриат\">3 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"4 курс бакалавриат\">4 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"1 курс магистратура\">1 курс магистратура</option>\r\n\t\t\t\t\t\t<option value=\"2 курс магистратура\">2 курс магистратура</option>\r\n\t\t\t\t\t\t<option value=\"1 курс специалитет\">1 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"2 курс специалитет\">2 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"3 курс специалитет\">3 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"4 курс специалитет\">4 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"5 курс специалитет\">5 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"1 курс бакалавриат\">Аспирант</option>\r\n\t\t\t\t\t\t<option value=\"сотрудник вуза\">Сотрудник вуза</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Input onChange={onChangeFacultyFull} placeholder={user.facultyFull} bottom=\"Полное наименование\" type=\"text\" name=\"facultatifull\" top=\"Факультет\" required />\r\n\t\t\t\t\t<Input onChange={onChangeFacultyShortly} placeholder={user.facultyShortly} bottom=\"Краткое наименование\" type=\"text\" name=\"facultatiless\" top=\"Факультет\" required />\r\n\t\t\t\t\t<Input onChange={onChangeSpecialty} placeholder={user.specialty} type=\"text\" name=\"speciality\" top=\"Специальность\" required />\r\n\t\t\t\t\t<Input onChange={onChangePersonalPostalAddress} placeholder={user.personalPostalAddress} bottom=\"Куда присылать мерч и другие посылки\" type=\"text\" name=\"pochtaadress\" top=\"Твой почтовый адрес (с индексом)\" required />\r\n\t\t\t\t\t<Select onChange={onChangeClothingSize} placeholder={user.clothingSize} top=\"Размер одежды (для бомбера)\" >\r\n\t\t\t\t\t\t<option value=\"XS мужской\">XS мужской</option>\r\n\t\t\t\t\t\t<option value=\"S мужской\">S мужской</option>\r\n\t\t\t\t\t\t<option value=\"M мужской\">M мужской</option>\r\n\t\t\t\t\t\t<option value=\"L мужской\">L мужской</option>\r\n\t\t\t\t\t\t<option value=\"XL мужской\">XL мужской</option>\r\n\t\t\t\t\t\t<option value=\"XXL мужской\">XXL мужской</option>\r\n\t\t\t\t\t\t<option value=\"XXS женский\">XXS женский</option>\r\n\t\t\t\t\t\t<option value=\"XS женский\">XS женский</option>\r\n\t\t\t\t\t\t<option value=\"S женский\">S женский</option>\r\n\t\t\t\t\t\t<option value=\"M женский\">M женский</option>\r\n\t\t\t\t\t\t<option value=\"L женский\">L женский</option>\r\n\t\t\t\t\t\t<option value=\"XL женский\">XL женский</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"profile\">Добавить</Button>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default Editprofile;","import React from 'react';\nimport {  Card, CardGrid, Group, PanelHeader, Panel,  PanelHeaderBack} from '@vkontakte/vkui';\n\n\nconst avatars = {\n    bestclub: 'http://pngimg.com/uploads/bitcoin/bitcoin_PNG31.png',\n};\n\n\nconst Badge = ({ id, go }) => {\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n            left={<PanelHeaderBack style={{color: \"#fc2c38\"}} onClick={go} data-to=\"profile\"/>}>Достижения</PanelHeader>\n            <Group separator=\"hide\">\n                \n\t\t\t    <CardGrid>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n                <CardGrid>\n                <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n                <CardGrid>\n                <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n            </Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default Badge;\n","import React from 'react';\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\n\n\n\n\nconst AddEventFirst = ({ id, go }) => {\n\n    return (\n\n        <Panel id={id}>\n\n            <PanelHeader\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" />}>\n                Форма отчета</PanelHeader>\n            {/* {fetchedUser && */}\n            {/* <Group>\n                <FormLayout>\n                    <Input type=\"text\" name=\"ambassador\" top=\"Имя Фамилия\" required \n\t\t\t\t\t\t\tstatus={value ? 'valid' : 'error'}\n\t\t\t\t\t\t\tbottom={value ? '' : 'Введите обязательное поле!'}\n\t\t\t\t\t\t/>\n                    <Select top=\"Формат участия\" placeholder=\" \" required>\n                        <option value=\"Внешнее мероприятие\">Внешнее мероприятие</option>\n                        <option value=\"Внутреннее мероприятие\">Внутреннее мероприятие</option>\n                        <option value=\"Помощь и поддержка\">Помощь и поддержка</option>\n                    </Select>\n                </FormLayout>\n            </Group> */}\n            <Placeholder>\n                Выберите формат участия\n            </Placeholder>\n            <Div>\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventsecondvnesh\">Внешнее мероприятие</Button>\n            </Div>\n            <Div>\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventsecondvnutr\">Внутреннее мероприятие</Button>\n            </Div>\n            <Div>\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventsecondhelp\">Помощь и поддержка</Button>\n            </Div>\n\n\n        </Panel>\n    )\n}\n\n\nexport default AddEventFirst;\n","import React from 'react';\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\n\n\n\n\nconst AddEventSecondVnesh = ({ id, go }) => {\n\n    return (\n\n        <Panel id={id}>\n\n            <PanelHeader\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\n                Форма отчета</PanelHeader>\n            {/* {fetchedUser && */}\n            {/* <Group>\n                <FormLayout>\n                    <Input type=\"text\" name=\"ambassador\" top=\"Имя Фамилия\" required \n\t\t\t\t\t\t\tstatus={value ? 'valid' : 'error'}\n\t\t\t\t\t\t\tbottom={value ? '' : 'Введите обязательное поле!'}\n\t\t\t\t\t\t/>\n                    <Select top=\"Формат участия\" placeholder=\" \" required>\n                        <option value=\"Внешнее мероприятие\">Внешнее мероприятие</option>\n                        <option value=\"Внутреннее мероприятие\">Внутреннее мероприятие</option>\n                        <option value=\"Помощь и поддержка\">Помощь и поддержка</option>\n                    </Select>\n                </FormLayout>\n            </Group> */}\n            <Placeholder>\n                Выберите формат мероприятия\n            </Placeholder>\n            <Div>\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"home\">Онлайн</Button>\n            </Div>\n            <Div>\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventvneshoff\">Офлайн</Button>\n            </Div>\n\n\n        </Panel>\n    )\n}\n\n\nexport default AddEventSecondVnesh;\n","import React from 'react';\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\n\n\n\n\n\nconst AddEventSecondVnutr = ({ id, go }) => {\n\n    return (\n\n        <Panel id={id}>\n\n            <PanelHeader\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\n                Форма отчета</PanelHeader>\n            {/* {fetchedUser && */}\n            {/* <Group>\n                <FormLayout>\n                    <Input type=\"text\" name=\"ambassador\" top=\"Имя Фамилия\" required \n\t\t\t\t\t\t\tstatus={value ? 'valid' : 'error'}\n\t\t\t\t\t\t\tbottom={value ? '' : 'Введите обязательное поле!'}\n\t\t\t\t\t\t/>\n                    <Select top=\"Формат участия\" placeholder=\" \" required>\n                        <option value=\"Внешнее мероприятие\">Внешнее мероприятие</option>\n                        <option value=\"Внутреннее мероприятие\">Внутреннее мероприятие</option>\n                        <option value=\"Помощь и поддержка\">Помощь и поддержка</option>\n                    </Select>\n                </FormLayout>\n            </Group> */}\n            <Placeholder>\n                Выберите формат мероприятия\n            </Placeholder>\n            <Div>\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventvnutronl\">Онлайн</Button>\n            </Div>\n            <Div>\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventvnutroff\">Офлайн</Button>\n            </Div>\n\n\n        </Panel>\n    )\n}\n\n\nexport default AddEventSecondVnutr;\n","import React from 'react';\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\n\n\n\n\nconst AddEventSecondHelp = ({ id, go }) => {\n\n    return (\n\n        <Panel id={id}>\n\n            <PanelHeader\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\n                Форма отчета</PanelHeader>\n            {/* {fetchedUser && */}\n            <Placeholder>\n                Выберите формат мероприятия\n            </Placeholder>\n            <Div>\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventhelponl\">Онлайн</Button>\n            </Div>\n            <Div>\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventhelpoff\">Офлайн</Button>\n            </Div>\n\n\n        </Panel>\n    )\n}\n\n\nexport default AddEventSecondHelp;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst AddEventVneshOff = ({ fetchedUser, id, go }) => {\n\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\nif (fetch){\n\tif (fetchedUser != null) {\n\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t.then(data => {\n\t\t\t\tsetUser(data[0])\n\t\t\t\tsetFetch(false)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tparticipationForm: 'Внешнее',\n\t\t\teventForm: 'Офлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ВНЕШНЕЕ МЕРОПРИЯТИЕ ОФФЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnesh\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required/>\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required/>\n\t\t\t\t\t\n\t\t\t\t\t<Select  onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Интерактивная площадка\">Интерактивная площадка</option>\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\n\t\t\t\t\t\t<option value=\"Стенд\">Стенд</option>\n                        <option value=\"Стенд\">Выступление</option>\n                        <option value=\"Стенд\">Активность для школьников</option>\n                        <option value=\"Стенд\">Экскурсия в офис</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\"/>\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"Выступление\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"Пост в соц.сетях\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"Конкурс\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"Конкурс\">1000 и более</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\t\t\t\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default AddEventVneshOff;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst AddEventVnutrOnl = ({ fetchedUser, id, go }) => {\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\nif (fetch){\n\tif (fetchedUser != null) {\n\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t.then(data => {\n\t\t\t\tsetUser(data[0])\n\t\t\t\tsetFetch(false)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tparticipationForm: 'Внутреннее',\n\t\t\teventForm: 'Онлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ВНУТРЕННЕЕ МЕРОПРИЯТИЕ ОНЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnutr\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required/>\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required/>\n\n\t\t\t\t\t<Select  onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Пост для группы MRG для образования\">Пост для группы MRG для образования</option>\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\n\t\t\t\t\t\t<option value=\"Выступление сотрудника/приглашение сотрудника в жюри\">Выступление сотрудника/приглашение сотрудника в жюри</option>\n                        <option value=\"Вебинар/трансляция\">Вебинар/трансляция</option>\n                        <option value=\"Пост для университетских пабликов/студорганизаций\">Пост для университетских пабликов/студорганизаций</option>\n                        <option value=\"Размещение на сайте университета\">Размещение на сайте университета</option>\n                        <option value=\"Конкурс\">Конкурс</option>\n                        <option value=\"Интервью\">Интервью</option>\n                        <option value=\"Пост на своей странице\">Пост на своей странице</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\"/>\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\t\t\t\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default AddEventVnutrOnl;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst AddEventVnutrOff = ({ fetchedUser, id, go }) => {\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\n\tif (fetch) {\n\t\tif (fetchedUser != null) {\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t\t.then(data => {\n\t\t\t\t\tsetUser(data[0])\n\t\t\t\t\tsetFetch(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tparticipationForm: 'Внутреннее',\n\t\t\teventForm: 'Офлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ВНУТРЕННЕЕ МЕРОПРИЯТИЕ ОФФЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnutr\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required />\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\n\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Интерактивная площадка\">Интерактивная площадка</option>\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\n\t\t\t\t\t\t<option value=\"Выступление сотрудника/приглашение сотрудника в жюри\">Выступление сотрудника/приглашение сотрудника в жюри</option>\n\t\t\t\t\t\t<option value=\"Вебинар/трансляция\">Вебинар/трансляция</option>\n\t\t\t\t\t\t<option value=\"Квест\">Квест</option>\n\t\t\t\t\t\t<option value=\"Игры (ЧГК, ИТ-мафия, Alias)\">Игры (ЧГК, ИТ-мафия, Alias)</option>\n\t\t\t\t\t\t<option value=\"Выступление\">Выступление</option>\n\t\t\t\t\t\t<option value=\"Стенд\">Стенд</option>\n\t\t\t\t\t\t<option value=\"Дебаты\">Дебаты</option>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required />\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default AddEventVnutrOff;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst AddEventHelpOnl = ({ fetchedUser, id, go }) => {\n\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\n\tif (fetch) {\n\t\tif (fetchedUser != null) {\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t\t.then(data => {\n\t\t\t\t\tsetUser(data[0])\n\t\t\t\t\tsetFetch(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tparticipationForm: 'Помощь и поддержка',\n\t\t\teventForm: 'Онлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ПОМОЩЬ МЕРОПРИЯТИЕ ОНЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondhelp\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required />\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\n\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)\">Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)</option>\n\t\t\t\t\t\t<option value=\"Размещение информации на странице вуза/студенческого сообщества в соцсетях\">Размещение информации на странице вуза/студенческого сообщества в соцсетях</option>\n\t\t\t\t\t\t<option value=\"Распространение анкеты/формы\">Распространение анкеты/формы</option>\n\t\t\t\t\t\t<option value=\"Размещение информации на своей странице\">Размещение информации на своей странице</option>\n\t\t\t\t\t\t<option value=\"Репост\">Репост</option>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required />\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\n\t\t\t\t\t<Select onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default AddEventHelpOnl;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\"\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\n\nconst AddEventHelpOff = ({ fetchedUser, id, go }) => {\n\tconst formatDate = (date) =>{\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\n\t\treturn newDate\n\t\t}\n\n\tconst [user, setUser] = React.useState();\n\tconst [nameEvent, setNameEvent] = React.useState();\n\tconst [place, setPlace] = React.useState();\n\tconst [date, setDate] = React.useState();\n\tconst [companyRole, setCompanyRole] = React.useState();\n\tconst [links, setLinks] = React.useState();\n\tconst [participants, setParticipants] = React.useState();\n\t// const [ SetParticipationForm] = React.useState();\n\t// participationForm\n\t// eventForm\n\t// const [ SetEventForm] = React.useState();\n\tconst [eventType, SetEventType] = React.useState();\n\tconst [description, SetDescription] = React.useState();\n\tconst [notes, SetNotes] = React.useState();\n\tconst [callback, setCallback] = React.useState();\n\tconst [fetch, setFetch] = React.useState(true);\n\n\n\tif (fetch) {\n\t\tif (fetchedUser != null) {\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\t\tpostRequest('POST', userRequestURL, vkID)\n\t\t\t\t.then(data => {\n\t\t\t\t\tsetUser(data[0])\n\t\t\t\t\tsetFetch(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}\n\n\t// console.log(user)\n\n\tconst onChangeNameEvent = (event) => {\n\t\tsetNameEvent(event.target.value)\n\t}\n\n\tconst onChangePlace = (event) => {\n\t\tsetPlace(event.target.value)\n\t}\n\n\tconst onChangeDate = (event) => {\n\t\tsetDate(formatDate(event.target.value))\n\t}\n\n\tconst onChangeCompanyRole = (event) => {\n\t\tsetCompanyRole(event.target.value)\n\t}\n\tconst onChangeCallback = (event) => {\n\t\tsetCallback(event.target.value)\n\t}\n\n\tconst onChangeParticipants = (event) => {\n\t\tsetParticipants(event.target.value)\n\t}\n\n\tconst onChangeLinks = (event) => {\n\t\tsetLinks(event.target.value)\n\t}\n\n\t// const onChangeParticipationForm = (event) => {\n\t// \tSetParticipationForm(event.target.value)\n\t// }\n\n\t// const onChangeEventForm = (event) => {\n\t// \tSetEventForm(event.target.value)\n\t// }\n\n\tconst onChangeEventType = (event) => {\n\t\tSetEventType(event.target.value)\n\t}\n\n\tconst onChangeDescription = (event) => {\n\t\tSetDescription(event.target.value)\n\t}\n\n\tconst onChangeNotes = (event) => {\n\t\tSetNotes(event.target.value)\n\t}\n\n\tconst onClickForm = () => {\n\t\t// console.log('onClickForm triggered')\n\t\t// console.log(participationForm)\n\t\tlet body = JSON.stringify({\n\t\t\tparticipationForm: 'Помощь и поддержка',\n\t\t\teventForm: 'Офлайн',\n\t\t\tnameEvent: nameEvent,\n\t\t\teventPlace: place,\n\t\t\tdate: date,\n\t\t\teventType: eventType,\n\t\t\tdescription: description,\n\t\t\tcompanyRole: companyRole,\n\t\t\tparticipants: participants,\n\t\t\tparticipantsCallback: callback,\n\t\t\tuploadsLinks: '',\n\t\t\tpublicationLinks: links,\n\t\t\tnotes: notes,\n\t\t\tambassador: user.fullName,\n\t\t\tuniversity: user.university\n\t\t})\n\t\tpostRequest('POST', requestURL, body)\n\t\t\t// .then(data => console.log(data))\n\t\t\t.catch(err => console.log(err))\n\n\t}\n\n\n\t// ПОМОЩЬ МЕРОПРИЯТИЕ ОФФЛАЙН\n\n\t// console.log(fetchedUser)\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondhelp\" />}>\n\t\t\t\tФорма отчета</PanelHeader>\n\t\t\t{/* {fetchedUser && */}\n\t\t\t<Group>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required/>\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\n\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)\">Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)</option>\n\t\t\t\t\t\t<option value=\"Волонтерство\">Волонтерство</option>\n\t\t\t\t\t\t<option value=\"Организация мероприятия\">Организация мероприятия</option>\n                        <option value=\"Информирование\">Информирование</option>\n\t\t\t\t\t</Select> \n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\t\t\t\t\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\n\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\n\t\t\t\n\t\t\t\t</FormLayout>\n\t\t\t</Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default AddEventHelpOff;\n","import React from 'react';\nimport { postRequest } from \"./functions/fetch.js\";\nimport { excelReport } from \"./functions/excelReport\"\nimport { View, Avatar, RichCell, Group, PanelHeader, Panel, ScreenSpinner, Epic, Tabbar, TabbarItem, Header, Cell, Button, ModalRoot, ModalCard, ModalPageHeader, FormLayoutGroup, FormLayout, CellButton } from '@vkontakte/vkui';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\n\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\n\nconst ROUTES = {\n    CONFIRM: 'confirm',\n};\n\nconst ProfileMrg = ({ fetchedUser, id, go }) => {\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [user, setUser] = React.useState();\n    const [eventsData, setEventsData] = React.useState();\n    const [fetch, setFetch] = React.useState(true);\n    const [activeModal, setActivePanel] = React.useState(null);\n\n    const confirm = () => {\n        excelReport(eventsData)\n        console.log('confirm')\n    }\n\n    const modalBack = () => {\n        setActivePanel(null);\n    }\n\n    const modal = (\n        <ModalRoot\n            activeModal={activeModal}\n            onClose={modalBack}\n        >\n            <ModalCard\n                id={ROUTES.CONFIRM}\n                onClose={modalBack}\n                header={\n                    <ModalPageHeader>\n                        Скачать файл?\n            </ModalPageHeader>\n                }\n            >\n                <FormLayout>\n                    <FormLayoutGroup>\n                        <Button mode=\"secondary\" size=\"xl\" id='1' style={{ backgroundColor: '#fc2c38', color: 'white' }} onMouseUp={modalBack} onClick={confirm} > Да </Button>\n\n                        <Button mode=\"secondary\" size=\"xl\" id='2' style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={modalBack}> Нет </Button>\n                    </FormLayoutGroup>\n                </FormLayout>\n\n\n            </ModalCard>\n        </ModalRoot>\n    )\n\n    if (fetch) {\n        if (fetchedUser != null) {\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n            postRequest('POST', requestURL, vkID)\n                .then(data => {\n                    setUser(data[0]);\n                    postRequest('POST', requestURL, JSON.stringify({ \"mentor\": data[0].fullName }))\n                        .then(ambassador => {\n                            postRequest('POST', eventsRequestURL, JSON.stringify({ 'ambassador': ambassador[0].fullName }))\n                                .then(events => {\n                                    setEventsData(events)\n                                    setIsLoading(false)\n                                    setFetch(false)\n                                })\n                        })\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n\n    if (isLoading === true) {\n        return (\n            <Panel id={id}>\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\n                </div>\n            </Panel>\n        )\n    }\n\n    return (\n        <View activePanel={id} modal={modal} >\n            <Panel id={id}>\n\n                <PanelHeader>\n                    Профиль\n                </PanelHeader>\n                <div style={{ marginBottom: 100 }}>\n                    {fetchedUser &&\n                        <Group>\n                            <RichCell\n                                href={\"https://vk.com/id\" + user.vkID}\n                                target=\"_blank\"\n                                before={<Avatar size={72} src={fetchedUser.photo_100} />}>\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\n                                <br />\n                            </RichCell>\n                        </Group>\n                    }\n                    <Group header={<Header mode=\"secondary\">Информация о амбассадорах</Header>}>\n                        <Cell indicator='5' >\n                            Количество амбассадоров\n                        </Cell>\n                        {/* <Div>\n                            <Button size=\"xl\" style={{ background: \"#fc2c38\" }} onClick={() => { setActivePanel(ROUTES.CONFIRM); }}> Отчет </Button>\n                        </Div> */}\n                        <Group header={<Header mode=\"secondary\">Статистика excle</Header>}>\n                            <CellButton style={{ color: \"#fc2c38\" }} onClick={() => { setActivePanel(ROUTES.CONFIRM); }}>Скачать отчет</CellButton>\n                        </Group>\n                    </Group>\n                </div>\n\n\n                <Epic>\n                    <Tabbar style={{ marginTop: '100px' }}>\n                        <TabbarItem onClick={go} data-to=\"listambassador\" text=\"Амбассадоры\">\n                            <Icon28Users3Outline />\n                        </TabbarItem>\n\n                        <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\n                            <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\n                        </TabbarItem>\n                    </Tabbar>\n                </Epic>\n\n            </Panel>\n        </View>\n    )\n}\n\n\nexport default ProfileMrg;","import $ from \"jquery\";\r\nlet id = 5\r\nlet urlExport = 'https://exporter.azurewebsites.net/api/export/ExportFromJSON/' + id;\r\n\r\nfunction findExtension(id) {\r\n    switch (id) {\r\n        case 5:\r\n            return \"xlsx\";\r\n        case 4:\r\n            return \"docx\";\r\n        case 3:\r\n            return \"pdf\";\r\n        default:\r\n            return \"notKnown\" + id;\r\n    }\r\n}\r\n\r\nexport function excelReport(data) {\r\n    let ext = findExtension(id);\r\n    let sortData = data.map((element) => {\r\n        delete element._id;\r\n        delete element.__v;\r\n        delete element.uploadsLinks;\r\n        return element\r\n    });\r\n    sortData = JSON.stringify(sortData)\r\n\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: urlExport,\r\n        data: JSON.stringify({ 'data': sortData }),\r\n        datatype: \"JSON\",\r\n        contentType: \"application/json; charset=utf-8\"\r\n    })\r\n        .done(function (result) {\r\n            let urlDownload = 'https://exporter.azurewebsites.net/api/export/GetFile/' + result;\r\n            urlDownload += \"?fileName=ReportOfAmbassador&extension=\" + ext;\r\n            window.location.href=urlDownload\r\n        })\r\n        .fail(function (f) {\r\n            alert(\"error:\" + f.responseText);\r\n        });\r\n}","import React from 'react';\r\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { View, ModalRoot, Avatar, ModalPage, ModalPageHeader, RichCell, Group, PanelHeader, Panel, ScreenSpinner, Header, Cell, PanelHeaderButton, Counter, CellButton } from '@vkontakte/vkui';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\r\n\r\n\r\nconst ProfileForInfo = ({ id, go, info }) => {\r\n\r\n    const ROUTES = {\r\n        PROFILEINFO: 'profileInfo',\r\n        INSIDEEVENTS: 'inside',\r\n        OUTSIDEEVENTS: 'outside',\r\n        HELPANDSUPPORT: 'helpAndSupport'\r\n    };\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [user, setUser] = React.useState();\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [fetch, setFetch] = React.useState(true);\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n\r\n    const profileModal = (\r\n        <ModalRoot\r\n            activeModal={activeModal}\r\n            onClose={modalBack}\r\n        >\r\n            <ModalPage\r\n                id={ROUTES.PROFILEINFO}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Подробнее\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell indicator={user ? user.clothingSize : 'empty'} >\r\n                        Размер одежды\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.personalPostalAddress : 'empty'} >\r\n                        Почтовый адрес (с индексом)\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.latinFullName : 'empty'} >\r\n                        Фамилия и имя по-латински\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.university : 'empty'} >\r\n                        Полное название учебного заведения\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.facultyFull : 'empty'} >\r\n                        Полное название факультета\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.facultyShortly : 'empty'} >\r\n                        Краткое название факультета\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.statusInUniversity : 'empty'} >\r\n                        Статус\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.facultyFull : 'empty'} >\r\n                        Факультет\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.specialty : 'empty'} >\r\n                        Специальность\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.universityPostalAddress : 'empty'} >\r\n                        Адрес учебного заведения\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.rectorFullName : 'empty'} >\r\n                        ФИО ректора\r\n                        </Cell>\r\n                    <Cell indicator={user ? user.rectorPostalAddress : 'empty'} >\r\n                        Email ректора\r\n                        </Cell>\r\n\r\n\r\n                </Group>\r\n\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.INSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внутреннее\" && i.eventForm === \"Онлайн\") }).length : 'empty'} </Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.OUTSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внешнее\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.HELPANDSUPPORT}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n        </ModalRoot>\r\n    )\r\n\r\n    if (fetch) {\r\n        postRequest('POST', requestURL, JSON.stringify({ \"vkID\": info }))\r\n            .then(data => {\r\n                setUser(data[0]);\r\n                postRequest('POST', eventsRequestURL, JSON.stringify({ \"ambassador\": data[0].fullName }))\r\n                    .then(events => {\r\n                        setEventsData(events)\r\n                        setIsLoading(false)\r\n                        setFetch(false)\r\n                    })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View activePanel={id} modal={profileModal}>\r\n            <Panel id={id}>\r\n\r\n                <PanelHeader \r\n                left={<PanelHeaderButton style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"listambassador\" > <Icon24Cancel /></PanelHeaderButton>}>\r\n                    Профиль\r\n            </PanelHeader>\r\n                <div style={{ marginBottom: 100 }}>\r\n                    {\r\n                        <Group>\r\n                            <RichCell\r\n                                href={\"https://vk.com/id\" + user.vkID}\r\n                                target=\"_blank\"\r\n                                /* before={<Avatar size={72} src={fetchedUser.photo_100} />} */>\r\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\r\n                                <br />\r\n                            </RichCell>\r\n                        </Group>\r\n                    }\r\n\r\n                    <Group header={<Header mode=\"secondary\">Статистика</Header>}>\r\n                        <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.length}</Counter>}>\r\n                            Всего мероприятий\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.INSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" }).length}</Counter>}>\r\n                            Внутренние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.OUTSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" }).length}</Counter>}>\r\n                            Внешние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.HELPANDSUPPORT); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" }).length}</Counter>}>\r\n                            Помощь и поддержка\r\n                            </Cell>\r\n\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Информация о пользователе</Header>}>\r\n                        <Cell indicator={user.town} >\r\n                            Город\r\n                        </Cell>\r\n                        <Cell indicator={user.birthday} >\r\n                            Дата рождения\r\n                        </Cell>\r\n                        <Cell indicator={formatPhoneNumber(user.phoneNumber)} >\r\n                            Номер телефона\r\n                        </Cell>\r\n                        <Cell indicator={user.personalEmail} >\r\n                            Email\r\n                        </Cell>\r\n                        <Cell indicator={user.universityShortly} >\r\n                            Учебное заведение\r\n                        </Cell>\r\n                        <Cell indicator={user.statusInUniversity} >\r\n                            Статус\r\n                        </Cell>\r\n                        <CellButton\r\n                            style={{ color: '#fc2c38' }}\r\n                            onClick={() => { setActivePanel(ROUTES.PROFILEINFO); }}>Дополнительная информация</CellButton>\r\n                    </Group>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileForInfo;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\n// import {excelReport} from \"./functions/excelReport\"\r\nimport { View, Div, ModalRoot, ModalPage, ModalPageHeader, Banner, Group, PanelHeader, Panel, PanelHeaderButton, Epic, Tabbar, TabbarItem, ScreenSpinner, Cell, InfoRow, Link, Placeholder } from '@vkontakte/vkui';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel'\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\n\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\r\n\r\nconst requestURL = \"https://ambassador-todo.herokuapp.com/event/ambassador\"\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\nconst ROUTES = {\r\n    EVENTSINFO: 'eventsInfo'\r\n};\r\n\r\n\r\n\r\nconst EventsForInfo = ({ id, go, info }) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n    const [eventId, setEventId] = React.useState(0);\r\n    const [fetch, setFetch] = React.useState(true);\r\n\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    if (fetch) {\r\n        postRequest('POST', userRequestURL, JSON.stringify({ \"vkID\": info }))\r\n            .then(data => {\r\n                postRequest('POST', requestURL, JSON.stringify({ ambassador: data[0].fullName }))\r\n                    .then(data => {\r\n                        setEventsData(data)\r\n                        setIsLoading(false)\r\n                        setFetch(false)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    if (eventsData.length > 0) {\r\n        const modal = (\r\n            <ModalRoot\r\n                activeModal={activeModal}\r\n                onClose={modalBack}\r\n            >\r\n                <ModalPage\r\n                    id={ROUTES.EVENTSINFO}\r\n                    onClose={modalBack}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                            {eventsData ? eventsData[eventId].nameEvent : 'empty'}\r\n                        </ModalPageHeader>}>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n\r\n                    <Cell>\r\n                        <InfoRow header=\"Место проведения\">\r\n                            {eventsData ? eventsData[eventId].eventPlace : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат участия\">\r\n                            {eventsData ? eventsData[eventId].participationForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Дата проведения\">\r\n                            {eventsData ? eventsData[eventId].date : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Тип мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventType : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Роль компании\">\r\n                            {eventsData ? eventsData[eventId].companyRole : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Краткое описание\">\r\n                            {eventsData ? eventsData[eventId].description : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Количество участников\">\r\n                            {eventsData ? eventsData[eventId].participants : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Ссылки\">\r\n                            <Link href={eventsData[eventId].publicationLinks} target=\"_blank\"><span href={eventsData[eventId].publicationLinks} >{eventsData ? eventsData[eventId].publicationLinks : 'empty'}</span></Link>\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Заметки\">\r\n                            {eventsData ? eventsData[eventId].notes : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        )\r\n\r\n        return (\r\n            <View activePanel={id} modal={modal}>\r\n                <Panel id={id}>\r\n                    <PanelHeader\r\n                        left={<PanelHeaderButton style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"listambassador\" > <Icon24Cancel /></PanelHeaderButton>}>\r\n                        Мероприятия\r\n                </PanelHeader>\r\n                    <Group>\r\n                        <Div>\r\n                            {eventsData.map((event, eventId) => (\r\n                                <Banner key={event._id}\r\n                                    header={<React.Fragment>\r\n                                        <span style={{ fontWeight: '300', color: \"#fc2c38\", marginBottom: '10px' }}>{event.eventForm}, {event.eventType}</span> <br />\r\n                                        <span>{event.nameEvent}</span>\r\n\r\n                                    </React.Fragment>}\r\n                                    subheader={<React.Fragment>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <Icon20CalendarOutline />\r\n                                        </div>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <span style={{}}>{event.date}</span>\r\n                                        </div>\r\n\r\n                                    </React.Fragment>}\r\n                                    asideMode=\"expand\"\r\n                                    onClick={() => { setEventId(eventId); setActivePanel(ROUTES.EVENTSINFO); }}\r\n                                />\r\n                            ))}\r\n                        </Div>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\r\n                Мероприятия\r\n        </PanelHeader>\r\n            <Group>\r\n                <Div>\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline style={{ color: 'rgb(176,182,192)' }} />}\r\n                        stretched\r\n                    >\r\n                        Нет мероприятий<br />\r\n                    </Placeholder>\r\n                </Div>\r\n            </Group>\r\n\r\n            <Epic>\r\n                <Tabbar style={{ marginTop: '100px' }}>\r\n                    <TabbarItem onClick={go} data-to=\"listambassador\" text=\"Амбассадоры\">\r\n                        <Icon28Users3Outline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\r\n                        <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            </Epic>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default EventsForInfo;\r\n","import React, { useState, useEffect } from 'react';\nimport { postRequest } from \"./panels/functions/fetch.js\";\nimport { Panel } from '@vkontakte/vkui';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Events from './panels/Events';\nimport Info from './panels/Info';\nimport Achivements from './panels/Achivements';\nimport Profile from './panels/Profile';\nimport ListAmbassador from './panels/listAmbassador';\nimport Editprofile from './panels/editProfile';\nimport Badge from './panels/Badge';\nimport AddEventFirst from './panels/AddEventFirst';\nimport AddEventSecondVnesh from './panels/AddEventSecondVnesh';\nimport AddEventSecondVnutr from './panels/AddEventSecondVnutr';\nimport AddEventSecondHelp from './panels/AddEventSecondHelp';\nimport AddEventVneshOff from './panels/AddEventVneshOff';\nimport AddEventVnutrOnl from './panels/AddEventVnutrOnl';\nimport AddEventVnutrOff from './panels/AddEventVnutrOff';\nimport AddEventHelpOnl from './panels/AddEventHelpOnl';\nimport AddEventHelpOff from './panels/AddEventHelpOff';\nimport ProfileMrg from './panels/profilemrg';\nimport ProfileForInfo from './panels/ProfileForInfo';\nimport EventsForInfo from './panels/EventsForInfo';\n\n\nconst ROUTES = {\n\tHOME: 'home',\n\tEVENTS: 'events',\n\tINFO: 'info',\n\tACHIVEMENTS: 'achivements',\n\tPROFILE: 'profile',\n\tEVENTSMENTOR: 'eventsmentor',\n\tEDITPROFILE: 'editprofile',\n\tBADGE: 'badge',\n\tADDEVENTFIRST: 'addeventfirst',\n\tADDEVENTSECONDVNESH: 'addeventsecondvnesh',\n\tADDEVENTSECONDVNUTR: 'addeventsecondvnutr',\n\tADDEVENTSECONDHELP: 'addeventsecondhelp',\n\tADDEVENTVNESHOFF: 'addeventvneshoff',\n\tADDEVENTVNUTRONL: 'addeventvnutronl',\n\tADDEVENTVNUTROFF: 'addeventvnutroff',\n\tADDEVENTHELPONL: 'addeventhelponl',\n\tADDEVENTHELPOFF: 'addeventhelpoff',\n\tPROFILEMRG: 'profilemrg',\n\tLISTAMBASSADOR: 'listambassador',\n\tPROFILEFORINFO: 'profileforinfo',\n\tEVENTSFORINFO: 'eventsforinfo',\n};\n\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\n\n\nconst App = () => {\n\n\tconst [activePanel, setActivePanel] = useState(ROUTES.PROFILE);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [isLoading, setIsLoading] = React.useState(true);\n\tconst [fetch, setFetch] = React.useState(true);\n\tconst [info, setInfo] = React.useState();\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\t// if (type === 'VKWebAppUpdateConfig') {\n\t\t\t// \tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t// \tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t// \tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t// }\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tsetInfo(e.currentTarget.dataset.id);\n\t};\n\n\t// const role = 'ambassador';\n\n\tif (fetch) {\n\t\tif (fetchedUser != null) {\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\n\t\t\tpostRequest('POST', requestURL, vkID)\n\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data[0].role === 'ambassador') {\n\t\t\t\t\t\tsetActivePanel(ROUTES.PROFILE)\n\t\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\t\tsetFetch(false)\n\t\t\t\t\t}\n\t\t\t\t\telse if (data[0].role === 'mentor') {\n\t\t\t\t\t\tsetActivePanel(ROUTES.PROFILEMRG)\n\t\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\t\tsetFetch(false)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(err))\n\t\t}\n\t}\n\n\tif (isLoading === true) {\n\t\treturn (\n\t\t\t<Panel>\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t\t\t<ScreenSpinner style={{ marginTop: '50%' }} />\n\t\t\t\t</div>\n\t\t\t</Panel>\n\t\t)\n\t}\n\n\n\n\t// if (role === 'ambassador'){\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Profile id='profile' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Badge id='badge' go={go} />\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<AddEventFirst id='addeventfirst' go={go} />\n\t\t\t<AddEventSecondVnesh id='addeventsecondvnesh' go={go} />\n\t\t\t<Editprofile id='editprofile' fetchedUser={fetchedUser} go={go} />\n\t\t\t<AddEventSecondVnutr id='addeventsecondvnutr' go={go} />\n\t\t\t<AddEventSecondHelp id='addeventsecondhelp' go={go} />\n\t\t\t<AddEventVneshOff fetchedUser={fetchedUser} id='addeventvneshoff' go={go} />\n\t\t\t<AddEventVnutrOnl fetchedUser={fetchedUser} id='addeventvnutronl' go={go} />\n\t\t\t<AddEventVnutrOff fetchedUser={fetchedUser} id='addeventvnutroff' go={go} />\n\t\t\t<AddEventHelpOnl fetchedUser={fetchedUser} id='addeventhelponl' go={go} />\n\t\t\t<AddEventHelpOff fetchedUser={fetchedUser} id='addeventhelpoff' go={go} />\n\t\t\t<Achivements id='achivements' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Info id='info' go={go} />\n\t\t\t<Events id='events' fetchedUser={fetchedUser} go={go} />\n\t\t\t<ProfileForInfo id='profileforinfo' go={go} info={info}/>\n\t\t\t<EventsForInfo id='eventsforinfo' go={go} info={info}/>\n\t\t\t<ProfileMrg id='profilemrg' fetchedUser={fetchedUser} go={go} />\n\t\t\t<ListAmbassador id='listambassador' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n\t// }\n\t// else if(role === 'mentor'){\n\t// \t// setActivePanel(ROUTES.EVENTSMENTOR);\n\t// \treturn (\n\t// \t\t<View activePanel={activePanel} popout={popout}>\n\t// \t\t\t<Profile id='profile' fetchedUser={fetchedUser} go={go} />\n\t// \t\t\t{/* <Events id='events' fetchedUser={fetchedUser} go={go} /> */}\n\t// \t\t\t<Eventsmentor id='eventsmentor' fetchedUser={fetchedUser} go={go} />\n\t// \t\t</View>\n\t// \t);\n\t// }\n\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport './styles.css'\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}