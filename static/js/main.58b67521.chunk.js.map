{"version":3,"sources":["panels/functions/fetch.js","panels/Home.js","panels/Events.js","panels/Info.js","panels/Achivements.js","panels/Profile.js","panels/listAmbassador.js","panels/editProfile.js","panels/Badge.js","panels/AddEventFirst.js","panels/AddEventSecondVnesh.js","panels/AddEventSecondVnutr.js","panels/AddEventSecondHelp.js","panels/AddEventVneshOff.js","panels/AddEventVnutrOnl.js","panels/AddEventVnutrOff.js","panels/AddEventHelpOnl.js","panels/AddEventHelpOff.js","panels/profilemrg.js","panels/functions/excelReport.js","panels/ProfileForInfo.js","panels/EventsForInfo.js","App.js","index.js"],"names":["postRequest","method","url","body","fetch","headers","then","response","json","Home","fetchedUser","id","go","React","useState","user","setUser","nameEvent","setNameEvent","place","setPlace","date","setDate","links","setLinks","participants","setParticipants","eventType","SetEventType","description","SetDescription","notes","SetNotes","callback","setCallback","setFetch","JSON","stringify","data","catch","err","console","log","left","style","color","onClick","data-to","onChange","event","target","value","type","name","top","required","slice","formatDate","placeholder","backgroundColor","size","ambassador","fullName","university","participationForm","eventForm","eventPlace","participantsCallback","uploadsLinks","publicationLinks","onMouseUp","ROUTES","Events","isLoading","setIsLoading","eventsData","setEventsData","activeModal","setActivePanel","eventId","setEventId","modalBack","display","alignItems","flexDirection","marginTop","length","modal","onClose","header","companyRole","href","activePanel","map","key","_id","Fragment","fontWeight","marginBottom","subheader","asideMode","text","width","height","icon","stretched","Info","mode","expandable","before","Achivements","users","setUsers","request","setRequest","role","filtredUsers","filter","i","n","grade","vkID","after","universityShortly","margin","universityShorlty","Profile","profileModal","multiline","indicator","clothingSize","personalPostalAddress","latinFullName","facultyFull","facultyShortly","statusInUniversity","specialty","universityPostalAddress","rectorFullName","rectorPostalAddress","background","shadow","fill","events","src","photo_100","fontSize","town","birthday","formatPhoneNumber","phoneNumber","personalEmail","className","ListAmbassador","ambassadors","setAmbassadors","disabled","actions","data-id","caption","Editprofile","setUniversity","phone","setPhone","personalemail","setPersonalEmail","setBirthday","universitypostaladdress","setUniversityPostalAddress","rectorfullname","setRectorFullName","rectorpostaladdress","setRectorPostalAddress","statusinuniversity","setStatusInUniversity","facultyfull","setFacultyFull","facultyshortly","setFacultyShortly","setSpecialty","personalpostaladdress","setPersonalPostalAddress","clothingsize","setClothingSize","setFullName","fullNameLatin","setFullNameLatin","setTown","setUniversityShortly","pattern","bottom","ype","avatar","achievements","avatars","Badge","separator","borderRadius","alt","objectFit","objectPosition","zIndex","AddEventFirst","AddEventSecondVnesh","AddEventSecondVnutr","AddEventSecondHelp","AddEventVneshOff","AddEventVnutrOnl","AddEventVnutrOff","AddEventHelpOnl","AddEventHelpOff","requestURL","ProfileMrg","quantity","setQuantity","month","setMonth","filtredEvents","ext","findExtension","sortData","element","__v","$","ajax","datatype","contentType","done","result","urlDownload","window","location","fail","f","alert","responseText","excelReport","eventsForMentors","push","ProfileForInfo","info","setGrade","EventsForInfo","App","popout","setPopout","setInfo","useEffect","a","bridge","send","subscribe","detail","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"6hBAAO,SAASA,EAAYC,EAAQC,EAAKC,GAIrC,OAAOC,MAAMF,EAAK,CAAED,OAAQA,EAAQI,QAHpB,CACZ,eAAgB,oBAEkCF,SAAQG,MAAK,SAAAC,GAC/D,OAAOA,EAASC,U,8CC2ITC,G,OAxIF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAOjBC,IAAMC,WAPW,mBAOlCC,EAPkC,KAO5BC,EAP4B,OAQPH,IAAMC,WARC,mBAQlCG,EARkC,KAQvBC,EARuB,OASfL,IAAMC,WATS,mBASlCK,EATkC,KAS3BC,EAT2B,OAUjBP,IAAMC,WAVW,mBAUlCO,EAVkC,KAU5BC,EAV4B,OAYfT,IAAMC,WAZS,mBAYlCS,EAZkC,KAY3BC,EAZ2B,OAaDX,IAAMC,WAbL,mBAalCW,EAbkC,KAapBC,EAboB,OAcPb,IAAMC,WAdC,mBAclCa,EAdkC,KAcvBC,EAduB,OAeHf,IAAMC,WAfH,mBAelCe,EAfkC,KAerBC,EAfqB,OAgBfjB,IAAMC,WAhBS,mBAgBlCiB,EAhBkC,KAgB3BC,EAhB2B,OAiBTnB,IAAMC,WAjBG,mBAiBlCmB,EAjBkC,KAiBxBC,EAjBwB,OAkBfrB,IAAMC,UAAS,GAlBA,mBAkBlCV,EAlBkC,KAkB3B+B,EAlB2B,KAqBtC/B,IACgB,MAAfM,GAEHV,EAAY,OA1BS,oDAyBRoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAkE5B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,yBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SArEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAoEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SA9DU,SAACC,GACrB3B,EA1CkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAE,IAAMnC,EAAKmC,MAAM,EAAE,GAAKnC,EAAKmC,MAAM,EAAE,GAyCxDC,CAAWR,EAAMC,OAAOC,SA6DEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SAnEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QAkEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAASP,SAnDa,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QAkDeG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GACnF,4BAAQJ,MAAM,kHAAd,kHACA,4BAAQA,MAAM,sEAAd,sEACA,4BAAQA,MAAM,qFAAd,qFACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SArDc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QAoDgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SArEc,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QAoEaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAASN,SAlEgB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QAiEeG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC5F,4BAAQJ,MAAM,mDAAd,mDACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SArEQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QAoEgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SA3DQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QA0DgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAzDvD,WAkBnB9C,EAAY,OA1FK,8CAyENoC,KAAKC,UAAU,CACzBwB,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,WACjBC,kBAAmB,6CACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,KAGNQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAsCqE8B,UAAW1D,EAAImC,UAAQ,UAApH,yD,wICxHCwB,EACU,aAmNDC,EA9MA,SAAC,GAA6B,IAA3B9D,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAGNC,IAAMC,UAAS,GAHT,mBAGjC2D,EAHiC,KAGtBC,EAHsB,OAIJ7D,IAAMC,WAJF,mBAIjC6D,EAJiC,KAIrBC,EAJqB,OAKF/D,IAAMC,SAAS,MALb,mBAKjC+D,EALiC,KAKpBC,EALoB,OAMVjE,IAAMC,SAAS,GANL,mBAMjCiE,EANiC,KAMxBC,EANwB,OAOdnE,IAAMC,UAAS,GAPD,mBAOjCV,EAPiC,KAO1B+B,EAP0B,KASlC8C,EAAY,WACdH,EAAe,OAGf1E,IACmB,MAAfM,GAEAV,EAAY,OAvBD,oDAsBEoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAE7CL,MAAK,SAAAgC,GACFtC,EAAY,OA1Bb,yDA0BiCoC,KAAKC,UAAU,CAAEwB,WAAYvB,EAAK,GAAGwB,YAChExD,MAAK,SAAAgC,GACFsC,EAActC,GACdoC,GAAa,GACbvC,GAAS,MAEZI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAEjCD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAItC,IAAkB,IAAdiC,EACA,OACI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAKnD,GAAIV,EAAWW,OAAS,EAAG,CACvB,IAAMC,EACF,kBAAC,IAAD,CACIV,YAAaA,EACbW,QAASP,GAET,kBAAC,IAAD,CACItE,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QAC5CN,EAAaA,EAAWI,GAAS9D,UAAY,UAEtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASwE,OAAO,2GACXd,EAAaA,EAAWI,GAASd,UAAY,UAItD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASwB,OAAO,+FACXd,EAAaA,EAAWI,GAASb,WAAa,UAGvD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASuB,OAAO,mFACXd,EAAaA,EAAWI,GAASf,kBAAoB,UAG9D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASyB,OAAO,yFACXd,EAAaA,EAAWI,GAAS1D,KAAO,UAGjD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASoE,OAAO,yFACXd,EAAaA,EAAWI,GAASpD,UAAY,UAGtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS8D,OAAO,6EACXd,EAAaA,EAAWI,GAASW,YAAc,UAGxD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASD,OAAO,+FACXd,EAAaA,EAAWI,GAASlD,YAAc,UAGxD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS4D,OAAO,6HACXd,EAAaA,EAAWI,GAAStD,aAAe,UAGzD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASgE,OAAO,wCACZ,kBAAC,IAAD,CAAME,KAAMhB,EAAWI,GAASV,iBAAkBnB,OAAO,UAAS,0BAAMyC,KAAMhB,EAAWI,GAASV,kBAAoBM,EAAaA,EAAWI,GAASV,iBAAmB,YAGlL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASoB,OAAO,8CACXd,EAAaA,EAAWI,GAAShD,MAAQ,YAO9D,OACI,kBAAC,IAAD,CAAM6D,YAAajF,EAAI4E,MAAOA,GAC1B,kBAAC,IAAD,CAAO5E,GAAIA,GACP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,KAAmB,kBAAC,IAAD,CAAkBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,oBADjG,sEAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK4B,EAAWkB,KAAI,SAAC5C,EAAO8B,GAAR,OACZ,kBAAC,IAAD,CAAQe,IAAK7C,EAAM8C,IACfN,OAAQ,kBAAC,IAAMO,SAAP,KACJ,0BAAMpD,MAAO,CAAEqD,WAAY,MAAOpD,MAAO,UAAWqD,aAAc,SAAWjD,EAAMgB,UAAnF,KAAgGhB,EAAMtB,WADlG,IACoH,6BACxH,8BAAOsB,EAAMhC,YAGjBkF,UAAW,kBAAC,IAAMH,SAAP,KACP,yBAAKpD,MAAO,CAAEsC,QAAS,iBACnB,kBAAC,IAAD,OAEJ,yBAAKtC,MAAO,CAAEsC,QAAS,iBACnB,0BAAMtC,MAAO,IAAKK,EAAM5B,QAIhC+E,UAAU,SACVtD,QAAS,WAAQkC,EAAWD,GAAUD,EAAeP,WAMrE,kBAAC,IAAD,CAAM3B,MAAO,CAAEyC,UAAW,UACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYzC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,SAASsD,KAAK,sEACxE,kBAAC,IAAD,CAAuBzD,MAAO,CAAEC,MAAO,cAG3C,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,cAAcsD,KAAK,8CAChD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,OAAOsD,KAAK,iEACzC,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,UAAUsD,KAAK,8CAC5C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,UASlE,OACI,kBAAC,IAAD,CAAO5F,GAAIA,GACP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,KAAmB,kBAAC,IAAD,CAAkBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,oBADjG,sEAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyD,KAAM,kBAAC,IAAD,CAA4B5D,MAAO,CAAEC,MAAO,sBAClD4D,WAAS,GAFb,wFAImB,gCAK3B,kBAAC,IAAD,CAAM7D,MAAO,CAAEyC,UAAW,UACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYzC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,SAASsD,KAAK,sEACxE,kBAAC,IAAD,CAAuBzD,MAAO,CAAEC,MAAO,cAG3C,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,cAAcsD,KAAK,8CAChD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,OAAOsD,KAAK,iEACzC,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,UAAUsD,KAAK,8CAC5C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,U,iBCtI/CG,EAvEF,SAAC,GAAgB,IAAd/F,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAEnB,OAEC,kBAAC,IAAD,CAAOD,GAAIA,GAEV,kBAAC,IAAD,sEAGA,kBAAC,IAAD,CAAO8E,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,+CACE,kBAAC,IAAD,CAAMC,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,0GAA9F,qFAIR,kBAAC,IAAD,CAAOF,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,uGACP,kBAAC,IAAD,CAAMC,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAgBK,OAAO,SAASyC,KAAK,8CAA/F,uGAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAgBK,OAAO,SAASyC,KAAK,4BAA/F,8GAIR,kBAAC,IAAD,CAAOF,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,mHACP,kBAAC,IAAD,CAAMC,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,oEAA9F,6JAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,4CAA9F,uRAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,0FAA9F,sKAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,yFAA9F,gLAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,iDAA9F,kUAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,oDAA9F,kRAGA,kBAAC,IAAD,CAAMiB,YAAU,EAACC,OAAQ,kBAAC,IAAD,CAAmBjE,MAAO,CAACC,MAAM,aAAeK,OAAO,SAASyC,KAAK,iEAA9F,4GAKR,kBAAC,IAAD,CAAM/C,MAAO,CAAEyC,UAAW,UACtB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYvC,QAASlC,EAAImC,UAAQ,SAASsD,KAAK,sEAC3C,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,cAAcsD,KAAK,8CAChD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYzD,MAAO,CAACC,MAAM,WAAYC,QAASlC,EAAImC,UAAQ,OAAOsD,KAAK,iEACnE,kBAAC,IAAD,CAAoBzD,MAAO,CAACC,MAAM,cAGtC,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,UAAUsD,KAAK,8CAC5C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,UC8B3CO,EA1FK,SAAC,GAA6B,IAA3BpG,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAGnBC,IAAMC,WAHa,mBAGtCiG,EAHsC,KAG/BC,EAH+B,OAIXnG,IAAMC,UAAS,GAJJ,mBAItC2D,EAJsC,KAI3BC,EAJ2B,OAKrB7D,IAAMC,WALe,mBAKtCC,EALsC,KAKhCC,EALgC,OAMfH,IAAMC,UAAS,GANA,mBAMtCmG,EANsC,KAM7BC,EAN6B,OAOnBrG,IAAMC,UAAS,GAPI,mBAOtCV,EAPsC,KAO/B+B,EAP+B,MAUzC8E,GACAjH,EAAY,OAdD,oDAcqBoC,KAAKC,UAAU,CAAE8E,KAAM,gBAClD7G,MAAK,SAAAgC,GACF,IAAI8E,EAAe9E,EAAK+E,QAAO,SAAUC,EAAGC,GAAK,MAAmB,eAAXD,EAAEH,MAAyBG,EAAEE,SACtF/E,QAAQC,IAAI0E,GACZJ,EAASI,GACT1C,GAAa,GACbwC,GAAW,MAEd3E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAG9BpC,KACmB,MAAfM,GAEAV,EAAY,OA3BD,oDA0BEoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAG7CL,MAAK,SAAAgC,GACFtB,EAAQsB,EAAK,IACb4E,GAAW,GACX/E,GAAS,MAEZI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAMtC,OAAkB,IAAdiC,EAEI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAQ/C,kBAAC,IAAD,CAAO1E,GAAIA,GAEP,kBAAC,IAAD,mDAGCD,GACG,kBAAC,IAAD,CAAYiF,KAAM,oBAAsB5E,EAAK0G,KAAMvE,OAAO,SAASwE,MAAO3G,EAAKyG,MAAO3F,YAAad,EAAK4G,mBAAoB5G,EAAK+C,UACrI,kBAAC,IAAD,CAAWlB,MAAO,CAAEgF,OAAQ,YAC5B,kBAAC,IAAD,CAAOhF,MAAO,CAAEsD,aAAc,KACzBa,EAAMlB,KAAI,SAAC9E,EAAMJ,GAAP,OACP,kBAAC,IAAD,CAAYgF,KAAM,oBAAsB5E,EAAK0G,KAAMvE,OAAO,SAASwE,MAAO3G,EAAKyG,MAAO1B,IAAK/E,EAAKgF,IAAKlE,YAAad,EAAK8G,mBAAoB9G,EAAK+C,cAIxJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYhB,QAASlC,EAAImC,UAAQ,SAASsD,KAAK,sEAC3C,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYzD,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,cAAcsD,KAAK,8CAC7E,kBAAC,IAAD,CAAmBzD,MAAO,CAAEC,MAAO,cAGvC,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,OAAOsD,KAAK,iEACzC,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,UAAUsD,KAAK,8CAC5C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,U,2CC4L/CuB,EArQC,SAAC,GAA6B,IAA3BpH,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAE1B2D,EACW,cADXA,EAEY,SAFZA,EAGa,UAHbA,EAIc,iBAEdU,EAAY,WACdH,EAAe,OATsB,EAYPjE,IAAMC,UAAS,GAZR,mBAYlC2D,EAZkC,KAYvBC,EAZuB,OAajB7D,IAAMC,WAbW,mBAalCC,EAbkC,KAa5BC,EAb4B,OAcLH,IAAMC,WAdD,mBAclC6D,EAdkC,KActBC,EAdsB,OAef/D,IAAMC,UAAS,GAfA,mBAelCV,EAfkC,KAe3B+B,EAf2B,OAgBHtB,IAAMC,SAAS,MAhBZ,mBAgBlC+D,EAhBkC,KAgBrBC,EAhBqB,KAkBnCiD,EACF,kBAAC,IAAD,CACIlD,YAAaA,EACbW,QAASP,GAET,kBAAC,IAAD,CACItE,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,2DAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM+C,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKmH,aAAe,UAA7D,6EAGA,kBAAC,IAAD,CAAMF,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKoH,sBAAwB,UAAtE,6IAGA,kBAAC,IAAD,CAAMH,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKqH,cAAgB,UAA/D,uHAGA,kBAAC,IAAD,CAAMJ,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKgD,WAAa,UAA5D,iMAGA,kBAAC,IAAD,CAAMiE,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKsH,YAAc,UAA7D,sJAGA,kBAAC,IAAD,CAAML,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKuH,eAAiB,UAAhE,4JAGA,kBAAC,IAAD,CAAMN,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKwH,mBAAqB,UAApE,wCAGA,kBAAC,IAAD,CAAMP,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKsH,YAAc,QAAlC,MAA3B,0DAGA,kBAAC,IAAD,CAAML,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAKyH,UAAY,QAAhC,MAA3B,kFAGA,kBAAC,IAAD,CAAMR,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAK0H,wBAA0B,QAA9C,MAA3B,0IAGA,kBAAC,IAAD,CAAMT,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAK2H,eAAiB,UAAhE,iEAGA,kBAAC,IAAD,CAAMV,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAQlH,EAAOA,EAAK4H,oBAAsB,UAArE,sDASR,kBAAC,IAAD,CACIhI,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,iEAAxBD,EAAEtD,mBAAsD,yCAAhBsD,EAAErD,aAA2BqB,OAAS,QAAlJ,MADf,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,iEAAxBD,EAAEtD,mBAAsD,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UAD/J,0CAOR,kBAAC,IAAD,CACI3E,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,+CAAxBD,EAAEtD,mBAAmD,yCAAhBsD,EAAErD,aAA2BqB,OAAS,UAD9J,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,+CAAxBD,EAAEtD,mBAAmD,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UAD5J,0CAOR,kBAAC,IAAD,CACI3E,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,uGAAxBD,EAAEtD,mBAA8D,yCAAhBsD,EAAErD,aAA2BqB,OAAS,UADzK,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,uGAAxBD,EAAEtD,mBAA8D,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UADvK,2CAUZlF,IACmB,MAAfM,GAEAV,EAAY,OAhJL,oDA+IMoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAG7CL,MAAK,SAAAgC,GACFtB,EAAQsB,EAAK,IACbtC,EAAY,OAnJP,yDAmJiCoC,KAAKC,UAAU,CAAE,WAAcC,EAAK,GAAGwB,YACxExD,MAAK,SAAAyI,GACFnE,EAAcmE,GACdrE,GAAa,GACbvC,GAAS,SAGpBI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAKtC,OAAkB,IAAdiC,EAEI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAO/C,kBAAC,IAAD,CAAMO,YAAajF,EAAI4E,MAAOwC,GAC1B,kBAAC,IAAD,CAAOpH,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,KAAmB,kBAAC,IAAD,CAAoBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,kBADnG,8CAIA,yBAAKH,MAAO,CAAEsD,aAAc,MACvBxF,GACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIiF,KAAM,oBAAsB5E,EAAK0G,KACjCvE,OAAO,SACP2D,OAAQ,kBAAC,IAAD,CAAQjD,KAAM,GAAIoF,IAAKtI,EAAYuI,aAC3C,0BAAMrG,MAAO,CAAEsG,SAAU,SAAWnI,EAAK+C,UACzC,6BACA,0BAAMlB,MAAO,CAAEsG,SAAU,OAAQrG,MAAO,SAAW9B,EAAKyG,OACxD,+BAKZ,kBAAC,IAAD,CAAO/B,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,iEACX,kBAAC,IAAD,CAAME,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAWW,SADnD,qGAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAAyBsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACvJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,iEAAxBD,EAAEtD,qBAAsCsB,SAD3H,mIAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAA0BsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACxJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,+CAAxBD,EAAEtD,qBAAmCsB,SADxH,iHAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAA2BsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACzJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,uGAAxBD,EAAEtD,qBAA8CsB,SADnI,uGAMJ,kBAAC,IAAD,CAAOG,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,iJACX,kBAAC,IAAD,CAAMqB,WAAS,EAACC,UAAWlH,EAAKoI,MAAhC,kCAGA,kBAAC,IAAD,CAAMnB,WAAS,EAACC,UAAWlH,EAAKqI,UAAhC,6EAGA,kBAAC,IAAD,CAAMpB,WAAS,EAACC,UAAWoB,YAAkBtI,EAAKuI,cAAlD,mFAGA,kBAAC,IAAD,CAAMtB,WAAS,EAACC,UAAWlH,EAAKwI,eAAhC,SAGA,kBAAC,IAAD,CAAMvB,WAAS,EAACC,UAAW,yBAAKuB,UAAU,qBAAqBzI,EAAK4G,oBAApE,qGAIA,kBAAC,IAAD,CAAMK,WAAS,EAACC,UAAWlH,EAAKwH,oBAAhC,wCAGA,kBAAC,IAAD,CACI3F,MAAO,CAAEC,MAAO,WAChBC,QAAS,WAAQgC,EAAeP,KAFpC,uJAOR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ3B,MAAO,CAAEyC,UAAW,UACxB,kBAAC,IAAD,CAAYvC,QAASlC,EAAImC,UAAQ,SAASsD,KAAK,sEAC3C,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,cAAcsD,KAAK,8CAChD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYvD,QAASlC,EAAImC,UAAQ,OAAOsD,KAAK,iEACzC,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYzD,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,UAAUsD,KAAK,8CACzE,kBAAC,IAAD,CAAmBzD,MAAO,CAAEC,MAAO,WAAayD,MAAO,GAAIC,OAAQ,W,mCCzIhFkD,EA1HQ,SAAC,GAA6B,IAA3B/I,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAGdC,IAAMC,UAAS,GAHD,mBAGzC2D,EAHyC,KAG9BC,EAH8B,OAItB7D,IAAMC,UAAS,GAJO,mBAIzCV,EAJyC,KAIlC+B,EAJkC,OAKVtB,IAAMC,WALI,mBAKzC4I,EALyC,KAK5BC,EAL4B,KAO5CvJ,IACmB,MAAfM,GAEAV,EAAY,OAZD,oDAWEoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAE7CL,MAAK,SAAAgC,GACmB,WAAjBA,EAAK,GAAG6E,MACRnH,EAAY,OAfb,oDAeqCoC,KAAKC,UAAU,CAAE,OAAUC,EAAK,GAAGwB,YAClExD,MAAK,SAAAoJ,GACFC,EAAeD,GACfhF,GAAa,GACbvC,GAAS,MAGA,UAAjBG,EAAK,GAAG6E,MACRnH,EAAY,OAvBb,oDAuBqCoC,KAAKC,UAAU,CAAE,KAAQ,gBACxD/B,MAAK,SAAAoJ,GACFC,EAAeD,GACfhF,GAAa,GACbvC,GAAS,SAIxBI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAMtC,OAAkB,IAAdiC,EAEI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAO/CqE,EAAYpE,OAAS,EAGjB,kBAAC,IAAD,CAAO3E,GAAIA,GAEP,kBAAC,IAAD,2EAGA,kBAAC,IAAD,CAAOiC,MAAO,CAAEsD,aAAc,KACzBwD,EAAY7D,KAAI,SAAC9E,EAAMJ,GAAP,OACb,kBAAC,IAAD,CAAKmF,IAAK/E,EAAKgF,KACX,kBAAC,IAAD,CAAU6D,UAAQ,EACd5B,WAAS,EACT6B,QACI,kBAAC,IAAM7D,SAAP,KACI,kBAAC,IAAD,CAAQpD,MAAO,CAAEe,gBAAiB,UAAWd,MAAO,SAAWC,QAASlC,EAAImC,UAAQ,iBAAiB+G,UAAS/I,EAAK0G,MAAnH,8CACA,kBAAC,IAAD,CAAQ7E,MAAO,CAAEe,gBAAiB,UAAWd,MAAO,SAAWC,QAASlC,EAAImC,UAAQ,gBAAgB+G,UAAS/I,EAAK0G,MAAlH,uEAGRsC,QAAShJ,EAAK4G,mBAAqB5G,EAAK+C,eAMxD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQlB,MAAO,CAAEyC,UAAW,UACxB,kBAAC,IAAD,CAAYvC,QAASlC,EAAIgC,MAAO,CAAEC,MAAO,WAAaE,UAAQ,iBAAiBsD,KAAK,sEAChF,kBAAC,IAAD,CAAqBzD,MAAO,CAAEC,MAAO,cAGzC,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,aAAasD,KAAK,8CAC/C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,SAU1D,kBAAC,IAAD,CAAO5F,GAAIA,GAEP,kBAAC,IAAD,mDAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI6F,KAAM,kBAAC,IAAD,CAAsB5D,MAAO,CAAEC,MAAO,sBAC5C4D,WAAS,GAFb,8FAIoB,gCAK5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ7D,MAAO,CAAEyC,UAAW,UACxB,kBAAC,IAAD,CAAYvC,QAASlC,EAAIgC,MAAO,CAAEC,MAAO,WAAaE,UAAQ,iBAAiBsD,KAAK,sEAChF,kBAAC,IAAD,CAAqBzD,MAAO,CAAEC,MAAO,cAGzC,kBAAC,IAAD,CAAYC,QAASlC,EAAImC,UAAQ,aAAasD,KAAK,8CAC/C,kBAAC,IAAD,CAAmBC,MAAO,GAAIC,OAAQ,UC+F/CyD,EAlNK,SAAC,GAA6B,IAA3BtJ,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAQdC,IAAMC,UAAS,GARD,mBAQzC2D,EARyC,KAQ9BC,EAR8B,OASxB7D,IAAMC,WATkB,mBASzCC,EATyC,KASnCC,EATmC,OAUZH,IAAMC,WAVM,mBAUzCiD,EAVyC,KAU7BkG,EAV6B,OAWtBpJ,IAAMC,WAXgB,mBAWzCoJ,EAXyC,KAWlCC,EAXkC,OAYNtJ,IAAMC,WAZA,mBAYzCsJ,EAZyC,KAY1BC,EAZ0B,OAahBxJ,IAAMC,WAbU,mBAazCsI,EAbyC,KAa/BkB,EAb+B,OAcczJ,IAAMC,WAdpB,mBAczCyJ,EAdyC,KAchBC,EAdgB,OAeJ3J,IAAMC,WAfF,mBAezC2J,EAfyC,KAezBC,EAfyB,OAgBM7J,IAAMC,WAhBZ,mBAgBzC6J,EAhByC,KAgBpBC,EAhBoB,OAiBI/J,IAAMC,WAjBV,mBAiBzC+J,EAjByC,KAiBrBC,EAjBqB,OAkBVjK,IAAMC,WAlBI,mBAkBzCiK,EAlByC,KAkB5BC,EAlB4B,OAmBJnK,IAAMC,WAnBF,oBAmBzCmK,GAnByC,MAmBzBC,GAnByB,SAoBdrK,IAAMC,WApBQ,qBAoBzC0H,GApByC,MAoB9B2C,GApB8B,SAqBUtK,IAAMC,WArBhB,qBAqBzCsK,GArByC,MAqBlBC,GArBkB,SAsBRxK,IAAMC,WAtBE,qBAsBzCwK,GAtByC,MAsB3BC,GAtB2B,SAuBhB1K,IAAMC,WAvBU,qBAuBzCgD,GAvByC,MAuB/B0H,GAvB+B,SAwBN3K,IAAMC,WAxBA,qBAwBzC2K,GAxByC,MAwB1BC,GAxB0B,SAyBxB7K,IAAMC,WAzBkB,qBAyBzCqI,GAzByC,MAyBnCwC,GAzBmC,SA0BE9K,IAAMC,WA1BR,qBA0BzC6G,GA1ByC,MA0BtBiE,GA1BsB,SA2BtB/K,IAAMC,UAAS,GA3BO,qBA2BzCV,GA3ByC,MA2BlC+B,GA3BkC,MA6H5C/B,KACgB,MAAfM,GAEHV,EAAY,OA1HK,oDAyHJoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACboC,GAAa,GACbvC,IAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAI7B,OAAkB,IAAdiC,EAEF,kBAAC,IAAD,CAAO9D,GAAIA,GACV,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACnE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAStC,kBAAC,IAAD,CAAO1E,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,UAAUuB,UAAW1D,KAD/F,mIAEA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOoC,SAvHc,SAACC,GACzBuI,GAAYvI,EAAMC,OAAOC,QAsHaO,YAAa3C,EAAK+C,SAAUV,KAAK,OAAOC,KAAK,WAAWC,IAAI,qBAAMC,UAAQ,IAC7G,kBAAC,IAAD,CAAOP,SAhHW,SAACC,GACtBkH,EAAS,KAAOlH,EAAMC,OAAOC,QA+GMO,YAAa2F,YAAkBtI,EAAKuI,aAAcuC,QAAQ,iCAA+BzI,KAAK,OAAOC,KAAK,cAAcC,IAAI,6CAAUwI,OAAO,uKAAoDvI,UAAQ,IACzO,kBAAC,IAAD,CAAOP,SA5HmB,SAACC,GAC9ByI,GAAiBzI,EAAMC,OAAOC,QA2HaO,YAAa3C,EAAKqH,cAAehF,KAAK,OAAOC,KAAK,WAAWC,IAAI,sHAAuBC,UAAQ,IACxI,kBAAC,IAAD,CAAOP,SA9GmB,SAACC,GAC9BoH,EAAiBpH,EAAMC,OAAOC,QA6GaO,YAAa3C,EAAKwI,cAAenG,KAAK,OAAOC,KAAK,QAAQC,IAAI,sEAAeC,UAAQ,IAC7H,kBAAC,IAAD,CAAOP,SA3Gc,SAACC,GArDP,IAAC5B,EAsDnBiJ,GAtDmBjJ,EAsDI4B,EAAMC,OAAOC,OArDjBK,MAAM,EAAG,IAAMnC,EAAKmC,MAAM,EAAG,GAAKnC,EAAKmC,MAAM,EAAG,KA+J7BE,YAAa3C,EAAKqI,SAAUhG,KAAK,OAAOC,KAAK,cAAcC,IAAI,4EAAgBC,UAAQ,IAC1H,kBAAC,IAAD,CAAOP,SApEU,SAACC,GACrB0I,GAAQ1I,EAAMC,OAAOC,QAmEaO,YAAa3C,EAAKoI,KAAM/F,KAAK,OAAOC,KAAK,OAAOC,IAAI,iCAAQC,UAAQ,IACnG,kBAAC,IAAD,CAAOP,SAzHgB,SAACC,GAC3BgH,EAAchH,EAAMC,OAAOC,QAwHaO,YAAa3C,EAAKgD,WAAYX,KAAK,OAAOC,KAAK,aAAaC,IAAI,oGAAoBwI,OAAO,gHAAsBvI,UAAQ,IAC9J,kBAAC,IAAD,CAAOP,SArIuB,SAACC,GAClC2I,GAAqB3I,EAAMC,OAAOC,QAoIaO,YAAa3C,EAAK4G,kBAAmBvE,KAAK,OAAOC,KAAK,aAAaC,IAAI,oGAAoBwI,OAAO,sHAAuBvI,UAAQ,IAC7K,kBAAC,IAAD,CAAOP,SA3G6B,SAACC,GACxCuH,EAA2BvH,EAAMC,OAAOC,QA0GaO,YAAa3C,EAAK0H,wBAAyBqD,OAAO,6JAAgC1I,KAAK,OAAOC,KAAK,YAAYC,IAAI,2GAAsBC,UAAQ,IACnM,kBAAC,IAAD,CAAOP,SAxGoB,SAACC,GAC/ByH,EAAkBzH,EAAMC,OAAOC,QAuGaO,YAAa3C,EAAK2H,eAAgBtF,KAAK,OAAOC,KAAK,YAAYC,IAAI,gEAAcC,UAAQ,IAClI,kBAAC,IAAD,CAAOP,SArGyB,SAACC,GACpC2H,EAAuB3H,EAAMC,OAAOC,QAoGaO,YAAa3C,EAAK4H,oBAAqBoD,IAAI,OAAO1I,KAAK,cAAcC,IAAI,+IAA4BC,UAAQ,IAC3J,kBAAC,IAAD,CAAQP,SAlGuB,SAACC,GACnC6H,EAAsB7H,EAAMC,OAAOC,QAiGcO,YAAa3C,EAAKwH,mBAAoBuD,OAAO,+JAAkCxI,IAAI,wEAChI,4BAAQH,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,uGAAd,uGACA,4BAAQA,MAAM,uGAAd,uGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,iGACA,4BAAQA,MAAM,iGAAd,oDACA,4BAAQA,MAAM,mFAAd,oFAED,kBAAC,IAAD,CAAOH,SA7GiB,SAACC,GAC5B+H,EAAe/H,EAAMC,OAAOC,QA4GaO,YAAa3C,EAAKsH,YAAayD,OAAO,gHAAsB1I,KAAK,OAAOC,KAAK,gBAAgBC,IAAI,yDAAYC,UAAQ,IAC3J,kBAAC,IAAD,CAAOP,SA1GoB,SAACC,GAC/BiI,GAAkBjI,EAAMC,OAAOC,QAyGaO,YAAa3C,EAAKuH,eAAgBwD,OAAO,sHAAuB1I,KAAK,OAAOC,KAAK,gBAAgBC,IAAI,yDAAYC,UAAQ,IAClK,kBAAC,IAAD,CAAOP,SAvGe,SAACC,GAC1BkI,GAAalI,EAAMC,OAAOC,QAsGaO,YAAa3C,EAAKyH,UAAWpF,KAAK,OAAOC,KAAK,aAAaC,IAAI,iFAAgBC,UAAQ,IAC3H,kBAAC,IAAD,CAAOP,SApG2B,SAACC,GACtCoI,GAAyBpI,EAAMC,OAAOC,QAmGaO,YAAa3C,EAAKoH,sBAAuB2D,OAAO,kMAAuC1I,KAAK,OAAOC,KAAK,eAAeC,IAAI,qKAAmCC,UAAQ,IACtN,kBAAC,IAAD,CAAQP,SAjGiB,SAACC,GAC7BsI,GAAgBtI,EAAMC,OAAOC,QAgGcO,YAAa3C,EAAKmH,aAAc5E,IAAI,6IAC3E,4BAAQH,MAAM,iDAAd,iDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,iDAAd,iDACA,4BAAQA,MAAM,kDAAd,kDACA,4BAAQA,MAAM,kDAAd,kDACA,4BAAQA,MAAM,iDAAd,iDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,gDAAd,gDACA,4BAAQA,MAAM,iDAAd,kDAED,kBAAC,IAAD,CAAQP,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAvGvD,WAwBnB9C,EAAY,OAAQ,sDAvBToC,KAAKC,UAAU,CACzB0D,IAAKhF,EAAKgF,IACV0B,KAAM1G,EAAK0G,KACXuE,OAAQ,IACRC,aAAc,IACd3C,YAAaY,EACbd,SAAUA,EACVtF,SAAUA,GACVsE,cAAeqD,GACflC,cAAea,EACfjB,KAAMA,GACNpF,WAAYA,EACZ4D,kBAAmBA,GACnBc,wBAAyB8B,EACzB7B,eAAgB+B,EAChB9B,oBAAqBgC,EACrBpC,mBAAoBsC,EACpBxC,YAAa0C,EACbzC,eAAgB2C,GAChBzC,UAAWA,GACXL,sBAAuBiD,GACvBlD,aAAcoD,OAiFiFhH,UAAW1D,EAAImC,UAAQ,WAApH,wDC1MCmJ,GACQ,sDAmGCC,GA/FD,SAAC,GAAgB,IAAdxL,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAEpB,OAEC,kBAAC,IAAD,CAAOD,GAAIA,GAEV,kBAAC,IAAD,CACSgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAACC,MAAO,WAAYC,QAASlC,EAAImC,UAAQ,aADhF,gEAES,kBAAC,IAAD,CAAOqJ,UAAU,QAEtB,kBAAC,IAAD,KACa,kBAAC,IAAD,CAAMxI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,QAI9I,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMtI,KAAK,KACH,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,QAI9I,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMtI,KAAK,KACH,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,OAG1I,kBAAC,IAAD,CAAMtI,KAAK,KACP,yBAAKhB,MAAO,CACX2D,OAAQ,GACR8F,aAAc,KAEf,yBAAKC,IAAI,QAAQ1J,MAAO,CAAE0D,MAAO,OAAQC,OAAQ,GAAI8F,aAAc,GAAIE,UAAW,QAASC,eAAgB,SAAUC,OAAQ,GAAIzD,IAAKkD,WC3D/IQ,GA5BO,SAAC,GAAgB,IAAd/L,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAEzB,OAEI,kBAAC,IAAD,CAAOD,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,YAD7E,uEAGA,kBAAC,IAAD,yIAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASH,MAAO,CAACe,gBAAiB,WAAaC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,uBAA9E,kHAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,MAAO,CAACe,gBAAiB,WAAYC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,uBAA5E,oIAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,MAAO,CAACe,gBAAiB,WAAYC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,sBAA5E,yGCMD4J,GAzBa,SAAC,GAAgB,IAAdhM,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAE/B,OAEI,kBAAC,IAAD,CAAOD,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,mBAD7E,uEAGA,kBAAC,IAAD,iKAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASH,MAAO,CAACe,gBAAiB,WAAaC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,QAA9E,yCAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,MAAO,CAACe,gBAAiB,WAAYC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,oBAA5E,2CCUD6J,GAzBa,SAAC,GAAgB,IAAdjM,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAE/B,OAEI,kBAAC,IAAD,CAAOD,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,mBAD7E,uEAGA,kBAAC,IAAD,iKAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASH,MAAO,CAACe,gBAAiB,WAAaC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,oBAA9E,yCAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,MAAO,CAACe,gBAAiB,WAAYC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,oBAA5E,2CCQD8J,GAzBY,SAAC,GAAgB,IAAdlM,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAE9B,OAEI,kBAAC,IAAD,CAAOD,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,mBAD7E,uEAGA,kBAAC,IAAD,iKAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASH,MAAO,CAACe,gBAAiB,WAAaC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,mBAA9E,yCAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,MAAO,CAACe,gBAAiB,WAAYC,KAAK,KAAKd,QAASlC,EAAImC,UAAQ,mBAA5E,2CCuHD+J,GArIU,SAAC,GAA6B,IAA3BpM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAO7BC,IAAMC,WAPuB,mBAO9CC,EAP8C,KAOxCC,EAPwC,OAQnBH,IAAMC,WARa,mBAQ9CG,EAR8C,KAQnCC,EARmC,OAS3BL,IAAMC,WATqB,mBAS9CK,EAT8C,KASvCC,EATuC,OAU7BP,IAAMC,WAVuB,mBAU9CO,EAV8C,KAUxCC,EAVwC,OAY3BT,IAAMC,WAZqB,mBAY9CS,EAZ8C,KAYvCC,EAZuC,OAabX,IAAMC,WAbO,mBAa9CW,EAb8C,KAahCC,EAbgC,OAcnBb,IAAMC,WAda,mBAc9Ca,EAd8C,KAcnCC,EAdmC,OAeff,IAAMC,WAfS,mBAe9Ce,EAf8C,KAejCC,EAfiC,OAgB3BjB,IAAMC,WAhBqB,mBAgB9CiB,EAhB8C,KAgBvCC,EAhBuC,OAiBrBnB,IAAMC,WAjBe,mBAiB9CmB,EAjB8C,KAiBpCC,EAjBoC,OAkB3BrB,IAAMC,UAAS,GAlBY,mBAkB9CV,EAlB8C,KAkBvC+B,EAlBuC,KAqBlD/B,IACgB,MAAfM,GAEHV,EAAY,OA1BS,oDAyBRoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA4D5B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,yBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SAlEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAiEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SA3DU,SAACC,GACrB3B,EAvCkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAE,IAAMnC,EAAKmC,MAAM,EAAE,GAAKnC,EAAKmC,MAAM,EAAE,GAsCxDC,CAAWR,EAAMC,OAAOC,SA0DEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SAhEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QA+DaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAASP,SAhDa,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QA+CeG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GACnF,4BAAQJ,MAAM,mIAAd,mIACA,4BAAQA,MAAM,kHAAd,kHACA,4BAAQA,MAAM,8HAAd,8HACA,4BAAQA,MAAM,kCAAd,kCACkB,4BAAQA,MAAM,kCAAd,sEACA,4BAAQA,MAAM,kCAAd,gJACA,4BAAQA,MAAM,kCAAd,2FAEnB,kBAAC,IAAD,CAAUH,SArDc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QAoDgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SArEc,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QAoEaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAASN,SAlEgB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QAiEeG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC5F,4BAAQJ,MAAM,kHAAd,mDACA,4BAAQA,MAAM,sEAAd,oDACA,4BAAQA,MAAM,qFAAd,sDACA,4BAAQA,MAAM,8CAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SArEQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QAoEgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SA3DQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QA0DgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAzDvD,WAkBnB9C,EAAY,OAvFK,8CAsENoC,KAAKC,UAAU,CACzB2B,kBAAmB,6CACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,EACP8B,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,cAGhBxB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAsCqE8B,UAAW1D,EAAImC,UAAQ,UAApH,wDCiBUgK,GA5IU,SAAC,GAA6B,IAA3BrM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAM7BC,IAAMC,WANuB,mBAM9CC,EAN8C,KAMxCC,EANwC,OAOnBH,IAAMC,WAPa,mBAO9CG,EAP8C,KAOnCC,EAPmC,OAQ3BL,IAAMC,WARqB,mBAQ9CK,EAR8C,KAQvCC,EARuC,OAS7BP,IAAMC,WATuB,mBAS9CO,EAT8C,KASxCC,EATwC,OAW3BT,IAAMC,WAXqB,mBAW9CS,EAX8C,KAWvCC,EAXuC,OAYbX,IAAMC,WAZO,mBAY9CW,EAZ8C,KAYhCC,EAZgC,OAanBb,IAAMC,WAba,mBAa9Ca,EAb8C,KAanCC,EAbmC,OAcff,IAAMC,WAdS,mBAc9Ce,EAd8C,KAcjCC,EAdiC,OAe3BjB,IAAMC,WAfqB,mBAe9CiB,EAf8C,KAevCC,EAfuC,OAgBrBnB,IAAMC,WAhBe,mBAgB9CmB,EAhB8C,KAgBpCC,EAhBoC,OAiB3BrB,IAAMC,UAAS,GAjBY,mBAiB9CV,EAjB8C,KAiBvC+B,EAjBuC,KAoBjD/B,IACgB,MAAfM,GAEHV,EAAY,OAzBQ,oDAwBPoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAiE7B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,yBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SAvEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAsEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SAhEU,SAACC,GACrB3B,EAvCkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAG,IAAMnC,EAAKmC,MAAM,EAAG,GAAKnC,EAAKmC,MAAM,EAAG,GAsC3DC,CAAWR,EAAMC,OAAOC,SA+DEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SArEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QAoEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAAQP,SArDc,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QAoDcG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GAClF,4BAAQJ,MAAM,8KAAd,8KACA,4BAAQA,MAAM,kHAAd,kHACA,4BAAQA,MAAM,8HAAd,8HACA,4BAAQA,MAAM,mSAAd,mSACA,4BAAQA,MAAM,2GAAd,2GACA,4BAAQA,MAAM,sRAAd,sRACA,4BAAQA,MAAM,qLAAd,qLACA,4BAAQA,MAAM,8CAAd,8CACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,yHAAd,0HAED,kBAAC,IAAD,CAAUH,SA7Dc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QA4DgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SA7Ec,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QA4EaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAAQN,SA1EiB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QAyEcG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC3F,4BAAQJ,MAAM,mDAAd,mDACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SA7EQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QA4EgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SAnEQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QAkEgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAjEvD,WAmBnB9C,EAAY,OAvFK,8CAsENoC,KAAKC,UAAU,CACzB2B,kBAAmB,+DACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,EACP8B,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,cAGhBxB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA6CqE8B,UAAW1D,EAAImC,UAAQ,UAApH,wDCYUiK,GA9IU,SAAC,GAA6B,IAA3BtM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAM7BC,IAAMC,WANuB,mBAM9CC,EAN8C,KAMxCC,EANwC,OAOnBH,IAAMC,WAPa,mBAO9CG,EAP8C,KAOnCC,EAPmC,OAQ3BL,IAAMC,WARqB,mBAQ9CK,EAR8C,KAQvCC,EARuC,OAS7BP,IAAMC,WATuB,mBAS9CO,EAT8C,KASxCC,EATwC,OAW3BT,IAAMC,WAXqB,mBAW9CS,EAX8C,KAWvCC,EAXuC,OAYbX,IAAMC,WAZO,mBAY9CW,EAZ8C,KAYhCC,EAZgC,OAanBb,IAAMC,WAba,mBAa9Ca,EAb8C,KAanCC,EAbmC,OAcff,IAAMC,WAdS,mBAc9Ce,EAd8C,KAcjCC,EAdiC,OAe3BjB,IAAMC,WAfqB,mBAe9CiB,EAf8C,KAevCC,EAfuC,OAgBrBnB,IAAMC,WAhBe,mBAgB9CmB,EAhB8C,KAgBpCC,EAhBoC,OAiB3BrB,IAAMC,UAAS,GAjBY,mBAiB9CV,EAjB8C,KAiBvC+B,EAjBuC,KAoBjD/B,IACgB,MAAfM,GAEHV,EAAY,OAzBQ,oDAwBPoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAmE7B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,yBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SAxEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAuEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SAjEU,SAACC,GACrB3B,EAxCkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAE,IAAMnC,EAAKmC,MAAM,EAAE,GAAKnC,EAAKmC,MAAM,EAAE,GAuCxDC,CAAWR,EAAMC,OAAOC,SAgEEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SAtEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QAqEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAAQP,SApDc,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QAmDcG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GAClF,4BAAQJ,MAAM,mIAAd,mIACA,4BAAQA,MAAM,kHAAd,kHACA,4BAAQA,MAAM,8HAAd,8HACA,4BAAQA,MAAM,mSAAd,mSACA,4BAAQA,MAAM,2GAAd,2GACA,4BAAQA,MAAM,kCAAd,kCACA,4BAAQA,MAAM,qGAAd,qGACA,4BAAQA,MAAM,sEAAd,sEACA,4BAAQA,MAAM,kCAAd,kCACA,4BAAQA,MAAM,wCAAd,yCAED,kBAAC,IAAD,CAAUH,SA5Dc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QA2DgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SA7Ec,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QA4EaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAASN,SA1EgB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QAyEeG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC5F,4BAAQJ,MAAM,mDAAd,mDACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SA7EQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QA4EgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SAlEQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QAiEgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAhEvD,WAkBnB9C,EAAY,OAzFK,8CAwENoC,KAAKC,UAAU,CACzB2B,kBAAmB,+DACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,EACP8B,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,cAGhBxB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA6CqE8B,UAAW1D,EAAImC,UAAQ,UAApH,wDCKUkK,GAzIS,SAAC,GAA6B,IAA3BvM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAO5BC,IAAMC,WAPsB,mBAO7CC,EAP6C,KAOvCC,EAPuC,OAQlBH,IAAMC,WARY,mBAQ7CG,EAR6C,KAQlCC,EARkC,OAS1BL,IAAMC,WAToB,mBAS7CK,EAT6C,KAStCC,EATsC,OAU5BP,IAAMC,WAVsB,mBAU7CO,EAV6C,KAUvCC,EAVuC,OAY1BT,IAAMC,WAZoB,mBAY7CS,EAZ6C,KAYtCC,EAZsC,OAaZX,IAAMC,WAbM,mBAa7CW,EAb6C,KAa/BC,EAb+B,OAclBb,IAAMC,WAdY,mBAc7Ca,EAd6C,KAclCC,EAdkC,OAedf,IAAMC,WAfQ,mBAe7Ce,EAf6C,KAehCC,EAfgC,OAgB1BjB,IAAMC,WAhBoB,mBAgB7CiB,EAhB6C,KAgBtCC,EAhBsC,OAiBpBnB,IAAMC,WAjBc,mBAiB7CmB,EAjB6C,KAiBnCC,EAjBmC,OAkB1BrB,IAAMC,UAAS,GAlBW,mBAkB7CV,EAlB6C,KAkBtC+B,EAlBsC,KAqBhD/B,IACgB,MAAfM,GAEHV,EAAY,OA1BQ,oDAyBPoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAkE7B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,wBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SAvEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAsEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SAhEU,SAACC,GACrB3B,EAxCkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAE,IAAMnC,EAAKmC,MAAM,EAAE,GAAKnC,EAAKmC,MAAM,EAAE,GAuCxDC,CAAWR,EAAMC,OAAOC,SA+DEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SArEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QAoEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAAQP,SApDc,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QAmDcG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GAClF,4BAAQJ,MAAM,ubAAd,ubACA,4BAAQA,MAAM,wZAAd,wZACA,4BAAQA,MAAM,kKAAd,kKACA,4BAAQA,MAAM,0NAAd,0NACA,4BAAQA,MAAM,wCAAd,yCAED,kBAAC,IAAD,CAAUH,SAvDc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QAsDgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SAxEc,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QAuEaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAAQN,SArEiB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QAoEcG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC3F,4BAAQJ,MAAM,mDAAd,mDACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SAxEQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QAuEgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SA7DQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QA4DgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QA3DvD,WAkBnB9C,EAAY,OAzFK,8CAwENoC,KAAKC,UAAU,CACzB2B,kBAAmB,qGACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,EACP8B,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,cAGhBxB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAwCqE8B,UAAW1D,EAAImC,UAAQ,UAApH,wDCGUmK,GAlIS,SAAC,GAA6B,IAA3BxM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAM5BC,IAAMC,WANsB,mBAM7CC,EAN6C,KAMvCC,EANuC,OAOlBH,IAAMC,WAPY,mBAO7CG,EAP6C,KAOlCC,EAPkC,OAQ1BL,IAAMC,WARoB,mBAQ7CK,EAR6C,KAQtCC,EARsC,OAS5BP,IAAMC,WATsB,mBAS7CO,EAT6C,KASvCC,EATuC,OAW1BT,IAAMC,WAXoB,mBAW7CS,EAX6C,KAWtCC,EAXsC,OAYZX,IAAMC,WAZM,mBAY7CW,EAZ6C,KAY/BC,EAZ+B,OAalBb,IAAMC,WAbY,mBAa7Ca,EAb6C,KAalCC,EAbkC,OAcdf,IAAMC,WAdQ,mBAc7Ce,EAd6C,KAchCC,EAdgC,OAe1BjB,IAAMC,WAfoB,mBAe7CiB,EAf6C,KAetCC,EAfsC,OAgBpBnB,IAAMC,WAhBc,mBAgB7CmB,EAhB6C,KAgBnCC,EAhBmC,OAiB1BrB,IAAMC,UAAS,GAjBW,mBAiB7CV,EAjB6C,KAiBtC+B,EAjBsC,KAoBhD/B,IACgB,MAAfM,GAEHV,EAAY,OAzBQ,oDAwBPoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAEhDL,MAAK,SAAAgC,GACLtB,EAAQsB,EAAK,IACbH,GAAS,MAETI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA6D7B,OAEC,kBAAC,IAAD,CAAO7B,GAAIA,GAEV,kBAAC,IAAD,CACCgC,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,wBAD1E,uEAGA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,SAnEe,SAACC,GAC1B/B,EAAa+B,EAAMC,OAAOC,QAkEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,sHAAuBC,UAAQ,IAC/F,kBAAC,IAAD,CAAOP,SA5DU,SAACC,GACrB3B,EAvCkB,SAACD,GAEnB,OADcA,EAAKmC,MAAM,EAAE,IAAMnC,EAAKmC,MAAM,EAAE,GAAKnC,EAAKmC,MAAM,EAAE,GAsCxDC,CAAWR,EAAMC,OAAOC,SA2DEC,KAAK,OAAOC,KAAK,OAAOC,IAAI,wFAAkBC,UAAQ,IACrF,kBAAC,IAAD,CAAOP,SAjEW,SAACC,GACtB7B,EAAS6B,EAAMC,OAAOC,QAgEaC,KAAK,OAAOC,KAAK,OAAOC,IAAI,8FAAmBC,UAAQ,IAEvF,kBAAC,IAAD,CAAQP,SAjDc,SAACC,GAC1BrB,EAAaqB,EAAMC,OAAOC,QAgDcG,IAAI,wFAAkBI,YAAY,IAAIH,UAAQ,GAClF,4BAAQJ,MAAM,ubAAd,ubACA,4BAAQA,MAAM,4EAAd,4EACA,4BAAQA,MAAM,yIAAd,yIACkB,4BAAQA,MAAM,wFAAd,yFAEnB,kBAAC,IAAD,CAAUH,SAnDc,SAACC,GAC5BnB,EAAemB,EAAMC,OAAOC,QAkDgBE,KAAK,cAAcC,IAAI,8FAAmBC,UAAQ,IAC3F,kBAAC,IAAD,CAAOP,SAnEc,SAACC,GACzBf,EAAYe,EAAMC,OAAOC,QAkEaC,KAAK,OAAOC,KAAK,eAAeC,IAAI,sGACvE,kBAAC,IAAD,CAASN,SAhEgB,SAACC,GAC7BvB,EAAgBuB,EAAMC,OAAOC,QA+DeG,IAAI,4HAAwBI,YAAY,IAAIH,UAAQ,GAC5F,4BAAQJ,MAAM,mDAAd,mDACA,4BAAQA,MAAM,oDAAd,oDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,sDAAd,sDACA,4BAAQA,MAAM,8CAAd,+CAED,kBAAC,IAAD,CAAUH,SAnEQ,SAACC,GACtBzB,EAASyB,EAAMC,OAAOC,QAkEgBE,KAAK,QAAQC,IAAI,qFACpD,kBAAC,IAAD,CAAUN,SAzDQ,SAACC,GACtBjB,EAASiB,EAAMC,OAAOC,QAwDgBE,KAAK,QAAQC,IAAI,+CAEpD,kBAAC,IAAD,CAAQV,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAvDvD,WAkBnB9C,EAAY,OAtFK,8CAqENoC,KAAKC,UAAU,CACzB2B,kBAAmB,qGACnBC,UAAW,uCACXhD,UAAWA,EACXiD,WAAY/C,EACZE,KAAMA,EACNM,UAAWA,EACXE,YAAaA,EAEbJ,aAAcA,EACd0C,qBAAsBlC,EACtBmC,aAAc,GACdC,iBAAkB9C,EAClBQ,MAAOA,EACP8B,WAAY9C,EAAK+C,SACjBC,WAAYhD,EAAKgD,cAGhBxB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAoCqE8B,UAAW1D,EAAImC,UAAQ,UAApH,wD,qBCxHL,IAAMoK,GAAa,oDAIb5I,GACO,UADPA,GAES,YAgMA6I,GA7LI,SAAC,GAA6B,IAA3B1M,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAAS,EAEVC,IAAMC,UAAS,GAFL,mBAErC2D,EAFqC,KAE1BC,EAF0B,OAGpB7D,IAAMC,WAHc,mBAGrCC,EAHqC,KAG/BC,EAH+B,OAIRH,IAAMC,WAJE,mBAIrC6D,EAJqC,KAIzBC,EAJyB,OAKlB/D,IAAMC,UAAS,GALG,mBAKrCV,EALqC,KAK9B+B,EAL8B,OAMNtB,IAAMC,SAAS,MANT,mBAMrC+D,EANqC,KAMxBC,EANwB,OAOZjE,IAAMC,WAPM,mBAOrCuM,EAPqC,KAO3BC,EAP2B,OAQlBzM,IAAMC,WARY,mBAQrCyM,EARqC,KAQ9BC,EAR8B,KA8BtCvI,EAAY,WACdH,EAAe,OAGbS,EACF,kBAAC,IAAD,CACIV,YAAaA,EACbW,QAASP,GAET,kBAAC,IAAD,CACItE,GAAI4D,GACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,8EAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQkB,KAAK,YAAY/C,KAAK,KAAKjD,GAAG,IAAIiC,MAAO,CAAEe,gBAAiB,UAAWd,MAAO,SAAWyB,UAAWW,EAAWnC,QApC3H,WACZ,IAAI2K,EAAgB9I,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,OAAQD,EAAEjG,QAC9DsD,EAAWW,QAAmC,IAAzBmI,EAAcnI,OChBxC,SAAqBhD,GACxB,IAAIoL,EAdR,SAAuB/M,GACnB,OAAQA,GACJ,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,MACX,QACI,MAAO,WAAaA,GAKlBgN,CAjBL,GAkBDC,EAAWtL,EAAKuD,KAAI,SAACgI,GAIrB,cAHOA,EAAQ9H,WACR8H,EAAQC,WACRD,EAAQzJ,aACRyJ,KAEXD,EAAWxL,KAAKC,UAAUuL,GAE1BG,KAAEC,KAAK,CACH5K,KAAM,OACNlD,IA3BQ,iEA4BRoC,KAAMF,KAAKC,UAAU,CAAE,KAAQuL,IAC/BK,SAAU,OACVC,YAAa,oCAEZC,MAAK,SAAUC,GACZ,IAAIC,EAAc,yDAA2DD,EAC7EC,GAAe,0CAA4CX,EAC3DY,OAAOC,SAAS5I,KAAK0I,KAExBG,MAAK,SAAUC,GACZC,MAAM,SAAWD,EAAEE,iBDAnBC,CALInB,EADU,QAAVF,EACgB5I,EAGAA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,OAAQD,EAAEjG,KAAK,GAAKiG,EAAEjG,KAAK,KAAOkM,MAK1FzI,EAAeP,MAwBH,kBAEA,kBAAC,IAAD,CAAQoC,KAAK,YAAY/C,KAAK,KAAKjD,GAAG,IAAIiC,MAAO,CAAEe,gBAAiB,UAAWd,MAAO,SAAWC,QAASmC,GAA1G,2BAOZ,kBAAC,IAAD,CACItE,GAAI4D,GACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,gJAIP,kBAAC,IAAD,QAKT,GAAIrF,GACmB,MAAfM,EAAqB,CACrB,IAAM+G,EAAOrF,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,KAClDX,EAAY,OAAQmN,GAAY1F,GAC3BnH,MAAK,SAAAgC,GACFtB,EAAQsB,EAAK,IACQ,WAAjBA,EAAK,GAAG6E,MACRnH,EAAY,OAAQmN,GAAY/K,KAAKC,UAAU,CAAE,OAAUC,EAAK,GAAGwB,YAC9DxD,MAAK,SAAAuD,GACFyJ,EAAYzJ,EAAWyB,QAEvB,IADA,IAAIuJ,EAAmB,GACdvH,EAAI,EAAGA,EAAIzD,EAAWyB,OAAQgC,IACnCtH,EAAY,OA5FvB,yDA4FiDoC,KAAKC,UAAU,CAAE,WAAcwB,EAAWyD,GAAGxD,YAC9ExD,MAAK,SAAAyI,GACF,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAOzD,OAAQgC,IAC/BuH,EAAiBC,KAAK/F,EAAOzB,IAEjC1C,EAAciK,MAG1BnK,GAAa,GACbvC,GAAS,MAGA,UAAjBG,EAAK,GAAG6E,MACRnH,EAAY,OAAQmN,GAAY/K,KAAKC,UAAU,CAAE,KAAQ,gBACpD/B,MAAK,SAAAuD,GACFyJ,EAAYzJ,EAAWyB,QACvBtF,EAAY,MA3GhB,+CA4GSM,MAAK,SAAAyI,GACFtG,QAAQC,IAAIqG,GACZnE,EAAcmE,GACdrE,GAAa,GACbvC,GAAS,YAKhCI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAKtC,OAAkB,IAAdiC,EAEI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAO/C,kBAAC,IAAD,CAAMO,YAAajF,EAAI4E,MAAOA,GAC1B,kBAAC,IAAD,CAAO5E,GAAIA,GAEP,kBAAC,IAAD,mDAGA,yBAAKiC,MAAO,CAAEsD,aAAc,MACvBxF,GACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIiF,KAAM,oBAAsB5E,EAAK0G,KACjCvE,OAAO,SACP2D,OAAQ,kBAAC,IAAD,CAAQjD,KAAM,GAAIoF,IAAKtI,EAAYuI,aAC3C,0BAAMrG,MAAO,CAAEsG,SAAU,SAAWnI,EAAK+C,UACzC,6BACA,0BAAMlB,MAAO,CAAEsG,SAAU,OAAQrG,MAAO,SAAW9B,EAAKoG,MACxD,+BAIZ,kBAAC,IAAD,CAAO1B,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,iJACX,kBAAC,IAAD,CAAMsB,UAAWoF,GAAjB,yIAGA,kBAAC,IAAD,CAAO5H,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,uEACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ3D,SA9Id,SAACC,GACnBuK,EAASvK,EAAMC,OAAOC,QA6ImCO,YAAY,qJAA6BoI,OAAO,mFAC7E,4BAAQ3I,MAAM,MAAd,oDACA,4BAAQA,MAAM,MAAd,8CACA,4BAAQA,MAAM,MAAd,wCACA,4BAAQA,MAAM,MAAd,8CACA,4BAAQA,MAAM,MAAd,wCACA,4BAAQA,MAAM,MAAd,8CACA,4BAAQA,MAAM,MAAd,4BACA,4BAAQA,MAAM,MAAd,wCACA,4BAAQA,MAAM,MAAd,sBACA,4BAAQA,MAAM,OAAd,oEAGR,kBAAC,IAAD,CAAYP,MAAO,CAAEC,MAAO,WAAaC,QAAS,WAAQgC,EAAeP,MAAzE,gFAMZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ3B,MAAO,CAAEyC,UAAW,UACxB,kBAAC,IAAD,CAAYvC,QAASlC,EAAImC,UAAQ,iBAAiBsD,KAAK,sEACnD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYzD,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,aAAasD,KAAK,8CAC5E,kBAAC,IAAD,CAAmBzD,MAAO,CAAEC,MAAO,WAAayD,MAAO,GAAIC,OAAQ,WE+FhFwI,GArRQ,SAAC,GAAsB,IAApBpO,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,GAAIoO,EAAW,EAAXA,KAExBzK,EACW,cADXA,EAEY,SAFZA,EAGa,UAHbA,EAIc,iBAJdA,EAKO,UAEPU,EAAY,WACdH,EAAe,OAVsB,EAaPjE,IAAMC,UAAS,GAbR,mBAalC2D,EAbkC,KAavBC,EAbuB,OAcjB7D,IAAMC,WAdW,mBAclCC,EAdkC,KAc5BC,EAd4B,OAeLH,IAAMC,WAfD,mBAelC6D,EAfkC,KAetBC,EAfsB,OAgBf/D,IAAMC,UAAS,GAhBA,mBAgBlCV,EAhBkC,KAgB3B+B,EAhB2B,OAiBftB,IAAMC,WAjBS,mBAiBlC0G,EAjBkC,KAiB3ByH,EAjB2B,OAkBHpO,IAAMC,SAAS,MAlBZ,mBAkBlC+D,EAlBkC,KAkBrBC,EAlBqB,KAmCnCiD,EACF,kBAAC,IAAD,CACIlD,YAAaA,EACbW,QAASP,GAET,kBAAC,IAAD,CACItE,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,2DAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM+C,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKmH,aAAe,UAA7D,6EAGA,kBAAC,IAAD,CAAMF,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKoH,sBAAwB,UAAtE,6IAGA,kBAAC,IAAD,CAAMH,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKqH,cAAgB,QAAnC,MAA3B,uHAGA,kBAAC,IAAD,CAAMJ,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKgD,WAAa,UAA3D,iMAGA,kBAAC,IAAD,CAAMiE,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKsH,YAAc,UAA5D,sJAGA,kBAAC,IAAD,CAAML,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKuH,eAAiB,QAApC,MAA3B,4JAGA,kBAAC,IAAD,CAAMN,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKwH,mBAAqB,UAAnE,wCAGA,kBAAC,IAAD,CAAMP,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKsH,YAAc,UAA5D,0DAGA,kBAAC,IAAD,CAAML,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAKyH,UAAY,UAA1D,kFAGA,kBAAC,IAAD,CAAMR,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAK0H,wBAA0B,UAAxE,0IAGA,kBAAC,IAAD,CAAMT,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAK2H,eAAiB,QAApC,MAA3B,iEAGA,kBAAC,IAAD,CAAMV,WAAS,EAACC,UAAW,kBAAC,IAAD,KAAOlH,EAAOA,EAAK4H,oBAAsB,UAApE,sDASR,kBAAC,IAAD,CACIhI,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,iEAAxBD,EAAEtD,mBAAsD,yCAAhBsD,EAAErD,aAA2BqB,OAAS,QAAlJ,MADf,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,iEAAxBD,EAAEtD,mBAAsD,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UAD/J,0CAOR,kBAAC,IAAD,CACI3E,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,+CAAxBD,EAAEtD,mBAAmD,yCAAhBsD,EAAErD,aAA2BqB,OAAS,UAD9J,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,+CAAxBD,EAAEtD,mBAAmD,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UAD5J,0CAOR,kBAAC,IAAD,CACI3E,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,4GAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM4B,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAAgC,uGAAxBD,EAAEtD,mBAA8D,yCAAhBsD,EAAErD,aAA2BqB,OAAS,UADzK,wCAIA,kBAAC,IAAD,CAAMuB,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,KAAWtD,EAAaA,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,uGAAxBD,EAAEtD,mBAA8D,yCAAhBsD,EAAErD,aAA0BqB,OAAS,UADvK,0CAOR,kBAAC,IAAD,CACI3E,GAAI4D,EACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QADjD,2DAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQjC,SA7IN,SAACC,GACnBgM,EAAShM,EAAMC,OAAOC,QA4I2BG,IAAI,QAAQI,YAAa3C,EAAOA,EAAKyG,MAAQ,QAASjE,UAAQ,GAC3F,4BAAQJ,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,YAGR,kBAAC,IAAD,UACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQP,MAAO,CAAEe,gBAAiB,WAAaP,KAAK,SAASQ,KAAK,KAAKd,QAnJvE,WAChB,IAAI3C,EAAOiC,KAAKC,UAAU,CACtB0D,IAAKhF,EAAKgF,IACV0B,KAAM1G,EAAK0G,KACXD,MAAOA,IAEX/E,QAAQC,IAAIvC,GACZH,EAAY,OAAQ,sDAAuDG,GAC3EgC,GAAS,IA2IoGmC,UAAWW,GAAxG,sDAGR,kBAAC,IAAD,YAqBZ,OAfI7E,GACAJ,EAAY,OAzLD,oDAyLqBoC,KAAKC,UAAU,CAAE,KAAQ2M,KACpD1O,MAAK,SAAAgC,GACFtB,EAAQsB,EAAK,IACbtC,EAAY,OA3LH,yDA2L6BoC,KAAKC,UAAU,CAAE,WAAcC,EAAK,GAAGwB,YACxExD,MAAK,SAAAyI,GACFnE,EAAcmE,GACdrE,GAAa,GACbvC,GAAS,SAGpBI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAIhB,IAAdiC,EAEI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAO/C,kBAAC,IAAD,CAAMO,YAAajF,EAAI4E,MAAOwC,GAC1B,kBAAC,IAAD,CAAOpH,GAAIA,GAEP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAmBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,kBAArE,IAAwF,kBAAC,IAAD,QADlG,8CAIA,yBAAKH,MAAO,CAAEsD,aAAc,MAEpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIP,KAAM,oBAAsB5E,EAAK0G,KACjCvE,OAAO,UACP,0BAAMN,MAAO,CAAEsG,SAAU,SAAWnI,EAAK+C,UACzC,6BACA,0BAAMlB,MAAO,CAAEsG,SAAU,OAAQrG,MAAO,SAAW9B,EAAKyG,OACxD,8BAEJ,kBAAC,IAAD,CAAY5E,MAAO,CAAEC,MAAO,WAAaC,QAAS,WAAQgC,EAAeP,KAAzE,2DAIR,kBAAC,IAAD,CAAOkB,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,iEACX,kBAAC,IAAD,CAAME,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBAC9Fb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAWW,SADnD,qGAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAAyBsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACvJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,iEAAxBD,EAAEtD,qBAAsCsB,SAD3H,mIAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAA0BsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACxJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,+CAAxBD,EAAEtD,qBAAmCsB,SADxH,iHAIA,kBAAC,IAAD,CAAMxC,QAAS,WAAQgC,EAAeP,IAA2BsC,OAAQ,kBAAC,IAAD,CAAQjE,MAAO,CAAEgG,WAAY,WAAahF,KAAM,GAAIiF,QAAQ,GAAO,kBAAC,IAAD,CAAYC,KAAK,kBACzJb,UAAW,kBAAC,IAAD,CAASnC,IAAK/E,EAAKgF,KAAMpB,EAAW0C,QAAO,SAAUC,EAAGC,GAAK,MAA+B,uGAAxBD,EAAEtD,qBAA8CsB,SADnI,uGAMJ,kBAAC,IAAD,CAAOG,OAAQ,kBAAC,IAAD,CAAQkB,KAAK,aAAb,iJACX,kBAAC,IAAD,CAAMqB,WAAS,EAACC,UAAWlH,EAAKoI,MAAhC,kCAGA,kBAAC,IAAD,CAAMnB,WAAS,EAACC,UAAWlH,EAAKqI,UAAhC,6EAGA,kBAAC,IAAD,CAAMpB,WAAS,EAACC,UAAWoB,YAAkBtI,EAAKuI,cAAlD,mFAGA,kBAAC,IAAD,CAAMtB,WAAS,EAACC,UAAWlH,EAAKwI,eAAhC,SAGA,kBAAC,IAAD,CAAMvB,WAAS,EAACC,UAAWlH,EAAK4G,mBAAhC,qGAGA,kBAAC,IAAD,CAAMK,WAAS,EAACC,UAAWlH,EAAKwH,oBAAhC,wCAGA,kBAAC,IAAD,CACI3F,MAAO,CAAEC,MAAO,WAChBC,QAAS,WAAQgC,EAAeP,KAFpC,0JC1QlBA,GACU,aAsLD2K,GAjLO,SAAC,GAAsB,IAApBvO,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,GAAIoO,EAAW,EAAXA,KAAW,EAGNnO,IAAMC,UAAS,GAHT,mBAGjC2D,EAHiC,KAGtBC,EAHsB,OAIJ7D,IAAMC,WAJF,mBAIjC6D,EAJiC,KAIrBC,EAJqB,OAKF/D,IAAMC,SAAS,MALb,mBAKjC+D,EALiC,KAKpBC,EALoB,OAMVjE,IAAMC,SAAS,GANL,mBAMjCiE,EANiC,KAMxBC,EANwB,OAOdnE,IAAMC,UAAS,GAPD,mBAOjCV,EAPiC,KAO1B+B,EAP0B,KASlC8C,EAAY,WACdH,EAAe,OAiBnB,GAdI1E,GACAJ,EAAY,OArBG,oDAqBqBoC,KAAKC,UAAU,CAAE,KAAQ2M,KACxD1O,MAAK,SAAAgC,GACFtC,EAAY,OAxBT,yDAwB6BoC,KAAKC,UAAU,CAAEwB,WAAYvB,EAAK,GAAGwB,YAChExD,MAAK,SAAAgC,GACFsC,EAActC,GACdoC,GAAa,GACbvC,GAAS,MAEZI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAEjCD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAGhB,IAAdiC,EACA,OACI,kBAAC,IAAD,CAAO9D,GAAIA,GACP,yBAAKiC,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAMnD,GAAIV,EAAWW,OAAS,EAAG,CACvB,IAAMC,EACF,kBAAC,IAAD,CACIV,YAAaA,EACbW,QAASP,GAET,kBAAC,IAAD,CACItE,GAAI4D,GACJiB,QAASP,EACTQ,OACI,kBAAC,IAAD,CACI9C,KAAM,kBAAC,IAAD,CAAmBG,QAASmC,GAAW,kBAAC,IAAD,QAC5CN,EAAaA,EAAWI,GAAS9D,UAAY,UAEtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASwE,OAAO,2GACXd,EAAaA,EAAWI,GAASd,UAAY,UAItD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASwB,OAAO,+FACXd,EAAaA,EAAWI,GAASb,WAAa,UAGvD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASuB,OAAO,mFACXd,EAAaA,EAAWI,GAASf,kBAAoB,UAG9D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASyB,OAAO,yFACXd,EAAaA,EAAWI,GAAS1D,KAAO,UAGjD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASoE,OAAO,yFACXd,EAAaA,EAAWI,GAASpD,UAAY,UAGtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS8D,OAAO,6EACXd,EAAaA,EAAWI,GAASW,YAAc,UAGxD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASD,OAAO,+FACXd,EAAaA,EAAWI,GAASlD,YAAc,UAGxD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS4D,OAAO,6HACXd,EAAaA,EAAWI,GAAStD,aAAe,UAGzD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASgE,OAAO,wCACZ,kBAAC,IAAD,CAAME,KAAMhB,EAAWI,GAASV,iBAAkBnB,OAAO,UAAS,0BAAMyC,KAAMhB,EAAWI,GAASV,kBAAoBM,EAAaA,EAAWI,GAASV,iBAAmB,YAGlL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASoB,OAAO,8CACXd,EAAaA,EAAWI,GAAShD,MAAQ,YAO9D,OACI,kBAAC,IAAD,CAAM6D,YAAajF,EAAI4E,MAAOA,GAC1B,kBAAC,IAAD,CAAO5E,GAAIA,GACP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,CAAmBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,kBAArE,IAAwF,kBAAC,IAAD,QADlG,sEAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACK4B,EAAWkB,KAAI,SAAC5C,EAAO8B,GAAR,OACZ,kBAAC,IAAD,CAAQe,IAAK7C,EAAM8C,IACfN,OAAQ,kBAAC,IAAMO,SAAP,KACJ,0BAAMpD,MAAO,CAAEqD,WAAY,MAAOpD,MAAO,UAAWqD,aAAc,SAAWjD,EAAMgB,UAAnF,KAAgGhB,EAAMtB,WADlG,IACoH,6BACxH,8BAAOsB,EAAMhC,YAGjBkF,UAAW,kBAAC,IAAMH,SAAP,KACP,yBAAKpD,MAAO,CAAEsC,QAAS,iBACnB,kBAAC,IAAD,OAEJ,yBAAKtC,MAAO,CAAEsC,QAAS,iBACnB,0BAAMtC,MAAO,IAAKK,EAAM5B,QAIhC+E,UAAU,SACVtD,QAAS,WAAQkC,EAAWD,GAAUD,EAAeP,cAWrF,OACI,kBAAC,IAAD,CAAO5D,GAAIA,GACP,kBAAC,IAAD,CACIgC,KAAM,kBAAC,IAAD,KAAmB,kBAAC,IAAD,CAAkBC,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,oBADjG,sEAIA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyD,KAAM,kBAAC,IAAD,CAA4B5D,MAAO,CAAEC,MAAO,sBAClD4D,WAAS,GAFb,wFAImB,gCAK3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ7D,MAAO,CAAEyC,UAAW,UACxB,kBAAC,IAAD,CAAYvC,QAASlC,EAAImC,UAAQ,iBAAiBsD,KAAK,sEACnD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAYzD,MAAO,CAAEC,MAAO,WAAaC,QAASlC,EAAImC,UAAQ,aAAasD,KAAK,8CAC5E,kBAAC,IAAD,CAAmBzD,MAAO,CAAEC,MAAO,WAAayD,MAAO,GAAIC,OAAQ,UC5JrFhC,GAKI,UALJA,GAkBO,aA8FE4K,GArFH,WAAO,IAAD,EAEqBrO,mBAASyD,IAF9B,mBAEVqB,EAFU,KAEGd,EAFH,OAGchE,mBAAS,MAHvB,mBAGVJ,EAHU,KAGGM,EAHH,OAIWF,mBAAS,kBAAC,IAAD,CAAe8C,KAAK,WAJxC,mBAIVwL,EAJU,KAIFC,EAJE,OAKiBxO,IAAMC,UAAS,GALhC,mBAKV2D,EALU,KAKCC,EALD,OAMS7D,IAAMC,UAAS,GANxB,mBAMVV,EANU,KAMH+B,EANG,OAOOtB,IAAMC,WAPb,mBAOVkO,EAPU,KAOJM,EAPI,KASjBC,qBAAU,WAAM,4CAGf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACO3O,EADP,OAECC,EAAQD,GACRsO,EAAU,MAHX,4CAHe,sBACfI,IAAOE,WAAU,YAAiC,IAAD,IAA7BC,OAA6B,EAAnBxM,KAAmB,EAAbd,QADrB,mCAQfuN,KACE,IAEH,IAAMjP,EAAK,SAAAkP,GACVhL,EAAegL,EAAEC,cAAcC,QAAQC,IACvCX,EAAQQ,EAAEC,cAAcC,QAAQrP,KAG7BP,IACgB,MAAfM,GAEHV,EAAY,OA/BI,oDA8BHoC,KAAKC,UAAU,CAAE,KAAQ3B,EAAYC,MAGhDL,MAAK,SAAAgC,GACgB,eAAjBA,EAAK,GAAG6E,MACXrC,EAAeP,IACfG,GAAa,GACbvC,GAAS,IAEgB,WAAjBG,EAAK,GAAG6E,MAAsC,UAAjB7E,EAAK,GAAG6E,OAC7CrC,EAAeP,IACfG,GAAa,GACbvC,GAAS,OAGVI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAI7B,OAAkB,IAAdiC,EAEF,kBAAC,IAAD,KACC,yBAAK7B,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACnE,kBAAC,IAAD,CAAexC,MAAO,CAAEyC,UAAW,WAStC,kBAAC,IAAD,CAAMO,YAAaA,EAAawJ,OAAQA,GACvC,kBAAC,EAAD,CAASzO,GAAG,UAAUD,YAAaA,EAAaE,GAAIA,IACpD,kBAAC,GAAD,CAAOD,GAAG,QAAQC,GAAIA,IACtB,kBAAC,EAAD,CAAMD,GAAG,OAAOD,YAAaA,EAAaE,GAAIA,IAC9C,kBAAC,GAAD,CAAeD,GAAG,gBAAgBC,GAAIA,IACtC,kBAAC,GAAD,CAAqBD,GAAG,sBAAsBC,GAAIA,IAClD,kBAAC,EAAD,CAAaD,GAAG,cAAcD,YAAaA,EAAaE,GAAIA,IAC5D,kBAAC,GAAD,CAAqBD,GAAG,sBAAsBC,GAAIA,IAClD,kBAAC,GAAD,CAAoBD,GAAG,qBAAqBC,GAAIA,IAChD,kBAAC,GAAD,CAAkBF,YAAaA,EAAaC,GAAG,mBAAmBC,GAAIA,IACtE,kBAAC,GAAD,CAAkBF,YAAaA,EAAaC,GAAG,mBAAmBC,GAAIA,IACtE,kBAAC,GAAD,CAAkBF,YAAaA,EAAaC,GAAG,mBAAmBC,GAAIA,IACtE,kBAAC,GAAD,CAAiBF,YAAaA,EAAaC,GAAG,kBAAkBC,GAAIA,IACpE,kBAAC,GAAD,CAAiBF,YAAaA,EAAaC,GAAG,kBAAkBC,GAAIA,IACpE,kBAAC,EAAD,CAAaD,GAAG,cAAcD,YAAaA,EAAaE,GAAIA,IAC5D,kBAAC,EAAD,CAAMD,GAAG,OAAOC,GAAIA,IACpB,kBAAC,EAAD,CAAQD,GAAG,SAASD,YAAaA,EAAaE,GAAIA,IAClD,kBAAC,GAAD,CAAgBD,GAAG,iBAAiBC,GAAIA,EAAIoO,KAAMA,IAClD,kBAAC,GAAD,CAAerO,GAAG,gBAAgBC,GAAIA,EAAIoO,KAAMA,IAChD,kBAAC,GAAD,CAAYrO,GAAG,aAAaD,YAAaA,EAAaE,GAAIA,IAC1D,kBAAC,EAAD,CAAgBD,GAAG,iBAAiBD,YAAaA,EAAaE,GAAIA,M,OC9HrE6O,IAAOC,KAAK,gBAEZQ,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.58b67521.chunk.js","sourcesContent":["export function postRequest(method, url, body) {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return fetch(url, { method: method, headers: headers, body }).then(response => {\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport function getRequest(method, url) {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return fetch(url, { method: method, headers: headers }).then(response => {\r\n        return response.json()\r\n    })\r\n}","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst Home = ({ fetchedUser, id, go }) => {\r\n\r\n\tconst formatDate = (date) =>{\r\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\r\n\t\treturn newDate\r\n\t\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\nif (fetch){\r\n\tif (fetchedUser != null) {\r\n\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetUser(data[0])\r\n\t\t\t\tsetFetch(false)\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t}\r\n}\r\n\r\n\r\n\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university,\r\n\t\t\tparticipationForm: 'Внешнее',\r\n\t\t\teventForm: 'Онлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\r\n\t// ВНЕШНЕЕ МЕРОПРИЯТИЕ ОНЛАЙН\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnesh\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"name\" top=\"Дата проведения\" required/>\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required/>\r\n\r\n\t\t\t\t\t<Select  onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\r\n\t\t\t\t\t\t<option value=\"Выступление\">Выступление</option>\r\n\t\t\t\t\t\t<option value=\"Пост в соц.сетях\">Пост в соц.сетях</option>\r\n\t\t\t\t\t\t<option value=\"Конкурс\">Конкурс</option>\r\n\t\t\t\t\t</Select> \r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\"/>\r\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\r\n\t\t\t\t\t</Select> \r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\t\t\t\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { View, Div, ModalRoot, ModalPage, ModalPageHeader, Banner, Group, PanelHeader, Panel, PanelHeaderButton, Epic, Tabbar, TabbarItem, ScreenSpinner, Cell, InfoRow, Link, Placeholder } from '@vkontakte/vkui';\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\r\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel'\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\n\r\nconst requestURL = \"https://ambassador-todo.herokuapp.com/event/ambassador\"\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\nconst ROUTES = {\r\n    EVENTSINFO: 'eventsInfo'\r\n};\r\n\r\n\r\n\r\nconst Events = ({ fetchedUser, id, go }) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n    const [eventId, setEventId] = React.useState(0);\r\n    const [fetch, setFetch] = React.useState(true);\r\n\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    if (fetch) {\r\n        if (fetchedUser != null) {\r\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n            postRequest('POST', userRequestURL, vkID)\r\n                .then(data => {\r\n                    postRequest('POST', requestURL, JSON.stringify({ ambassador: data[0].fullName }))\r\n                        .then(data => {\r\n                            setEventsData(data)\r\n                            setIsLoading(false)\r\n                            setFetch(false)\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n    if (eventsData.length > 0) {\r\n        const modal = (\r\n            <ModalRoot\r\n                activeModal={activeModal}\r\n                onClose={modalBack}\r\n            >\r\n                <ModalPage\r\n                    id={ROUTES.EVENTSINFO}\r\n                    onClose={modalBack}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                            {eventsData ? eventsData[eventId].nameEvent : 'empty'}\r\n                        </ModalPageHeader>}>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n\r\n                    <Cell>\r\n                        <InfoRow header=\"Место проведения\">\r\n                            {eventsData ? eventsData[eventId].eventPlace : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат участия\">\r\n                            {eventsData ? eventsData[eventId].participationForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Дата проведения\">\r\n                            {eventsData ? eventsData[eventId].date : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Тип мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventType : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Роль компании\">\r\n                            {eventsData ? eventsData[eventId].companyRole : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Краткое описание\">\r\n                            {eventsData ? eventsData[eventId].description : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Количество участников\">\r\n                            {eventsData ? eventsData[eventId].participants : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Ссылки\">\r\n                            <Link href={eventsData[eventId].publicationLinks} target=\"_blank\"><span href={eventsData[eventId].publicationLinks} >{eventsData ? eventsData[eventId].publicationLinks : 'empty'}</span></Link>\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Заметки\">\r\n                            {eventsData ? eventsData[eventId].notes : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        )\r\n\r\n        return (\r\n            <View activePanel={id} modal={modal}>\r\n                <Panel id={id}>\r\n                    <PanelHeader\r\n                        left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\r\n                        Мероприятия\r\n                </PanelHeader>\r\n                    <Group>\r\n                        <Div>\r\n                            {eventsData.map((event, eventId) => (\r\n                                <Banner key={event._id}\r\n                                    header={<React.Fragment>\r\n                                        <span style={{ fontWeight: '300', color: \"#fc2c38\", marginBottom: '10px' }}>{event.eventForm}, {event.eventType}</span> <br />\r\n                                        <span>{event.nameEvent}</span>\r\n\r\n                                    </React.Fragment>}\r\n                                    subheader={<React.Fragment>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <Icon20CalendarOutline />\r\n                                        </div>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <span style={{}}>{event.date}</span>\r\n                                        </div>\r\n\r\n                                    </React.Fragment>}\r\n                                    asideMode=\"expand\"\r\n                                    onClick={() => { setEventId(eventId); setActivePanel(ROUTES.EVENTSINFO); }}\r\n                                />\r\n                            ))}\r\n                        </Div>\r\n                    </Group>\r\n\r\n                    <Epic style={{ marginTop: '100px' }}>\r\n                        <Tabbar>\r\n                            <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" text=\"Мероприятия\">\r\n                                <Icon28NewsfeedOutline style={{ color: \"#fc2c38\" }} />\r\n                            </TabbarItem>\r\n\r\n                            <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\r\n                                <Icon28FireOutline />\r\n                            </TabbarItem>\r\n\r\n                            <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\r\n                                <Icon28BrainOutline />\r\n                            </TabbarItem>\r\n\r\n                            <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\r\n                                <Icon28UserOutline width={32} height={32} />\r\n                            </TabbarItem>\r\n                        </Tabbar>\r\n                    </Epic>\r\n\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\r\n                Мероприятия\r\n            </PanelHeader>\r\n            <Group>\r\n                <Div>\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline style={{ color: 'rgb(176,182,192)' }} />}\r\n                        stretched\r\n                    >\r\n                        Нет мероприятий<br />\r\n                    </Placeholder>\r\n                </Div>\r\n            </Group>\r\n\r\n            <Epic style={{ marginTop: '100px' }}>\r\n                <Tabbar>\r\n                    <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" text=\"Мероприятия\">\r\n                        <Icon28NewsfeedOutline style={{ color: \"#fc2c38\" }} />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\r\n                        <Icon28FireOutline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\r\n                        <Icon28BrainOutline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\r\n                        <Icon28UserOutline width={32} height={32} />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            </Epic>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default Events;","import React from 'react';\r\nimport { Cell, Group, PanelHeader, Panel, Epic, Tabbar, TabbarItem, Header} from '@vkontakte/vkui';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\r\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28CopyOutline from '@vkontakte/icons/dist/28/copy_outline';\r\n\r\n\r\n\r\n\r\nconst Info = ({ id, go }) => {\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader>\r\n                База знаний\r\n            </PanelHeader>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Ресурсы</Header>}>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://cloud.mail.ru/home/%D0%90%D0%BC%D0%B1%D0%B0%D1%81%D1%81%D0%B0%D0%B4%D0%BE%D1%80%D1%8B%203.0%20\">\r\n                        Папка на Облаке\r\n                    </Cell>\r\n\t\t\t</Group>\r\n            <Group header={<Header mode=\"secondary\">Ссылки на компанию</Header>}>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>}  target=\"_blank\" href=\"https://www.youtube.com/user/TPMGTU/videos\">\r\n                        YouTube-канал Технострим  \r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>}  target=\"_blank\" href=\"https://www.corp.mail.ru\">\r\n                        Официальный сайт Mail.ru Group \r\n                    </Cell>\r\n\t\t\t</Group>\r\n            <Group header={<Header mode=\"secondary\">Метериалы для чтения</Header>}>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://vk.com/video-153502007_456239172?list=5df1abb45183e47f5e\">\r\n                        Интервью с Дмитрием Гришиным\r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://vk.com/video-153502007_456239241\"> \r\n                        Выступление Бориса Добродеева на форуме ПроеКТОриЯ \r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://thebell.io/boris-dobrodeev-mail-ru-group-legkie-modeli-v-internete-zakonchilis\">\r\n                        Интервью Бориса Добродеева в The Bell\r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://www.rbc.ru/interview/technology_and_media/16/12/2019/5dee6c7d9a794758a559c774\">\r\n                        Интервью Бориса Добродеева в РБК\r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.mail.ru/ru/company/strategy_ceo/\">\r\n                        Подробный рассказ Бориса Добродеева о экосистеме экосистем  \r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.imgsmail.ru/media/files/esg2019.pdf\">\r\n                        Первый отчет в области устойчивого развития (ESG-отчет)  \r\n                    </Cell>\r\n                    <Cell expandable before={<Icon28CopyOutline style={{color:\"#fc2c38\"}}/>} target=\"_blank\" href=\"https://corp.imgsmail.ru/media/files/mail.rugrouparfy2019.pdf\">\r\n                        Годовой отчет 2019 года \r\n                    </Cell>\r\n            </Group>\r\n\r\n            <Epic style={{ marginTop: '100px' }}>\r\n                <Tabbar >\r\n                <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\r\n                    <Icon28NewsfeedOutline/>\r\n                </TabbarItem>\r\n\r\n                <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\r\n                    <Icon28FireOutline/>\r\n                </TabbarItem>\r\n\r\n                <TabbarItem style={{color:\"#fc2c38\"}} onClick={go} data-to=\"info\" text=\"База знаний\">\r\n                    <Icon28BrainOutline style={{color:\"#fc2c38\"}}/>\r\n                </TabbarItem>\r\n\r\n                <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\r\n                    <Icon28UserOutline width={32} height={32}/>\r\n                </TabbarItem>\r\n                </Tabbar>  \r\n            </Epic>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { SimpleCell, PanelHeader, Panel, Epic, Tabbar, TabbarItem, Group, ScreenSpinner, Separator } from '@vkontakte/vkui';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\r\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/role'\r\nconst userRequestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\n\r\nconst Achivements = ({ fetchedUser, id, go }) => {\r\n\r\n\r\n    const [users, setUsers] = React.useState();\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [user, setUser] = React.useState();\r\n    const [request, setRequest] = React.useState(false);\r\n    const [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n    if (request) {\r\n        postRequest('POST', requestURL, JSON.stringify({ role: 'ambassador' }))\r\n            .then(data => {\r\n                let filtredUsers = data.filter(function (i, n) { return (i.role === \"ambassador\" && i.grade) })\r\n                console.log(filtredUsers)\r\n                setUsers(filtredUsers);\r\n                setIsLoading(false)\r\n                setRequest(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    if (fetch) {\r\n        if (fetchedUser != null) {\r\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n            postRequest('POST', userRequestURL, vkID)\r\n\r\n                .then(data => {\r\n                    setUser(data[0]);\r\n                    setRequest(true)\r\n                    setFetch(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader>\r\n                Рейтинг\r\n            </PanelHeader>\r\n            {fetchedUser &&\r\n                <SimpleCell href={\"https://vk.com/id\" + user.vkID} target=\"_blank\" after={user.grade} description={user.universityShortly}>{user.fullName}</SimpleCell>}\r\n            <Separator style={{ margin: '12px 0' }} />\r\n            <Group style={{ marginBottom: 50 }}>\r\n                {users.map((user, id) => (\r\n                    <SimpleCell href={\"https://vk.com/id\" + user.vkID} target=\"_blank\" after={user.grade} key={user._id} description={user.universityShorlty}>{user.fullName}</SimpleCell>\r\n                ))}\r\n            </Group>\r\n\r\n            <Epic>\r\n                <Tabbar>\r\n                    <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\r\n                        <Icon28NewsfeedOutline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\r\n                        <Icon28FireOutline style={{ color: \"#fc2c38\" }} />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\r\n                        <Icon28BrainOutline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\r\n                        <Icon28UserOutline width={32} height={32} />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            </Epic>\r\n\r\n        </Panel>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Achivements;","import React from 'react';\r\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { View, ModalRoot, Avatar, ModalPage, ModalPageHeader, RichCell, Group, PanelHeader, Panel, ScreenSpinner, Epic, Tabbar, TabbarItem, Header, Cell, PanelHeaderButton, Counter, CellButton } from '@vkontakte/vkui';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\r\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\r\nimport Icon28FireOutline from '@vkontakte/icons/dist/28/fire_outline';\r\nimport Icon28WriteOutline from '@vkontakte/icons/dist/28/write_outline';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\r\n\r\n\r\nconst Profile = ({ fetchedUser, id, go }) => {\r\n\r\n    const ROUTES = {\r\n        PROFILEINFO: 'profileInfo',\r\n        INSIDEEVENTS: 'inside',\r\n        OUTSIDEEVENTS: 'outside',\r\n        HELPANDSUPPORT: 'helpAndSupport'\r\n    };\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [user, setUser] = React.useState();\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [fetch, setFetch] = React.useState(true);\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n\r\n    const profileModal = (\r\n        <ModalRoot\r\n            activeModal={activeModal}\r\n            onClose={modalBack}\r\n        >\r\n            <ModalPage\r\n                id={ROUTES.PROFILEINFO}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Подробнее\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell multiline indicator={<Cell>{user ? user.clothingSize : 'empty'}</Cell>} >\r\n                        Размер одежды\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.personalPostalAddress : 'empty'}</Cell>} >\r\n                        Почтовый адрес (с индексом)\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.latinFullName : 'empty'}</Cell>} >\r\n                        Амбассадорская почта\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.university : 'empty'}</Cell>}>\r\n                        Полное название учебного заведения\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.facultyFull : 'empty'}</Cell>} >\r\n                        Полное название факультета\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.facultyShortly : 'empty'}</Cell>}  >\r\n                        Краткое название факультета\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.statusInUniversity : 'empty'}</Cell>}  >\r\n                        Статус\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.facultyFull : 'empty'} </Cell>}>\r\n                        Факультет\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.specialty : 'empty'} </Cell>}>\r\n                        Специальность\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.universityPostalAddress : 'empty'} </Cell>}>\r\n                        Адрес учебного заведения\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.rectorFullName : 'empty'}</Cell>} >\r\n                        ФИО ректора\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell >{user ? user.rectorPostalAddress : 'empty'}</Cell>} >\r\n                        Email ректора\r\n                        </Cell>\r\n\r\n\r\n                </Group>\r\n\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.INSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внутреннее\" && i.eventForm === \"Онлайн\") }).length : 'empty'} </Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.OUTSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внешнее\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.HELPANDSUPPORT}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n        </ModalRoot>\r\n    )\r\n\r\n    if (fetch) {\r\n        if (fetchedUser != null) {\r\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n            postRequest('POST', requestURL, vkID)\r\n\r\n                .then(data => {\r\n                    setUser(data[0]);\r\n                    postRequest('POST', eventsRequestURL, JSON.stringify({ \"ambassador\": data[0].fullName }))\r\n                        .then(events => {\r\n                            setEventsData(events)\r\n                            setIsLoading(false)\r\n                            setFetch(false)\r\n                        })\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View activePanel={id} modal={profileModal}>\r\n            <Panel id={id}>\r\n\r\n                <PanelHeader\r\n                    left={<PanelHeaderButton><Icon28WriteOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"editprofile\" /></PanelHeaderButton>}>\r\n                    Профиль\r\n            </PanelHeader>\r\n                <div style={{ marginBottom: 100 }}>\r\n                    {fetchedUser &&\r\n                        <Group>\r\n                            <RichCell\r\n                                href={\"https://vk.com/id\" + user.vkID}\r\n                                target=\"_blank\"\r\n                                before={<Avatar size={72} src={fetchedUser.photo_100} />}>\r\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\r\n                                <br />\r\n                                <span style={{ fontSize: '14px', color: 'grey' }}>{user.grade}</span>\r\n                                <br />\r\n                            </RichCell>\r\n                        </Group>\r\n                    }\r\n\r\n                    <Group header={<Header mode=\"secondary\">Статистика</Header>}>\r\n                        <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.length}</Counter>}>\r\n                            Всего мероприятий\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.INSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" }).length}</Counter>}>\r\n                            Внутренние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.OUTSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" }).length}</Counter>}>\r\n                            Внешние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.HELPANDSUPPORT); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" }).length}</Counter>}>\r\n                            Помощь и поддержка\r\n                            </Cell>\r\n\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Информация о пользователе</Header>}>\r\n                        <Cell multiline indicator={user.town} >\r\n                            Город\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.birthday} >\r\n                            Дата рождения\r\n                        </Cell>\r\n                        <Cell multiline indicator={formatPhoneNumber(user.phoneNumber)} >\r\n                            Номер телефона\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.personalEmail} >\r\n                            Email\r\n                        </Cell>\r\n                        <Cell multiline indicator={<div className=\"IndicatorOverflow\">{user.universityShortly}</div>}\r\n                        >\r\n                            Учебное заведение\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.statusInUniversity} >\r\n                            Статус\r\n                        </Cell>\r\n                        <CellButton\r\n                            style={{ color: '#fc2c38' }}\r\n                            onClick={() => { setActivePanel(ROUTES.PROFILEINFO); }}>Дополнительная информация</CellButton>\r\n                    </Group>\r\n                </div>\r\n\r\n\r\n                <Epic>\r\n                    <Tabbar style={{ marginTop: '100px' }}>\r\n                        <TabbarItem onClick={go} data-to=\"events\" text=\"Мероприятия\">\r\n                            <Icon28NewsfeedOutline />\r\n                        </TabbarItem>\r\n\r\n                        <TabbarItem onClick={go} data-to=\"achivements\" text=\"Рейтинг\">\r\n                            <Icon28FireOutline />\r\n                        </TabbarItem>\r\n\r\n                        <TabbarItem onClick={go} data-to=\"info\" text=\"База знаний\">\r\n                            <Icon28BrainOutline />\r\n                        </TabbarItem>\r\n\r\n                        <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profile\" text=\"Профиль\">\r\n                            <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\r\n                        </TabbarItem>\r\n                    </Tabbar>\r\n                </Epic>\r\n\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { PanelHeader, Panel, Epic, Tabbar, TabbarItem, Group, ScreenSpinner, Placeholder, Div, RichCell, Button } from '@vkontakte/vkui';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\r\nimport Icon56UserAddOutline from '@vkontakte/icons/dist/56/user_add_outline';\r\n\r\nconst userRequestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\n\r\nconst ListAmbassador = ({ fetchedUser, id, go }) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [fetch, setFetch] = React.useState(true);\r\n    const [ambassadors, setAmbassadors] = React.useState();\r\n\r\n    if (fetch) {\r\n        if (fetchedUser != null) {\r\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n            postRequest('POST', userRequestURL, vkID)\r\n                .then(data => {\r\n                    if (data[0].role === 'mentor') {\r\n                        postRequest('POST', userRequestURL, JSON.stringify({ \"mentor\": data[0].fullName }))\r\n                            .then(ambassadors => {\r\n                                setAmbassadors(ambassadors)\r\n                                setIsLoading(false)\r\n                                setFetch(false)\r\n                            })\r\n                    }\r\n                    if (data[0].role === 'staff') {\r\n                        postRequest('POST', userRequestURL, JSON.stringify({ \"role\": 'ambassador' }))\r\n                            .then(ambassadors => {\r\n                                setAmbassadors(ambassadors)\r\n                                setIsLoading(false)\r\n                                setFetch(false)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n\r\n    if (ambassadors.length > 0) {\r\n        return (\r\n\r\n            <Panel id={id}>\r\n\r\n                <PanelHeader>\r\n                    Амбассадоры\r\n                </PanelHeader>\r\n                <Group style={{ marginBottom: 50 }}>\r\n                    {ambassadors.map((user, id) => (\r\n                        <Div key={user._id}>\r\n                            <RichCell disabled\r\n                                multiline \r\n                                actions={\r\n                                    <React.Fragment >\r\n                                        <Button style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={go} data-to=\"profileforinfo\" data-id={user.vkID}>Профиль</Button>\r\n                                        <Button style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={go} data-to=\"eventsforinfo\" data-id={user.vkID}>Мероприятия</Button>\r\n                                    </React.Fragment>\r\n                                }\r\n                                caption={user.universityShortly} >{user.fullName}\r\n                            </RichCell>\r\n                        </Div>\r\n                    ))}\r\n                </Group>\r\n\r\n                <Epic>\r\n                    <Tabbar style={{ marginTop: '100px' }}>\r\n                        <TabbarItem onClick={go} style={{ color: \"#fc2c38\" }} data-to=\"listambassador\" text=\"Амбассадоры\">\r\n                            <Icon28Users3Outline style={{ color: \"#fc2c38\" }} />\r\n                        </TabbarItem>\r\n\r\n                        <TabbarItem onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\r\n                            <Icon28UserOutline width={32} height={32} />\r\n                        </TabbarItem>\r\n                    </Tabbar>\r\n                </Epic>\r\n\r\n            </Panel>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader>\r\n                Рейтинг\r\n                </PanelHeader>\r\n            <Group>\r\n                <Div>\r\n                    <Placeholder\r\n                        icon={<Icon56UserAddOutline style={{ color: 'rgb(176,182,192)' }} />}\r\n                        stretched\r\n                    >\r\n                        Нет амбассадоров<br />\r\n                    </Placeholder>\r\n                </Div>\r\n            </Group>\r\n\r\n            <Epic>\r\n                <Tabbar style={{ marginTop: '100px' }}>\r\n                    <TabbarItem onClick={go} style={{ color: \"#fc2c38\" }} data-to=\"listambassador\" text=\"Амбассадоры\">\r\n                        <Icon28Users3Outline style={{ color: \"#fc2c38\" }} />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\r\n                        <Icon28UserOutline width={32} height={32} />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            </Epic>\r\n\r\n        </Panel>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ListAmbassador;\r\n","import React from 'react';\r\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, PanelHeaderBack,  Select, ScreenSpinner } from '@vkontakte/vkui';\r\n\r\nconst Editprofile = ({ fetchedUser, id, go }) => {\r\n\tconst formatDate = (date) => {\r\n\t\tlet newDate = date.slice(8, 10) + date.slice(4, 8) + date.slice(0, 4);\r\n\t\treturn newDate\r\n\t}\r\n\r\n\tconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\n\r\n\tconst [isLoading, setIsLoading] = React.useState(true);\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [university, setUniversity] = React.useState();\r\n\tconst [phone, setPhone] = React.useState();\r\n\tconst [personalemail, setPersonalEmail] = React.useState();\r\n\tconst [birthday, setBirthday] = React.useState();\r\n\tconst [universitypostaladdress, setUniversityPostalAddress] = React.useState();\r\n\tconst [rectorfullname, setRectorFullName] = React.useState();\r\n\tconst [rectorpostaladdress, setRectorPostalAddress] = React.useState();\r\n\tconst [statusinuniversity, setStatusInUniversity] = React.useState();\r\n\tconst [facultyfull, setFacultyFull] = React.useState();\r\n\tconst [facultyshortly, setFacultyShortly] = React.useState();\r\n\tconst [specialty, setSpecialty] = React.useState();\r\n\tconst [personalpostaladdress, setPersonalPostalAddress] = React.useState();\r\n\tconst [clothingsize, setClothingSize] = React.useState();\r\n\tconst [fullName, setFullName] = React.useState();\r\n\tconst [fullNameLatin, setFullNameLatin] = React.useState();\r\n\tconst [town, setTown] = React.useState();\r\n\tconst [universityShortly, setUniversityShortly] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\r\n\tconst onChangeUniversityShortly = (event) => {\r\n\t\tsetUniversityShortly(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFullNameLatin = (event) => {\r\n\t\tsetFullNameLatin(event.target.value)\r\n\t}\r\n\tconst onChangeFullName = (event) => {\r\n\t\tsetFullName(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeUniversity = (event) => {\r\n\t\tsetUniversity(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePhone = (event) => {\r\n\t\tsetPhone('+7' + event.target.value)\r\n\t}\r\n\r\n\tconst onChangePersonalEmail = (event) => {\r\n\t\tsetPersonalEmail(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeBirthday = (event) => {\r\n\t\tsetBirthday(formatDate(event.target.value))\r\n\t}\r\n\r\n\tconst onChangeUniversityPostalAddress = (event) => {\r\n\t\tsetUniversityPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeRectorFullName = (event) => {\r\n\t\tsetRectorFullName(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeRectorPostalAddress = (event) => {\r\n\t\tsetRectorPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeStatusInUniversity = (event) => {\r\n\t\tsetStatusInUniversity(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFacultyFull = (event) => {\r\n\t\tsetFacultyFull(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeFacultyShortly = (event) => {\r\n\t\tsetFacultyShortly(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeSpecialty = (event) => {\r\n\t\tsetSpecialty(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePersonalPostalAddress = (event) => {\r\n\t\tsetPersonalPostalAddress(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeClothingSize = (event) => {\r\n\t\tsetClothingSize(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeTown = (event) => {\r\n\t\tsetTown(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\t_id: user._id,\r\n\t\t\tvkID: user.vkID,\r\n\t\t\tavatar: \" \",\r\n\t\t\tachievements: \" \",\r\n\t\t\tphoneNumber: phone,\r\n\t\t\tbirthday: birthday,\r\n\t\t\tfullName: fullName,\r\n\t\t\tlatinFullName: fullNameLatin,\r\n\t\t\tpersonalEmail: personalemail,\r\n\t\t\ttown: town,\r\n\t\t\tuniversity: university,\r\n\t\t\tuniversityShortly: universityShortly,\r\n\t\t\tuniversityPostalAddress: universitypostaladdress,\r\n\t\t\trectorFullName: rectorfullname,\r\n\t\t\trectorPostalAddress: rectorpostaladdress,\r\n\t\t\tstatusInUniversity: statusinuniversity,\r\n\t\t\tfacultyFull: facultyfull,\r\n\t\t\tfacultyShortly: facultyshortly,\r\n\t\t\tspecialty: specialty,\r\n\t\t\tpersonalPostalAddress: personalpostaladdress,\r\n\t\t\tclothingSize: clothingsize\r\n\t\t})\r\n\t\tpostRequest('POST', 'https://ambassador-todo.herokuapp.com/access/update', body)\r\n\r\n\t}\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', requestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\tif (isLoading === true) {\r\n\t\treturn (\r\n\t\t\t<Panel id={id}>\r\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\t\t\t\t\t<ScreenSpinner style={{ marginTop: '50%' }} />\r\n\t\t\t\t</div>\r\n\t\t\t</Panel>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profile\" onMouseUp={go} />}>Редактирование профиля</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeFullName} placeholder={user.fullName} type=\"text\" name=\"fullname\" top=\"ФИО\" required />\r\n\t\t\t\t\t<Input onChange={onChangePhone} placeholder={formatPhoneNumber(user.phoneNumber)} pattern=\"[0-9]{2}\\.[0-9]{2}\\.[0-9]{4}\" type=\"text\" name=\"phonenumber\" top=\"Телефон\" bottom=\"Введи телефон в формате 8005553535 (без 7, +7, 8)\" required />\r\n\t\t\t\t\t<Input onChange={onChangeFullNameLatin} placeholder={user.latinFullName} type=\"text\" name=\"fullname\" top=\"Амбассадорская почта\" required />\r\n\t\t\t\t\t<Input onChange={onChangePersonalEmail} placeholder={user.personalEmail} type=\"text\" name=\"email\" top=\"Личная почта\" required />\r\n\t\t\t\t\t<Input onChange={onChangeBirthday} placeholder={user.birthday} type=\"date\" name=\"dateofbirth\" top=\"Дата рождения\" required />\r\n\t\t\t\t\t<Input onChange={onChangeTown} placeholder={user.town} type=\"text\" name=\"city\" top=\"Город\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversity} placeholder={user.university} type=\"text\" name=\"university\" top=\"Учебное заведение\" bottom=\"Полное наименование\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversityShortly} placeholder={user.universityShortly} type=\"text\" name=\"university\" top=\"Учебное заведение\" bottom=\"Краткое наименование\" required />\r\n\t\t\t\t\t<Input onChange={onChangeUniversityPostalAddress} placeholder={user.universityPostalAddress} bottom=\"С индексом для отправки писем\" type=\"text\" name=\"pochtavuz\" top=\"Почтовый адрес вуза\" required />\r\n\t\t\t\t\t<Input onChange={onChangeRectorFullName} placeholder={user.rectorFullName} type=\"text\" name=\"fiorector\" top=\"ФИО ректора\" required />\r\n\t\t\t\t\t<Input onChange={onChangeRectorPostalAddress} placeholder={user.rectorPostalAddress} ype=\"text\" name=\"emailrector\" top=\"Электронный адрес ректора\" required />\r\n\t\t\t\t\t<Select onChange={onChangeStatusInUniversity} placeholder={user.statusInUniversity} bottom=\"Курс, на который ты уже перешёл\" top=\"Статус в вузе\" >\r\n\t\t\t\t\t\t<option value=\"1 курс бакалавриат\">1 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"2 курс бакалавриат\">2 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"3 курс бакалавриат\">3 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"4 курс бакалавриат\">4 курс бакалавриат</option>\r\n\t\t\t\t\t\t<option value=\"1 курс магистратура\">1 курс магистратура</option>\r\n\t\t\t\t\t\t<option value=\"2 курс магистратура\">2 курс магистратура</option>\r\n\t\t\t\t\t\t<option value=\"1 курс специалитет\">1 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"2 курс специалитет\">2 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"3 курс специалитет\">3 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"4 курс специалитет\">4 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"5 курс специалитет\">5 курс специалитет</option>\r\n\t\t\t\t\t\t<option value=\"1 курс бакалавриат\">Аспирант</option>\r\n\t\t\t\t\t\t<option value=\"сотрудник вуза\">Сотрудник вуза</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Input onChange={onChangeFacultyFull} placeholder={user.facultyFull} bottom=\"Полное наименование\" type=\"text\" name=\"facultatifull\" top=\"Факультет\" required />\r\n\t\t\t\t\t<Input onChange={onChangeFacultyShortly} placeholder={user.facultyShortly} bottom=\"Краткое наименование\" type=\"text\" name=\"facultatiless\" top=\"Факультет\" required />\r\n\t\t\t\t\t<Input onChange={onChangeSpecialty} placeholder={user.specialty} type=\"text\" name=\"speciality\" top=\"Специальность\" required />\r\n\t\t\t\t\t<Input onChange={onChangePersonalPostalAddress} placeholder={user.personalPostalAddress} bottom=\"Куда присылать мерч и другие посылки\" type=\"text\" name=\"pochtaadress\" top=\"Твой почтовый адрес (с индексом)\" required />\r\n\t\t\t\t\t<Select onChange={onChangeClothingSize} placeholder={user.clothingSize} top=\"Размер одежды (для бомбера)\" >\r\n\t\t\t\t\t\t<option value=\"XS мужской\">XS мужской</option>\r\n\t\t\t\t\t\t<option value=\"S мужской\">S мужской</option>\r\n\t\t\t\t\t\t<option value=\"M мужской\">M мужской</option>\r\n\t\t\t\t\t\t<option value=\"L мужской\">L мужской</option>\r\n\t\t\t\t\t\t<option value=\"XL мужской\">XL мужской</option>\r\n\t\t\t\t\t\t<option value=\"XXL мужской\">XXL мужской</option>\r\n\t\t\t\t\t\t<option value=\"XXS женский\">XXS женский</option>\r\n\t\t\t\t\t\t<option value=\"XS женский\">XS женский</option>\r\n\t\t\t\t\t\t<option value=\"S женский\">S женский</option>\r\n\t\t\t\t\t\t<option value=\"M женский\">M женский</option>\r\n\t\t\t\t\t\t<option value=\"L женский\">L женский</option>\r\n\t\t\t\t\t\t<option value=\"XL женский\">XL женский</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"profile\">Добавить</Button>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default Editprofile;","import React from 'react';\nimport {  Card, CardGrid, Group, PanelHeader, Panel,  PanelHeaderBack} from '@vkontakte/vkui';\n\n\nconst avatars = {\n    bestclub: 'http://pngimg.com/uploads/bitcoin/bitcoin_PNG31.png',\n};\n\n\nconst Badge = ({ id, go }) => {\n\n\treturn (\n\n\t\t<Panel id={id}>\n\n\t\t\t<PanelHeader\n            left={<PanelHeaderBack style={{color: \"#fc2c38\"}} onClick={go} data-to=\"profile\"/>}>Достижения</PanelHeader>\n            <Group separator=\"hide\">\n                \n\t\t\t    <CardGrid>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n                <CardGrid>\n                <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n                <CardGrid>\n                <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                    <Card size=\"s\">\n                        <div style={{ \n                         height: 96,  \n                         borderRadius: 10,\n                         }} >\n                        <img alt=\"badge\" style={{ width: '100%', height: 96, borderRadius: 10, objectFit: 'cover', objectPosition: 'center', zIndex: 0}} src={avatars['bestclub']} />\n                        </div>\n                    </Card>\n                </CardGrid>\n            </Group>\n\n\t\t</Panel>\n\t)\n}\n\n\nexport default Badge;\n","import React from 'react';\r\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst AddEventFirst = ({ id, go }) => {\r\n\r\n    return (\r\n\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader\r\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"events\" />}>\r\n                Форма отчета</PanelHeader>\r\n            <Placeholder>\r\n                Выберите формат участия\r\n            </Placeholder>\r\n            <Div>\r\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventsecondvnesh\">Внешнее мероприятие</Button>\r\n            </Div>\r\n            <Div>\r\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventsecondvnutr\">Внутреннее мероприятие</Button>\r\n            </Div>\r\n            <Div>\r\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventsecondhelp\">Помощь и поддержка</Button>\r\n            </Div>\r\n\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default AddEventFirst;","import React from 'react';\r\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst AddEventSecondVnesh = ({ id, go }) => {\r\n\r\n    return (\r\n\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader\r\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\r\n                Форма отчета</PanelHeader>\r\n            <Placeholder>\r\n                Выберите формат мероприятия\r\n            </Placeholder>\r\n            <Div>\r\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"home\">Онлайн</Button>\r\n            </Div>\r\n            <Div>\r\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventvneshoff\">Офлайн</Button>\r\n            </Div>\r\n\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default AddEventSecondVnesh;","import React from 'react';\r\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\n\r\nconst AddEventSecondVnutr = ({ id, go }) => {\r\n\r\n    return (\r\n\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader\r\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\r\n                Форма отчета</PanelHeader>\r\n            <Placeholder>\r\n                Выберите формат мероприятия\r\n            </Placeholder>\r\n            <Div>\r\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventvnutronl\">Онлайн</Button>\r\n            </Div>\r\n            <Div>\r\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventvnutroff\">Офлайн</Button>\r\n            </Div>\r\n\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default AddEventSecondVnutr;","import React from 'react';\r\nimport { PanelHeader, Panel,Placeholder, PanelHeaderBack, Div, Button } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst AddEventSecondHelp = ({ id, go }) => {\r\n\r\n    return (\r\n\r\n        <Panel id={id}>\r\n\r\n            <PanelHeader\r\n                left={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" />}>\r\n                Форма отчета</PanelHeader>\r\n            <Placeholder>\r\n                Выберите формат мероприятия\r\n            </Placeholder>\r\n            <Div>\r\n                <Button  style={{backgroundColor: '#fc2c38'}}  size=\"xl\" onClick={go} data-to=\"addeventhelponl\">Онлайн</Button>\r\n            </Div>\r\n            <Div>\r\n                <Button style={{backgroundColor: '#fc2c38'}} size=\"xl\" onClick={go} data-to=\"addeventhelpoff\">Офлайн</Button>\r\n            </Div>\r\n\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default AddEventSecondHelp;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst AddEventVneshOff = ({ fetchedUser, id, go }) => {\r\n\r\n\tconst formatDate = (date) =>{\r\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\r\n\t\treturn newDate\r\n\t\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\nif (fetch){\r\n\tif (fetchedUser != null) {\r\n\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetUser(data[0])\r\n\t\t\t\tsetFetch(false)\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t}\r\n}\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tparticipationForm: 'Внешнее',\r\n\t\t\teventForm: 'Офлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnesh\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required/>\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Select  onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Интерактивная площадка\">Интерактивная площадка</option>\r\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\r\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\r\n\t\t\t\t\t\t<option value=\"Стенд\">Стенд</option>\r\n                        <option value=\"Стенд\">Выступление</option>\r\n                        <option value=\"Стенд\">Активность для школьников</option>\r\n                        <option value=\"Стенд\">Экскурсия в офис</option>\r\n\t\t\t\t\t</Select> \r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\"/>\r\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"Выступление\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"Пост в соц.сетях\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"Конкурс\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"Конкурс\">1000 и более</option>\r\n\t\t\t\t\t</Select> \r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\t\t\t\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default AddEventVneshOff;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst AddEventVnutrOnl = ({ fetchedUser, id, go }) => {\r\n\tconst formatDate = (date) => {\r\n\t\tlet newDate = date.slice(8, 10) + date.slice(4, 8) + date.slice(0, 4);\r\n\t\treturn newDate\r\n\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tparticipationForm: 'Внутреннее',\r\n\t\t\teventForm: 'Онлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\r\n\t// ВНУТРЕННЕЕ МЕРОПРИЯТИЕ ОНЛАЙН\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnutr\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required />\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\r\n\r\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Пост для группы MRG для образования\">Пост для группы MRG для образования</option>\r\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\r\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\r\n\t\t\t\t\t\t<option value=\"Выступление сотрудника/приглашение сотрудника в жюри\">Выступление сотрудника/приглашение сотрудника в жюри</option>\r\n\t\t\t\t\t\t<option value=\"Вебинар/трансляция\">Вебинар/трансляция</option>\r\n\t\t\t\t\t\t<option value=\"Пост для университетских пабликов/студорганизаций\">Пост для университетских пабликов/студорганизаций</option>\r\n\t\t\t\t\t\t<option value=\"Размещение на сайте университета\">Размещение на сайте университета</option>\r\n\t\t\t\t\t\t<option value=\"Конкурс\">Конкурс</option>\r\n\t\t\t\t\t\t<option value=\"Интервью\">Интервью</option>\r\n\t\t\t\t\t\t<option value=\"Пост на своей странице\">Пост на своей странице</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required />\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\r\n\t\t\t\t\t<Select onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default AddEventVnutrOnl;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst AddEventVnutrOff = ({ fetchedUser, id, go }) => {\r\n\tconst formatDate = (date) =>{\r\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\r\n\t\treturn newDate\r\n\t\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tparticipationForm: 'Внутреннее',\r\n\t\t\teventForm: 'Офлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\r\n\t// ВНУТРЕННЕЕ МЕРОПРИЯТИЕ ОФФЛАЙН\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondvnutr\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required />\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\r\n\r\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Интерактивная площадка\">Интерактивная площадка</option>\r\n\t\t\t\t\t\t<option value=\"Воркшоп/мастер-класс\">Воркшоп/мастер-класс</option>\r\n\t\t\t\t\t\t<option value=\"Квиз/конкурс/викторина\">Квиз/конкурс/викторина</option>\r\n\t\t\t\t\t\t<option value=\"Выступление сотрудника/приглашение сотрудника в жюри\">Выступление сотрудника/приглашение сотрудника в жюри</option>\r\n\t\t\t\t\t\t<option value=\"Вебинар/трансляция\">Вебинар/трансляция</option>\r\n\t\t\t\t\t\t<option value=\"Квест\">Квест</option>\r\n\t\t\t\t\t\t<option value=\"Игры (ЧГК, ИТ-мафия, Alias)\">Игры (ЧГК, ИТ-мафия, Alias)</option>\r\n\t\t\t\t\t\t<option value=\"Выступление\">Выступление</option>\r\n\t\t\t\t\t\t<option value=\"Стенд\">Стенд</option>\r\n\t\t\t\t\t\t<option value=\"Дебаты\">Дебаты</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required />\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\r\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default AddEventVnutrOff;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst AddEventHelpOnl = ({ fetchedUser, id, go }) => {\r\n\r\n\tconst formatDate = (date) =>{\r\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\r\n\t\treturn newDate\r\n\t\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tparticipationForm: 'Помощь и поддержка',\r\n\t\t\teventForm: 'Онлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\r\n\t// ПОМОЩЬ МЕРОПРИЯТИЕ ОНЛАЙН\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondhelp\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required />\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\r\n\r\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)\">Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)</option>\r\n\t\t\t\t\t\t<option value=\"Размещение информации на странице вуза/студенческого сообщества в соцсетях\">Размещение информации на странице вуза/студенческого сообщества в соцсетях</option>\r\n\t\t\t\t\t\t<option value=\"Распространение анкеты/формы\">Распространение анкеты/формы</option>\r\n\t\t\t\t\t\t<option value=\"Размещение информации на своей странице\">Размещение информации на своей странице</option>\r\n\t\t\t\t\t\t<option value=\"Репост\">Репост</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required />\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\r\n\t\t\t\t\t<Select onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default AddEventHelpOnl;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { FormLayout, Input, Group, Button, PanelHeader, Panel, Textarea, Select, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/event'\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\n\r\nconst AddEventHelpOff = ({ fetchedUser, id, go }) => {\r\n\tconst formatDate = (date) =>{\r\n\t\tlet newDate = date.slice(8,10) + date.slice(4,8) + date.slice(0,4);\r\n\t\treturn newDate\r\n\t\t}\r\n\r\n\tconst [user, setUser] = React.useState();\r\n\tconst [nameEvent, setNameEvent] = React.useState();\r\n\tconst [place, setPlace] = React.useState();\r\n\tconst [date, setDate] = React.useState();\r\n\t//const [companyRole, setCompanyRole] = React.useState();\r\n\tconst [links, setLinks] = React.useState();\r\n\tconst [participants, setParticipants] = React.useState();\r\n\tconst [eventType, SetEventType] = React.useState();\r\n\tconst [description, SetDescription] = React.useState();\r\n\tconst [notes, SetNotes] = React.useState();\r\n\tconst [callback, setCallback] = React.useState();\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\r\n\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', userRequestURL, vkID)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetUser(data[0])\r\n\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\tconst onChangeNameEvent = (event) => {\r\n\t\tsetNameEvent(event.target.value)\r\n\t}\r\n\r\n\tconst onChangePlace = (event) => {\r\n\t\tsetPlace(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDate = (event) => {\r\n\t\tsetDate(formatDate(event.target.value))\r\n\t}\r\n\tconst onChangeCallback = (event) => {\r\n\t\tsetCallback(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeParticipants = (event) => {\r\n\t\tsetParticipants(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeLinks = (event) => {\r\n\t\tsetLinks(event.target.value)\r\n\t}\r\n\tconst onChangeEventType = (event) => {\r\n\t\tSetEventType(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeDescription = (event) => {\r\n\t\tSetDescription(event.target.value)\r\n\t}\r\n\r\n\tconst onChangeNotes = (event) => {\r\n\t\tSetNotes(event.target.value)\r\n\t}\r\n\r\n\tconst onClickForm = () => {\r\n\t\tlet body = JSON.stringify({\r\n\t\t\tparticipationForm: 'Помощь и поддержка',\r\n\t\t\teventForm: 'Офлайн',\r\n\t\t\tnameEvent: nameEvent,\r\n\t\t\teventPlace: place,\r\n\t\t\tdate: date,\r\n\t\t\teventType: eventType,\r\n\t\t\tdescription: description,\r\n\t\t\t//companyRole: companyRole,\r\n\t\t\tparticipants: participants,\r\n\t\t\tparticipantsCallback: callback,\r\n\t\t\tuploadsLinks: '',\r\n\t\t\tpublicationLinks: links,\r\n\t\t\tnotes: notes,\r\n\t\t\tambassador: user.fullName,\r\n\t\t\tuniversity: user.university\r\n\t\t})\r\n\t\tpostRequest('POST', requestURL, body)\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<Panel id={id}>\r\n\r\n\t\t\t<PanelHeader\r\n\t\t\t\tleft={<PanelHeaderBack style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventsecondhelp\" />}>\r\n\t\t\t\tФорма отчета</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<Input onChange={onChangeNameEvent} type=\"text\" name=\"name\" top=\"Название мероприятия\" required />\r\n\t\t\t\t\t<Input onChange={onChangeDate} type=\"date\" name=\"data\" top=\"Дата проведения\" required/>\r\n\t\t\t\t\t<Input onChange={onChangePlace} type=\"text\" name=\"name\" top=\"Место проведения\" required />\r\n\r\n\t\t\t\t\t<Select onChange={onChangeEventType} top=\"Тип мероприятия\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)\">Выступление на мероприятиях (День ИТ-знаний, Проектория, Цифровой прорыв, Урок цифры)</option>\r\n\t\t\t\t\t\t<option value=\"Волонтерство\">Волонтерство</option>\r\n\t\t\t\t\t\t<option value=\"Организация мероприятия\">Организация мероприятия</option>\r\n                        <option value=\"Информирование\">Информирование</option>\r\n\t\t\t\t\t</Select> \r\n\t\t\t\t\t<Textarea onChange={onChangeDescription} name=\"description\" top=\"Краткое описание\" required/>\t\t\t\t\r\n\t\t\t\t\t<Input onChange={onChangeCallback} type=\"text\" name=\"participants\" top=\"Отзывы участников\" />\r\n\t\t\t\t\t<Select  onChange={onChangeParticipants} top=\"Количество участников\" placeholder=\" \" required>\r\n\t\t\t\t\t\t<option value=\"1-29 человек\">1-29 человек</option>\r\n\t\t\t\t\t\t<option value=\"30-99 человек\">30-99 человек</option>\r\n\t\t\t\t\t\t<option value=\"100-299 человек\">100-299 человек</option>\r\n\t\t\t\t\t\t<option value=\"300-999 человек\">300-999 человек</option>\r\n\t\t\t\t\t\t<option value=\"1000 и более\">1000 и более</option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Textarea onChange={onChangeLinks} name=\"links\" top=\"Ссылки на посты\" />\r\n\t\t\t\t\t<Textarea onChange={onChangeNotes} name=\"notes\" top=\"Заметки\" />\r\n\r\n\t\t\t\t\t<Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={go} data-to=\"events\">Добавить</Button>\r\n\t\t\t\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\n\r\nexport default AddEventHelpOff;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { excelReport } from \"./functions/excelReport\"\r\nimport { View, Avatar, Select, RichCell, Div, Group, PanelHeader, Panel, ScreenSpinner, Epic, Tabbar, TabbarItem, Header, Cell, Button, ModalRoot, ModalCard, ModalPageHeader, FormLayoutGroup, FormLayout, CellButton } from '@vkontakte/vkui';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\r\nconst allEventsRequestURL = 'https://ambassador-todo.herokuapp.com/event'\r\n\r\nconst ROUTES = {\r\n    CONFIRM: 'confirm',\r\n    ATTENTION: 'attention',\r\n};\r\n\r\nconst ProfileMrg = ({ fetchedUser, id, go }) => {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [user, setUser] = React.useState();\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [fetch, setFetch] = React.useState(true);\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n    const [quantity, setQuantity] = React.useState();\r\n    const [month, setMonth] = React.useState();\r\n\r\n    const onChangeMonth = (event) => {\r\n        setMonth(event.target.value)\r\n    }\r\n\r\n    const confirm = () => {\r\n        let filtredEvents = eventsData.filter(function (i, n) { return (i.date) })\r\n        if (eventsData.length && filtredEvents.length !== 0) {\r\n            if (month === \"all\") {\r\n                filtredEvents = eventsData\r\n            }\r\n            else {\r\n                filtredEvents = eventsData.filter(function (i, n) { return (i.date[3] + i.date[4] === month) })\r\n            }\r\n            excelReport(filtredEvents)\r\n        }\r\n        else {\r\n            setActivePanel(ROUTES.ATTENTION);\r\n        }\r\n    }\r\n\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    }\r\n\r\n    const modal = (\r\n        <ModalRoot\r\n            activeModal={activeModal}\r\n            onClose={modalBack}\r\n        >\r\n            <ModalCard\r\n                id={ROUTES.CONFIRM}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader>\r\n                        Скачать файл?\r\n            </ModalPageHeader>\r\n                }\r\n            >\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Button mode=\"secondary\" size=\"xl\" id='1' style={{ backgroundColor: '#fc2c38', color: 'white' }} onMouseUp={modalBack} onClick={confirm} > Да </Button>\r\n\r\n                        <Button mode=\"secondary\" size=\"xl\" id='2' style={{ backgroundColor: '#fc2c38', color: 'white' }} onClick={modalBack}> Нет </Button>\r\n                    </FormLayoutGroup>\r\n                </FormLayout>\r\n\r\n\r\n            </ModalCard>\r\n\r\n            <ModalCard\r\n                id={ROUTES.ATTENTION}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader >\r\n                        Мероприятия отсутствуют!\r\n                    </ModalPageHeader>\r\n                }\r\n            ><Cell></Cell>\r\n            </ModalCard>\r\n        </ModalRoot>\r\n    )\r\n\r\n    if (fetch) {\r\n        if (fetchedUser != null) {\r\n            const vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n            postRequest('POST', requestURL, vkID)\r\n                .then(data => {\r\n                    setUser(data[0]);\r\n                    if (data[0].role === 'mentor') {\r\n                        postRequest('POST', requestURL, JSON.stringify({ \"mentor\": data[0].fullName }))\r\n                            .then(ambassador => {\r\n                                setQuantity(ambassador.length)\r\n                                let eventsForMentors = []\r\n                                for (let i = 0; i < ambassador.length; i++) {\r\n                                    postRequest('POST', eventsRequestURL, JSON.stringify({ 'ambassador': ambassador[i].fullName }))\r\n                                        .then(events => {\r\n                                            for (let i = 0; i < events.length; i++) {\r\n                                                eventsForMentors.push(events[i])\r\n                                            }\r\n                                            setEventsData(eventsForMentors)\r\n                                        })\r\n                                }\r\n                                setIsLoading(false)\r\n                                setFetch(false)\r\n                            })\r\n                    }\r\n                    if (data[0].role === 'staff') {\r\n                        postRequest('POST', requestURL, JSON.stringify({ \"role\": \"ambassador\" }))\r\n                            .then(ambassador => {\r\n                                setQuantity(ambassador.length)\r\n                                postRequest('GET', allEventsRequestURL)\r\n                                    .then(events => {\r\n                                        console.log(events)\r\n                                        setEventsData(events)\r\n                                        setIsLoading(false)\r\n                                        setFetch(false)\r\n                                    })\r\n                            })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View activePanel={id} modal={modal} >\r\n            <Panel id={id}>\r\n\r\n                <PanelHeader>\r\n                    Профиль\r\n                </PanelHeader>\r\n                <div style={{ marginBottom: 100 }}>\r\n                    {fetchedUser &&\r\n                        <Group>\r\n                            <RichCell\r\n                                href={\"https://vk.com/id\" + user.vkID}\r\n                                target=\"_blank\"\r\n                                before={<Avatar size={72} src={fetchedUser.photo_100} />}>\r\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\r\n                                <br />\r\n                                <span style={{ fontSize: '14px', color: 'grey' }}>{user.role}</span>\r\n                                <br />\r\n                            </RichCell>\r\n                        </Group>\r\n                    }\r\n                    <Group header={<Header mode=\"secondary\">Информация о амбассадорах</Header>}>\r\n                        <Cell indicator={quantity} >\r\n                            Количество амбассадоров\r\n                        </Cell>\r\n                        <Group header={<Header mode=\"secondary\">Статистика Excel</Header>}>\r\n                            <Div>\r\n                                <Select onChange={onChangeMonth} placeholder=\"Выберите месяц мероприятий\" bottom=\"Выберите месяц\" >\r\n                                    <option value=\"09\">Сентябрь</option>\r\n                                    <option value=\"10\">Октябрь</option>\r\n                                    <option value=\"11\">Ноябрь</option>\r\n                                    <option value=\"12\">Декабрь</option>\r\n                                    <option value=\"01\">Январь</option>\r\n                                    <option value=\"02\">Февраль</option>\r\n                                    <option value=\"03\">Март</option>\r\n                                    <option value=\"04\">Апрель</option>\r\n                                    <option value=\"05\">Май</option>\r\n                                    <option value=\"all\">За все время</option>\r\n                                </Select>\r\n                            </Div>\r\n                            <CellButton style={{ color: \"#fc2c38\" }} onClick={() => { setActivePanel(ROUTES.CONFIRM); }}>Скачать отчет</CellButton>\r\n                        </Group>\r\n                    </Group>\r\n                </div>\r\n\r\n\r\n                <Epic>\r\n                    <Tabbar style={{ marginTop: '100px' }}>\r\n                        <TabbarItem onClick={go} data-to=\"listambassador\" text=\"Амбассадоры\">\r\n                            <Icon28Users3Outline />\r\n                        </TabbarItem>\r\n\r\n                        <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\r\n                            <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\r\n                        </TabbarItem>\r\n                    </Tabbar>\r\n                </Epic>\r\n\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileMrg;","import $ from \"jquery\";\r\nlet id = 5\r\nlet urlExport = 'https://exporter.azurewebsites.net/api/export/ExportFromJSON/' + id;\r\n\r\nfunction findExtension(id) {\r\n    switch (id) {\r\n        case 5:\r\n            return \"xlsx\";\r\n        case 4:\r\n            return \"docx\";\r\n        case 3:\r\n            return \"pdf\";\r\n        default:\r\n            return \"notKnown\" + id;\r\n    }\r\n}\r\n\r\nexport function excelReport(data) {\r\n    let ext = findExtension(id);\r\n    let sortData = data.map((element) => {\r\n        delete element._id;\r\n        delete element.__v;\r\n        delete element.uploadsLinks;\r\n        return element\r\n    });\r\n    sortData = JSON.stringify(sortData)\r\n\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: urlExport,\r\n        data: JSON.stringify({ 'data': sortData }),\r\n        datatype: \"JSON\",\r\n        contentType: \"application/json; charset=utf-8\"\r\n    })\r\n        .done(function (result) {\r\n            let urlDownload = 'https://exporter.azurewebsites.net/api/export/GetFile/' + result;\r\n            urlDownload += \"?fileName=ReportOfAmbassador&extension=\" + ext;\r\n            window.location.href=urlDownload\r\n        })\r\n        .fail(function (f) {\r\n            alert(\"error:\" + f.responseText);\r\n        });\r\n}","import React from 'react';\r\nimport { formatPhoneNumber } from 'react-phone-number-input/input';\r\nimport { postRequest } from \"./functions/fetch.js\";\r\nimport { View, ModalRoot, Avatar, Div, ModalPage, ModalPageHeader, Select, Button, RichCell, Group, PanelHeader, Panel, ScreenSpinner, Header, Cell, PanelHeaderButton, Counter, CellButton } from '@vkontakte/vkui';\r\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\nconst eventsRequestURL = 'https://ambassador-todo.herokuapp.com/event/ambassador'\r\n\r\n\r\nconst ProfileForInfo = ({ id, go, info }) => {\r\n\r\n    const ROUTES = {\r\n        PROFILEINFO: 'profileInfo',\r\n        INSIDEEVENTS: 'inside',\r\n        OUTSIDEEVENTS: 'outside',\r\n        HELPANDSUPPORT: 'helpAndSupport',\r\n        UPGRADE: 'upgrade'\r\n    };\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [user, setUser] = React.useState();\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [fetch, setFetch] = React.useState(true);\r\n    const [grade, setGrade] = React.useState();\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n\r\n    const onChangeGrade = (event) => {\r\n        setGrade(event.target.value)\r\n    }\r\n\r\n    const onClickForm = () => {\r\n        let body = JSON.stringify({\r\n            _id: user._id,\r\n            vkID: user.vkID,\r\n            grade: grade,\r\n        })\r\n        console.log(body)\r\n        postRequest('POST', 'https://ambassador-todo.herokuapp.com/access/update', body)\r\n        setFetch(true)\r\n    }\r\n\r\n    const profileModal = (\r\n        <ModalRoot\r\n            activeModal={activeModal}\r\n            onClose={modalBack}\r\n        >\r\n            <ModalPage\r\n                id={ROUTES.PROFILEINFO}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Подробнее\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell multiline indicator={<Cell>{user ? user.clothingSize : 'empty'}</Cell>} >\r\n                        Размер одежды\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.personalPostalAddress : 'empty'}</Cell>} >\r\n                        Почтовый адрес (с индексом)\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.latinFullName : 'empty'} </Cell>}>\r\n                        Амбассадорская почта\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.university : 'empty'}</Cell>} >\r\n                        Полное название учебного заведения\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.facultyFull : 'empty'}</Cell>} >\r\n                        Полное название факультета\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.facultyShortly : 'empty'} </Cell>}>\r\n                        Краткое название факультета\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.statusInUniversity : 'empty'}</Cell>} >\r\n                        Статус\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.facultyFull : 'empty'}</Cell>} >\r\n                        Факультет\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.specialty : 'empty'}</Cell>} >\r\n                        Специальность\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.universityPostalAddress : 'empty'}</Cell>} >\r\n                        Адрес учебного заведения\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.rectorFullName : 'empty'} </Cell>}>\r\n                        ФИО ректора\r\n                        </Cell>\r\n                    <Cell multiline indicator={<Cell>{user ? user.rectorPostalAddress : 'empty'}</Cell>} >\r\n                        Email ректора\r\n                        </Cell>\r\n\r\n\r\n                </Group>\r\n\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.INSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внутреннее\" && i.eventForm === \"Онлайн\") }).length : 'empty'} </Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.OUTSIDEEVENTS}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Внешнее\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.HELPANDSUPPORT}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Формат мероприятий\r\n                    </ModalPageHeader>}>\r\n                <Group>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return (i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Онлайн\") }).length : 'empty'}</Counter>}>\r\n                        Онлайн\r\n                            </Cell>\r\n                    <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                        indicator={<Counter >{eventsData ? eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" && i.eventForm === \"Офлайн\" }).length : 'empty'}</Counter>}>\r\n                        Офлайн\r\n                            </Cell>\r\n                </Group>\r\n            </ModalPage>\r\n\r\n            <ModalPage\r\n                id={ROUTES.UPGRADE}\r\n                onClose={modalBack}\r\n                header={\r\n                    <ModalPageHeader\r\n                        left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                        Изменить grade\r\n                    </ModalPageHeader>}>\r\n                <Group >\r\n                    <Div>\r\n                        <Select onChange={onChangeGrade} top=\"Grade\" placeholder={user ? user.grade : \"empty\"} required>\r\n                            <option value=\"Freshman\">Freshman</option>\r\n                            <option value=\"Trainee\">Trainee</option>\r\n                            <option value=\"Junior\">Junior</option>\r\n                            <option value=\"Middle\">Middle</option>\r\n                            <option value=\"Senior\">Senior</option>\r\n                        </Select>\r\n                    </Div>\r\n                    <Cell> </Cell>\r\n                    <Div>\r\n                        <Button style={{ backgroundColor: '#fc2c38' }} type='submit' size='xl' onClick={onClickForm} onMouseUp={modalBack} >Изменить</Button>\r\n                    </Div>\r\n                </Group>\r\n                <Cell> </Cell>\r\n            </ModalPage>\r\n\r\n        </ModalRoot>\r\n    )\r\n\r\n    if (fetch) {\r\n        postRequest('POST', requestURL, JSON.stringify({ \"vkID\": info }))\r\n            .then(data => {\r\n                setUser(data[0]);\r\n                postRequest('POST', eventsRequestURL, JSON.stringify({ \"ambassador\": data[0].fullName }))\r\n                    .then(events => {\r\n                        setEventsData(events)\r\n                        setIsLoading(false)\r\n                        setFetch(false)\r\n                    })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View activePanel={id} modal={profileModal}>\r\n            <Panel id={id}>\r\n\r\n                <PanelHeader\r\n                    left={<PanelHeaderButton style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"listambassador\" > <Icon24Cancel /></PanelHeaderButton>}>\r\n                    Профиль\r\n            </PanelHeader>\r\n                <div style={{ marginBottom: 100 }}>\r\n                    {\r\n                        <Group>\r\n                            <RichCell\r\n                                href={\"https://vk.com/id\" + user.vkID}\r\n                                target=\"_blank\">\r\n                                <span style={{ fontSize: '18px' }}>{user.fullName}</span>\r\n                                <br />\r\n                                <span style={{ fontSize: '14px', color: 'grey' }}>{user.grade}</span>\r\n                                <br />\r\n                            </RichCell>\r\n                            <CellButton style={{ color: '#fc2c38' }} onClick={() => { setActivePanel(ROUTES.UPGRADE); }}>Изменить grade</CellButton>\r\n                        </Group>\r\n                    }\r\n\r\n                    <Group header={<Header mode=\"secondary\">Статистика</Header>}>\r\n                        <Cell before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.length}</Counter>}>\r\n                            Всего мероприятий\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.INSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внутреннее\" }).length}</Counter>}>\r\n                            Внутренние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.OUTSIDEEVENTS); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Внешнее\" }).length}</Counter>}>\r\n                            Внешние мероприятия\r\n                            </Cell>\r\n                        <Cell onClick={() => { setActivePanel(ROUTES.HELPANDSUPPORT); }} before={<Avatar style={{ background: '#fc2c38' }} size={28} shadow={false}><Icon16Like fill=\"var(--white)\" /></Avatar>}\r\n                            indicator={<Counter key={user._id}>{eventsData.filter(function (i, n) { return i.participationForm === \"Помощь и поддержка\" }).length}</Counter>}>\r\n                            Помощь и поддержка\r\n                            </Cell>\r\n\r\n                    </Group>\r\n                    <Group header={<Header mode=\"secondary\">Информация о пользователе</Header>}>\r\n                        <Cell multiline indicator={user.town} >\r\n                            Город\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.birthday} >\r\n                            Дата рождения\r\n                        </Cell>\r\n                        <Cell multiline indicator={formatPhoneNumber(user.phoneNumber)} >\r\n                            Номер телефона\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.personalEmail} >\r\n                            Email\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.universityShortly} >\r\n                            Учебное заведение\r\n                        </Cell>\r\n                        <Cell multiline indicator={user.statusInUniversity} >\r\n                            Статус\r\n                        </Cell>\r\n                        <CellButton\r\n                            style={{ color: '#fc2c38' }}\r\n                            onClick={() => { setActivePanel(ROUTES.PROFILEINFO); }}>Дополнительная информация</CellButton>\r\n                    </Group>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileForInfo;","import React from 'react';\r\nimport { postRequest } from \"./functions/fetch.js\"\r\nimport { View, Div, ModalRoot, ModalPage, ModalPageHeader, Banner, Group, PanelHeader, Panel, PanelHeaderButton, Epic, Tabbar, TabbarItem, ScreenSpinner, Cell, InfoRow, Link, Placeholder } from '@vkontakte/vkui';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel'\r\nimport Icon20CalendarOutline from '@vkontakte/icons/dist/20/calendar_outline';\r\n\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon56AccessibilityOutline from '@vkontakte/icons/dist/56/accessibility_outline';\r\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\r\n\r\nconst requestURL = \"https://ambassador-todo.herokuapp.com/event/ambassador\"\r\nconst userRequestURL = \"https://ambassador-todo.herokuapp.com/access/find\"\r\nconst ROUTES = {\r\n    EVENTSINFO: 'eventsInfo'\r\n};\r\n\r\n\r\n\r\nconst EventsForInfo = ({ id, go, info }) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [eventsData, setEventsData] = React.useState();\r\n    const [activeModal, setActivePanel] = React.useState(null);\r\n    const [eventId, setEventId] = React.useState(0);\r\n    const [fetch, setFetch] = React.useState(true);\r\n\r\n    const modalBack = () => {\r\n        setActivePanel(null);\r\n    };\r\n\r\n    if (fetch) {\r\n        postRequest('POST', userRequestURL, JSON.stringify({ \"vkID\": info }))\r\n            .then(data => {\r\n                postRequest('POST', requestURL, JSON.stringify({ ambassador: data[0].fullName }))\r\n                    .then(data => {\r\n                        setEventsData(data)\r\n                        setIsLoading(false)\r\n                        setFetch(false)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <Panel id={id}>\r\n                <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                    <ScreenSpinner style={{ marginTop: '50%' }} />\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    if (eventsData.length > 0) {\r\n        const modal = (\r\n            <ModalRoot\r\n                activeModal={activeModal}\r\n                onClose={modalBack}\r\n            >\r\n                <ModalPage\r\n                    id={ROUTES.EVENTSINFO}\r\n                    onClose={modalBack}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            left={<PanelHeaderButton onClick={modalBack}><Icon24Cancel /></PanelHeaderButton>}>\r\n                            {eventsData ? eventsData[eventId].nameEvent : 'empty'}\r\n                        </ModalPageHeader>}>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n\r\n                    <Cell>\r\n                        <InfoRow header=\"Место проведения\">\r\n                            {eventsData ? eventsData[eventId].eventPlace : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Формат участия\">\r\n                            {eventsData ? eventsData[eventId].participationForm : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Дата проведения\">\r\n                            {eventsData ? eventsData[eventId].date : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Тип мероприятия\">\r\n                            {eventsData ? eventsData[eventId].eventType : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Роль компании\">\r\n                            {eventsData ? eventsData[eventId].companyRole : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Краткое описание\">\r\n                            {eventsData ? eventsData[eventId].description : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Количество участников\">\r\n                            {eventsData ? eventsData[eventId].participants : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Ссылки\">\r\n                            <Link href={eventsData[eventId].publicationLinks} target=\"_blank\"><span href={eventsData[eventId].publicationLinks} >{eventsData ? eventsData[eventId].publicationLinks : 'empty'}</span></Link>\r\n                        </InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow header=\"Заметки\">\r\n                            {eventsData ? eventsData[eventId].notes : 'empty'}\r\n                        </InfoRow>\r\n                    </Cell>\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        )\r\n\r\n        return (\r\n            <View activePanel={id} modal={modal}>\r\n                <Panel id={id}>\r\n                    <PanelHeader\r\n                        left={<PanelHeaderButton style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"listambassador\" > <Icon24Cancel /></PanelHeaderButton>}>\r\n                        Мероприятия\r\n                </PanelHeader>\r\n                    <Group>\r\n                        <Div>\r\n                            {eventsData.map((event, eventId) => (\r\n                                <Banner key={event._id}\r\n                                    header={<React.Fragment>\r\n                                        <span style={{ fontWeight: '300', color: \"#fc2c38\", marginBottom: '10px' }}>{event.eventForm}, {event.eventType}</span> <br />\r\n                                        <span>{event.nameEvent}</span>\r\n\r\n                                    </React.Fragment>}\r\n                                    subheader={<React.Fragment>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <Icon20CalendarOutline />\r\n                                        </div>\r\n                                        <div style={{ display: 'inline-block' }}>\r\n                                            <span style={{}}>{event.date}</span>\r\n                                        </div>\r\n\r\n                                    </React.Fragment>}\r\n                                    asideMode=\"expand\"\r\n                                    onClick={() => { setEventId(eventId); setActivePanel(ROUTES.EVENTSINFO); }}\r\n                                />\r\n                            ))}\r\n                        </Div>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderButton><Icon28AddOutline style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"addeventfirst\" /></PanelHeaderButton>}>\r\n                Мероприятия\r\n        </PanelHeader>\r\n            <Group>\r\n                <Div>\r\n                    <Placeholder\r\n                        icon={<Icon56AccessibilityOutline style={{ color: 'rgb(176,182,192)' }} />}\r\n                        stretched\r\n                    >\r\n                        Нет мероприятий<br />\r\n                    </Placeholder>\r\n                </Div>\r\n            </Group>\r\n\r\n            <Epic>\r\n                <Tabbar style={{ marginTop: '100px' }}>\r\n                    <TabbarItem onClick={go} data-to=\"listambassador\" text=\"Амбассадоры\">\r\n                        <Icon28Users3Outline />\r\n                    </TabbarItem>\r\n\r\n                    <TabbarItem style={{ color: \"#fc2c38\" }} onClick={go} data-to=\"profilemrg\" text=\"Профиль\">\r\n                        <Icon28UserOutline style={{ color: \"#fc2c38\" }} width={32} height={32} />\r\n                    </TabbarItem>\r\n                </Tabbar>\r\n            </Epic>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default EventsForInfo;","import React, { useState, useEffect } from 'react';\r\nimport { postRequest } from \"./panels/functions/fetch.js\";\r\nimport { Panel } from '@vkontakte/vkui';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Home from './panels/Home';\r\nimport Events from './panels/Events';\r\nimport Info from './panels/Info';\r\nimport Achivements from './panels/Achivements';\r\nimport Profile from './panels/Profile';\r\nimport ListAmbassador from './panels/listAmbassador';\r\nimport Editprofile from './panels/editProfile';\r\nimport Badge from './panels/Badge';\r\nimport AddEventFirst from './panels/AddEventFirst';\r\nimport AddEventSecondVnesh from './panels/AddEventSecondVnesh';\r\nimport AddEventSecondVnutr from './panels/AddEventSecondVnutr';\r\nimport AddEventSecondHelp from './panels/AddEventSecondHelp';\r\nimport AddEventVneshOff from './panels/AddEventVneshOff';\r\nimport AddEventVnutrOnl from './panels/AddEventVnutrOnl';\r\nimport AddEventVnutrOff from './panels/AddEventVnutrOff';\r\nimport AddEventHelpOnl from './panels/AddEventHelpOnl';\r\nimport AddEventHelpOff from './panels/AddEventHelpOff';\r\nimport ProfileMrg from './panels/profilemrg';\r\nimport ProfileForInfo from './panels/ProfileForInfo';\r\nimport EventsForInfo from './panels/EventsForInfo';\r\n\r\n\r\nconst ROUTES = {\r\n\tHOME: 'home',\r\n\tEVENTS: 'events',\r\n\tINFO: 'info',\r\n\tACHIVEMENTS: 'achivements',\r\n\tPROFILE: 'profile',\r\n\tEVENTSMENTOR: 'eventsmentor',\r\n\tEDITPROFILE: 'editprofile',\r\n\tBADGE: 'badge',\r\n\tADDEVENTFIRST: 'addeventfirst',\r\n\tADDEVENTSECONDVNESH: 'addeventsecondvnesh',\r\n\tADDEVENTSECONDVNUTR: 'addeventsecondvnutr',\r\n\tADDEVENTSECONDHELP: 'addeventsecondhelp',\r\n\tADDEVENTVNESHOFF: 'addeventvneshoff',\r\n\tADDEVENTVNUTRONL: 'addeventvnutronl',\r\n\tADDEVENTVNUTROFF: 'addeventvnutroff',\r\n\tADDEVENTHELPONL: 'addeventhelponl',\r\n\tADDEVENTHELPOFF: 'addeventhelpoff',\r\n\tPROFILEMRG: 'profilemrg',\r\n\tLISTAMBASSADOR: 'listambassador',\r\n\tPROFILEFORINFO: 'profileforinfo',\r\n\tEVENTSFORINFO: 'eventsforinfo',\r\n};\r\n\r\nconst requestURL = 'https://ambassador-todo.herokuapp.com/access/find'\r\n\r\n\r\nconst App = () => {\r\n\r\n\tconst [activePanel, setActivePanel] = useState(ROUTES.PROFILE);\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\tconst [isLoading, setIsLoading] = React.useState(true);\r\n\tconst [fetch, setFetch] = React.useState(true);\r\n\tconst [info, setInfo] = React.useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t\tsetInfo(e.currentTarget.dataset.id);\r\n\t};\r\n\r\n\tif (fetch) {\r\n\t\tif (fetchedUser != null) {\r\n\t\t\tconst vkID = JSON.stringify({ \"vkID\": fetchedUser.id })\r\n\t\t\tpostRequest('POST', requestURL, vkID)\r\n\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tif (data[0].role === 'ambassador') {\r\n\t\t\t\t\t\tsetActivePanel(ROUTES.PROFILE)\r\n\t\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (data[0].role === 'mentor' || data[0].role === 'staff') {\r\n\t\t\t\t\t\tsetActivePanel(ROUTES.PROFILEMRG)\r\n\t\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\t\tsetFetch(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\tif (isLoading === true) {\r\n\t\treturn (\r\n\t\t\t<Panel>\r\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\t\t\t\t\t<ScreenSpinner style={{ marginTop: '50%' }} />\r\n\t\t\t\t</div>\r\n\t\t\t</Panel>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Profile id='profile' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<Badge id='badge' go={go} />\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<AddEventFirst id='addeventfirst' go={go} />\r\n\t\t\t<AddEventSecondVnesh id='addeventsecondvnesh' go={go} />\r\n\t\t\t<Editprofile id='editprofile' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<AddEventSecondVnutr id='addeventsecondvnutr' go={go} />\r\n\t\t\t<AddEventSecondHelp id='addeventsecondhelp' go={go} />\r\n\t\t\t<AddEventVneshOff fetchedUser={fetchedUser} id='addeventvneshoff' go={go} />\r\n\t\t\t<AddEventVnutrOnl fetchedUser={fetchedUser} id='addeventvnutronl' go={go} />\r\n\t\t\t<AddEventVnutrOff fetchedUser={fetchedUser} id='addeventvnutroff' go={go} />\r\n\t\t\t<AddEventHelpOnl fetchedUser={fetchedUser} id='addeventhelponl' go={go} />\r\n\t\t\t<AddEventHelpOff fetchedUser={fetchedUser} id='addeventhelpoff' go={go} />\r\n\t\t\t<Achivements id='achivements' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<Info id='info' go={go} />\r\n\t\t\t<Events id='events' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<ProfileForInfo id='profileforinfo' go={go} info={info} />\r\n\t\t\t<EventsForInfo id='eventsforinfo' go={go} info={info} />\r\n\t\t\t<ProfileMrg id='profilemrg' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<ListAmbassador id='listambassador' fetchedUser={fetchedUser} go={go} />\r\n\t\t</View>\r\n\t);\r\n\r\n}\r\n\r\nexport default App;","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\nimport './styles.css'\r\n\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}